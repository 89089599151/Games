
"""
Truth-or-Dare Telegram Bot ‚Äî SINGLE FILE (aiogram 3.x)

‚öôÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ (–≤—Å—ë –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ):
- –õ–æ–±–±–∏ —Å /newgame, —Å—Ç–∞—Ä—Ç –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
- –ò–≥—Ä–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö –∏ –ª–∏—á–∫–µ, –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
- –ò–Ω–ª–∞–π–Ω-—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ü—Ä–∞–≤–¥–∞/–î–µ–π—Å—Ç–≤–∏–µ/–ü—Ä–æ–ø—É—Å–∫/–ó–∞–≤–µ—Ä—à–∏—Ç—å
- –¢–∞–π–º–µ—Ä —Ö–æ–¥–∞ (0/20/30/45/60 —Å–µ–∫.), –∞–≤—Ç–æ–ø—Ä–æ–ø—É—Å–∫/—à—Ç—Ä–∞—Ñ
- –û—á–∫–∏, /score, —É–¥–æ–±–Ω–æ–µ –ª–æ–±–±–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–æ—Å—Ç–∞–≤–∞ –º–µ–∂–¥—É –ø–∞—Ä—Ç–∏—è–º–∏
- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (–õ—ë–≥–∫–æ–µ, –î—Ä—É–∑—å—è, –†–æ–º–∞–Ω—Ç–∏–∫–∞, –ñ–µ—Å—Ç—å), –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ (0+/6+/12+/16+/18+)
- –ù–∞—Å—Ç—Ä–æ–π–∫–∏: /settings –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ ‚Äî –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –≤–æ–∑—Ä–∞—Å—Ç–∞, —Ç–∞–π–º–µ—Ä–∞, –æ—á–∫–æ–≤, —à—Ç—Ä–∞—Ñ–∞
- –ú–∏–Ω–∏-"—Å–ø–∏–Ω–Ω–µ—Ä" –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏ –µ–¥–∏–Ω–∞—è –ø–∞–Ω–µ–ª—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
- –ò–º–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∫–æ–ª–æ–¥—ã –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π: /import_deck {JSON}
  (—Ñ–æ—Ä–º–∞—Ç —Å–º. –Ω–∏–∂–µ)

üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
- –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ ENV-–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π BOT_TOKEN. –ù–ò–ö–û–ì–î–ê –Ω–µ —Ö–∞—Ä–¥–∫–æ–¥—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –∫–æ–¥.
  –ó–∞–ø—É—Å–∫:  BOT_TOKEN=123:ABC python bot.py

üß© –§–æ—Ä–º–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∫–æ–ª–æ–¥—ã (–¥–ª—è –∫–æ–º–∞–Ω–¥—ã /import_deck):
{
  "meta": {"lang": "ru", "version": 1},
  "items": [
    {
      "id": "rom-001",
      "type": "truth",           // "truth" –∏–ª–∏ "dare"
      "category": "–†–æ–º–∞–Ω—Ç–∏–∫–∞",
      "age": "12+",              // "0+" | "6+" | "12+" | "16+" | "18+"
      "tags": ["—Å–æ—Ü","–∫—Ä–µ–∞—Ç–∏–≤"], // –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ —Ç–µ–≥–∏
      "text": "–ö–∞–∫–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å –∏–¥–µ–∞–ª—å–Ω—ã–º?"
    }
  ]
}

üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: aiogram>=3, python-dotenv
pip install -U aiogram python-dotenv

¬© 2025. –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∫–∞–∫ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π, –≥–æ—Ç–æ–≤—ã–π –∫ –∑–∞–ø—É—Å–∫—É –ø—Ä–∏–º–µ—Ä.
"""

import os
from dotenv import load_dotenv

load_dotenv()
import asyncio
import json
import html
import random
import time
from dataclasses import dataclass, field
from typing import Dict, List, Optional, Sequence, Set, Tuple

from aiogram import Bot, Dispatcher, F
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command, CommandStart
from aiogram.types import (
    Message,
    CallbackQuery,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)

# ===========================
# CONFIG
# ===========================

BOT_TOKEN = os.getenv("BOT_TOKEN", "").strip()
if not BOT_TOKEN:
    raise SystemExit(
        "‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
        "BOT_TOKEN=123:ABC python bot.py"
    )

# –¢–∞–π–º–∏–Ω–≥–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–ø–∏–Ω–Ω–µ—Ä–∞
SPINNER_STEPS = 10
SPINNER_DELAY = 0.12
SAFETY_NOTE = " –¢–æ–ª—å–∫–æ –ø–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–º—É —Å–æ–≥–ª–∞—Å–∏—é, –±–µ–∑ –≤—Ä–µ–¥–∞ –∑–¥–æ—Ä–æ–≤—å—é. –ú–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –±–µ–∑ —à—Ç—Ä–∞—Ñ–∞."

# ===========================
# –ë–ê–ó–û–í–ê–Ø –ö–û–õ–û–î–ê (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
# ===========================

DEFAULT_DECK = [
    # –õ—ë–≥–∫–æ–µ ‚Äî –ø—Ä–∞–≤–¥–∞
    {"id":"light-t-01","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–æ–π –º–µ–º —É —Ç–µ–±—è —Å–µ–π—á–∞—Å –ª—é–±–∏–º—ã–π?"},
    {"id":"light-t-02","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –Ω–∞–≤—ã–∫ —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –≤—ã—É—á–∏—Ç—å?"},
    {"id":"light-t-03","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–°–∞–º–∞—è —Å—Ç—Ä–∞–Ω–Ω–∞—è –µ–¥–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø—Ä–æ–±–æ–≤–∞–ª(-–∞)?"},
    {"id":"light-t-04","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ï—Å–ª–∏ –±—ã —É —Ç–µ–±—è –±—ã–ª —Å–ª–æ–≥–∞–Ω, –∫–∞–∫ –±—ã –æ–Ω –∑–≤—É—á–∞–ª?"},
    {"id":"light-t-05","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç–µ–±—è –ø–æ‚Äë–Ω–∞—Å—Ç–æ—è—â–µ–º—É —É–¥–∏–≤–∏–ª–æ?"},
    {"id":"light-t-06","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–í —á—ë–º —Ç—ã —è–≤–Ω–æ —Ö–æ—Ä–æ—à(-–∞), –Ω–æ —Ä–µ–¥–∫–æ –æ–± —ç—Ç–æ–º –≥–æ–≤–æ—Ä–∏—à—å?"},
    {"id":"light-t-07","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–æ–π —É —Ç–µ–±—è —Ä–∏–Ω–≥—Ç–æ–Ω/–∑–≤—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?"},
    {"id":"light-t-08","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ß–µ–π —Å–æ–≤–µ—Ç –≤ —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ —Ç—ã —á–∞—â–µ –≤—Å–µ–≥–æ —Å–ª—É—à–∞–µ—à—å?"},
    {"id":"light-t-09","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ù–∞–∑–æ–≤–∏ —Ç—Ä–∏ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å—ã–≤–∞—é—Ç —Ç–≤–æ–π –¥–µ–Ω—å."},
    {"id":"light-t-10","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —É —Ç–µ–±—è ¬´—Ç–∏—Ö–∏–π¬ª guilty pleasure?"},
    {"id":"light-t-11","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã –∑–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª—Å—è –≤—ã—Ö–æ–¥–Ω–æ–π –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π, —á–µ–º –±—ã —Ç—ã –∑–∞–Ω—è–ª(–∞—Å—å) –≤–µ—Å—å –¥–µ–Ω—å –¥–ª—è —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è?"},
    {"id":"light-t-12","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –ø—Ä–∏–≤—ã—á–∫–æ–π –∏–∑ –¥–µ—Ç—Å—Ç–≤–∞ —Ç—ã –¥–æ —Å–∏—Ö –ø–æ—Ä –¥–æ—Ä–æ–∂–∏—à—å?"},
    {"id":"light-t-13","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ï—Å—Ç—å –ª–∏ –∫–∞–∫–æ–µ-—Ç–æ —Ö–æ–±–±–∏ –∏–ª–∏ –¥–µ–ª–æ, –∫–æ—Ç–æ—Ä—ã–º —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –∑–∞–Ω—è—Ç—å—Å—è, –Ω–æ –≤—Å—ë –Ω–∏–∫–∞–∫ –Ω–µ –¥–æ—Ö–æ–¥—è—Ç —Ä—É–∫–∏? –ß—Ç–æ —Ç–µ–±—è –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç?"},
    {"id":"light-t-14","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥(–ª–∞) —É–∂–∏–Ω–∞—Ç—å —Å –ª—é–±—ã–º –∏–∑–≤–µ—Å—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ–≥–æ –±—ã —Ç—ã –≤—ã–±—Ä–∞–ª(–∞) –∏ –æ —á—ë–º —Ö–æ—Ç–µ–ª(–∞) –±—ã —Å –Ω–∏–º –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?"},
    {"id":"light-t-15","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ —Ç—ã –æ–±—ã—á–Ω–æ –¥–µ–ª–∞–µ—à—å, —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å —Å–µ–±–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤ —Ö–∞–Ω–¥—Ä–µ?"},
    {"id":"light-t-16","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–µ —Å–∞–º–æ–µ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –∏–ª–∏ —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Ç—ã –ø—Ä–∏–Ω–∏–º–∞–ª(–∞) –≤ –∂–∏–∑–Ω–∏, –æ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ –∂–∞–ª–µ–µ—à—å?"},

    {"id":"light-t-17","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ï—Å–ª–∏ –±—ã –∑–æ–ª–æ—Ç–∞—è —Ä—ã–±–∫–∞ –º–æ–≥–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω–æ –ª—é–±–æ–µ —Ç–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ, —á—Ç–æ –±—ã —Ç—ã –∑–∞–≥–∞–¥–∞–ª(–∞)?"},
    {"id":"light-t-18","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫—É—é —Å–∞–º—É—é –±–µ—Å–ø–æ–ª–µ–∑–Ω—É—é –≤–µ—â—å —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø–æ–∫—É–ø–∞–ª(–∞)?"},
    {"id":"light-t-19","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ï—Å–ª–∏ –±—ã —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–∞—Å—å —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å, —á—Ç–æ –±—ã —Ç—ã –≤—ã–±—Ä–∞–ª(–∞)?"},
    {"id":"light-t-20","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–∑ –¥–µ—Ç—Å—Ç–≤–∞ –≤—Å–µ–≥–¥–∞ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±—è —É–ª—ã–±–∞—Ç—å—Å—è?"},
    {"id":"light-t-21","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ß–µ–≥–æ —Ç—ã –±–æ–∏—à—å—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"},
    {"id":"light-t-22","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–∞—è –ø–µ—Å–Ω—è —Å–ø–æ—Å–æ–±–Ω–∞ –ø–æ–¥–Ω—è—Ç—å —Ç–µ–±–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏?"},
    {"id":"light-t-23","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Å—Ç—Ä–∞–Ω–Ω–æ–µ —Ö–æ–±–±–∏ –∏–ª–∏ —É–≤–ª–µ—á–µ–Ω–∏–µ, –æ –∫–æ—Ç–æ—Ä–æ–º –º–∞–ª–æ –∫—Ç–æ –∑–Ω–∞–µ—Ç?"},
    {"id":"light-t-24","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ù–∞ —á—Ç–æ —Ç—ã –≥–æ—Ç–æ–≤(–∞) –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å —Ü–µ–ª—ã–π –¥–µ–Ω—å –∏ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —É—Å—Ç–∞—Ç—å?"},
    {"id":"light-t-25","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥(–ª–∞) –ø–æ–º–µ–Ω—è—Ç—å —Å–≤–æ—ë –∏–º—è, –∫–∞–∫–æ–µ –±—ã –≤—ã–±—Ä–∞–ª(–∞) –∏ –ø–æ—á–µ–º—É?"},
    {"id":"light-t-26","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ü–µ–Ω–∏—à—å –≤ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—ã—Ö?"},
    {"id":"light-t-27","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–° –∫–∞–∫–∏–º –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º —Ç—ã –º–µ—á—Ç–∞–ª(–∞) –±—ã –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –ª–∏—á–Ω–æ?"},
    {"id":"light-t-28","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ß—Ç–æ –≤—Å–µ–≥–¥–∞ —Å–ø–æ—Å–æ–±–Ω–æ —Ç–µ–±—è —Ä–∞–∑–≤–µ—Å–µ–ª–∏—Ç—å –¥–∞–∂–µ –≤ —Å–∞–º—ã–π —Ö–º—É—Ä—ã–π –¥–µ–Ω—å?"},
    {"id":"light-t-29","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ö–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—ã –±—ã –¥–∞–ª(–∞) —Ç–µ–∫—É—â–µ–π –≥–ª–∞–≤–µ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏?"},
    {"id":"light-t-30","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç —Ç–µ–±–µ –∫–æ–≥–¥–∞-–ª–∏–±–æ –¥–µ–ª–∞–ª–∏ –∏ —á—Ç–æ —Ç—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(–∞)?"},

    {"id":"light-t-31","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"6+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–µ —Ç–≤–æ—ë —Å–∞–º–æ–µ –ª—é–±–∏–º–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –∏ –ø–æ—á–µ–º—É?"},
    {"id":"light-t-32","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"6+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ï—Å–ª–∏ –±—ã —Ç—ã –Ω–∞—à—ë–ª –∫–ª–∞–¥, —á—Ç–æ –±—ã —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å —Ç–∞–º –Ω–∞–π—Ç–∏?"},
    {"id":"light-t-33","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π —Å—Ç—Ä–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ —Ç–µ–±–µ –∫–æ–≥–¥–∞-–ª–∏–±–æ –¥–∞—Ä–∏–ª–∏?"},
    {"id":"light-t-34","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"12+","tags":["—Å–æ—Ü"],"text":"–ë–µ–∑ –∫–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –æ–±–æ–π—Ç–∏—Å—å?"},
    {"id":"light-t-35","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–æ–π —Ç—Ä–µ–Ω–¥ –∏–ª–∏ –º–µ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –Ω–µ–¥–∞–≤–Ω–æ —Ç–µ–±—è —Å–∏–ª—å–Ω–æ –Ω–∞—Å–º–µ—à–∏–ª?"},
    {"id":"light-t-36","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"16+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ —Ç—ã —á–∞—Å—Ç–æ –¥–µ–ª–∞–µ—à—å, –∫–æ–≥–¥–∞ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç–µ–±—è –Ω–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–∏—Ç?"},
    {"id":"light-t-37","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–æ–π –º–æ–¥–Ω—ã–π —Ç—Ä–µ–Ω–¥ –∏–∑ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–π—á–∞—Å –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±—è —Å–º–µ—è—Ç—å—Å—è –Ω–∞–¥ —Å–æ–±–æ–π?"},
    {"id":"light-t-38","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –≥–ª—É–ø—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ —Ç—ã —Å–æ–≤–µ—Ä—à–∞–ª(-–∞) –∏–∑-–∑–∞ —Å–∫—É–∫–∏?"},
    {"id":"light-t-39","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ –∏–∑ –¥–µ—Ç—Å—Ç–≤–∞ –∏–ª–∏ —é–Ω–æ—Å—Ç–∏ —Ç—ã —Ç–∞–∫ –∏ –Ω–µ –∏–∑–±–∞–≤–∏–ª—Å—è/–Ω–µ –∏–∑–±–∞–≤–∏–ª–∞—Å—å –≤–æ –≤–∑—Ä–æ—Å–ª–æ–º –≤–æ–∑—Ä–∞—Å—Ç–µ?"},
    {"id":"light-t-40","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ß—Ç–æ —Å–∞–º–æ–µ –Ω–µ–ª–æ–≤–∫–æ–µ —Å–ª—É—á–∞–ª–æ—Å—å —Å —Ç–æ–±–æ–π –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–µ –∏–ª–∏ –≤–µ—á–µ—Ä–∏–Ω–∫–µ?"},
    {"id":"light-t-41","type":"truth","category":"–õ—ë–≥–∫–æ–µ","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –±–µ–∑—É–º–Ω—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ —Ç—ã —Å–æ–≤–µ—Ä—à–∞–ª(-–∞) –∏–∑-–∑–∞ —Å–ø–æ—Ä–∞ –∏–ª–∏ –ø–∞—Ä–∏?"},

    # –õ—ë–≥–∫–æ–µ ‚Äî –¥–µ–π—Å—Ç–≤–∏–µ
    {"id":"light-d-01","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ —Å–º–µ—Ö —Ç—Ä—ë—Ö —Ä–∞–∑–Ω—ã—Ö –∑–ª–æ–¥–µ–µ–≤."},
    {"id":"light-d-02","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°–¥–µ–ª–∞–π 10 –º–∏–Ω–∏‚Äë–ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π, —Å—á–∏—Ç–∞—è –Ω–∞ –≤—ã–¥—É–º–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ."},
    {"id":"light-d-03","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–û–∑–≤—É—á—å –Ω–∞ 15 —Å–µ–∫—É–Ω–¥ –ª—é–±–æ–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ–º–Ω–∞—Ç–µ."},
    {"id":"light-d-04","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–°–∫–∞–∂–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ —Ç—ë–ø–ª—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–≤—É–º –∏–≥—Ä–æ–∫–∞–º."},
    {"id":"light-d-05","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ü–æ–∫–∞–∂–∏ —Å–≤–æ—ë ¬´—Å–∞–º–æ–µ —Å–µ—Ä—å—ë–∑–Ω–æ–µ¬ª –ª–∏—Ü–æ –∏ –Ω–µ —Å–º–µ–π—Å—è 10 —Å–µ–∫—É–Ω–¥."},
    {"id":"light-d-06","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–û–ø–∏—Å—ã–≤–∞–π –≤—Å—ë –≤–æ–∫—Ä—É–≥ –±—É–¥—Ç–æ —Ç—ã —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä, 20 —Å–µ–∫—É–Ω–¥."},
    {"id":"light-d-07","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°–¥–µ–ª–∞–π 5 –Ω–µ–æ–±—ã—á–Ω—ã—Ö –ø–æ–∑ –π–æ–≥–∏ (–±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö)."},
    {"id":"light-d-08","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É —Å–º–µ—à–Ω–æ–π –Ω–∏–∫."},
    {"id":"light-d-09","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ü—Ä–æ–≥–æ–≤–æ—Ä–∏ —Å–∫–æ—Ä–æ–≥–æ–≤–æ—Ä–∫—É –±–µ–∑ –æ—à–∏–±–æ–∫: ¬´–ö–∞—Ä–ª —É –ö–ª–∞—Ä—ã...¬ª"},
    {"id":"light-d-10","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–æ—á–∏–Ω–∏ –∏ –ø—Ä–æ—á–∏—Ç–∞–π –¥–≤—É—Å—Ç–∏—à–∏–µ –æ —á—ë–º —É–≥–æ–¥–Ω–æ."},
    {"id":"light-d-11","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π –∞–Ω–µ–∫–¥–æ—Ç –∏–ª–∏ —Å–ª—É—á–∞–π, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–Ω–∏—à—å, –Ω–æ —Å–¥–µ–ª–∞–π –≤–∏–¥, –±—É–¥—Ç–æ —ç—Ç–æ —Ç—Ä–∞–≥–∏—á–µ—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è."},
    {"id":"light-d-12","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ —Ä–µ–∫–ª–∞–º—É –ª—é–±–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–¥—ë—Ç—Å—è —Ç–µ–±–µ –ø–æ–¥ —Ä—É–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Ç–µ–ª–µ–º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ –≤ –Ω–æ—á–Ω–æ–º —ç—Ñ–∏—Ä–µ."},
    {"id":"light-d-13","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°—Ç–∞–Ω—Ü—É–π –±–µ–∑ –º—É–∑—ã–∫–∏ —Ç–∞–∫, —Å–ª–æ–≤–Ω–æ —Ç—ã –Ω–∞ —Å–∞–º–æ–π –≤–µ—Å—ë–ª–æ–π –≤–µ—á–µ—Ä–∏–Ω–∫–µ –∂–∏–∑–Ω–∏."},
    {"id":"light-d-14","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∫–∞–∂–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–≤–æ–µ–π —Å—É–º–∫–∏ –∏–ª–∏ –∫–∞—Ä–º–∞–Ω–æ–≤ –∏ –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∫–∞–∂–¥—ã–π –ø—Ä–µ–¥–º–µ—Ç, —Å–ª–æ–≤–Ω–æ —ç—Ç–æ —ç–∫—Å–ø–æ–Ω–∞—Ç—ã –Ω–∞ –≤—ã—Å—Ç–∞–≤–∫–µ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏."},
    {"id":"light-d-15","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ü—Ä–æ–∏–∑–Ω–µ—Å–∏ –ª—é–±—É—é –∏–∑–≤–µ—Å—Ç–Ω—É—é —Ñ—Ä–∞–∑—É –∏–ª–∏ —Ü–∏—Ç–∞—Ç—É –∏–∑ —Ñ–∏–ª—å–º–∞ —Å–æ 100% —Å–µ—Ä—å—ë–∑–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º –ª–∏—Ü–∞ –∏ –Ω–µ —Å–º–µ–π—Å—è."},
    {"id":"light-d-16","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–¥–µ–ª–∞–π —Å–µ–±–µ –Ω–∞ –ª–∏—Ü–µ –±—ã—Å—Ç—Ä—ã–π –∞–∫–≤–∞–≥—Ä–∏–º –ø–∞–ª—å—Ü–∞–º–∏, –Ω–∞—Ä–∏—Å–æ–≤–∞–≤ —Å–º–µ—à–Ω—É—é –º–∞—Å–∫—É, –∏ –ø—Ä–æ—Ö–æ–¥–∏ —Ç–∞–∫ –æ—Å—Ç–∞—Ç–æ–∫ –∏–≥—Ä—ã."},

    {"id":"light-d-17","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ò—Å–ø–æ–ª–Ω–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–º–µ—à–Ω–æ–π —Ç–∞–Ω–µ—Ü –ø–æ–¥ –º—É–∑—ã–∫—É –∏–ª–∏ –±–µ–∑ –Ω–µ—ë —Ç–∞–∫, —á—Ç–æ–±—ã –æ–∫—Ä—É–∂–∞—é—â–∏–µ –∑–∞—Å–º–µ—è–ª–∏—Å—å."},
    {"id":"light-d-18","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –∏–ª–∏ –∑–∞–±–∞–≤–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —Ç–∞–∫, –±—É–¥—Ç–æ —ç—Ç–æ —Å–∞–º–æ–µ —Å–µ—Ä—å—ë–∑–Ω–æ–µ –∏–∑–≤–µ—Å—Ç–∏–µ –¥–Ω—è."},
    {"id":"light-d-19","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ –≥–æ–ª–æ—Å–æ–º –∏ –º–∏–º–∏–∫–æ–π –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–ª–∏ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç—å, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É—Å—Ç—å —É–≥–∞–¥–∞—é—Ç."},
    {"id":"light-d-20","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–ë—ã—Å—Ç—Ä–æ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ —Å–∫–æ—Ä–æ–≥–æ–≤–æ—Ä–∫—É ¬´–ù–∞ –¥–≤–æ—Ä–µ —Ç—Ä–∞–≤–∞, –Ω–∞ —Ç—Ä–∞–≤–µ –¥—Ä–æ–≤–∞¬ª —Ç—Ä–∏ —Ä–∞–∑–∞ –±–µ–∑ –∑–∞–ø–∏–Ω–∫–∏."},
    {"id":"light-d-21","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–ø–æ–π –ø—Ä–∏–ø–µ–≤ –ª—é–±–∏–º–æ–π –ø–µ—Å–Ω–∏ –≤ –Ω–µ–æ–±—ã—á–Ω–æ–º —Å—Ç–∏–ª–µ ‚Äì –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –æ–ø–µ—Ä–Ω—ã–π –ø–µ–≤–µ—Ü –∏–ª–∏ –∫–∞–∫ —Ä–æ–±–æ—Ç."},
    {"id":"light-d-22","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–ü—Ä–æ–π–¥–∏ –ø–æ –∫–æ–º–Ω–∞—Ç–µ —Å –∫–Ω–∏–≥–æ–π –Ω–∞ –≥–æ–ª–æ–≤–µ, —Å—Ç–∞—Ä–∞—è—Å—å –Ω–µ —É—Ä–æ–Ω–∏—Ç—å –µ—ë –Ω–∏ —Ä–∞–∑—É."},
    {"id":"light-d-23","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ –ª—é–±–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ø—Ä–æ—Å—è—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–≥—Ä–æ–∫–∏, —Å–æ –∑–≤—É–∫–∞–º–∏ –∏ –ø–æ–≤–∞–¥–∫–∞–º–∏."},
    {"id":"light-d-24","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π —ç–∫—Å–ø—Ä–æ–º—Ç–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ç–∏—à–æ–∫ –æ –ª—é–±–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ –≤–æ–∫—Ä—É–≥ –∏ –ø—Ä–æ—á–∏—Ç–∞–π –µ–≥–æ –≤—Å–ª—É—Ö."},
    {"id":"light-d-25","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–æ—Ü"],"text":"–î–∞–π –≤—Å–µ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º —à—É—Ç–æ—á–Ω—ã–µ –ø—Ä–æ–∑–≤–∏—â–∞ –∏ –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∫–∞–∂–¥–æ–º—É –ø–æ –æ—á–µ—Ä–µ–¥–∏ –ø–æ –µ–≥–æ –Ω–æ–≤–æ–º—É –∏–º–µ–Ω–∏."},
    {"id":"light-d-26","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–∑–≤–∞—Ç—å —Ä—É—Å—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç –∑–∞–¥–æ–º –Ω–∞–ø–µ—Ä—ë–¥ –±–µ–∑ –æ—à–∏–±–æ–∫."},
    {"id":"light-d-27","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–†–∞–∑—ã–≥—Ä–∞–π –ø–∞–Ω—Ç–æ–º–∏–º—É –±–µ–∑ —Å–ª–æ–≤, —á—Ç–æ–±—ã –æ—Å—Ç–∞–ª—å–Ω—ã–µ —É–≥–∞–¥–∞–ª–∏, —á—Ç–æ —Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å."},
    {"id":"light-d-28","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ù–∞—Ä–∏—Å—É–π —Å–≤–æ–π –∞–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏ –∏ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–ø–∞–Ω–∏–∏."},
    {"id":"light-d-29","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ù–∞–¥–µ–Ω—å –∏–º–ø—Ä–æ–≤–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ¬´—Ç—é—Ä–±–∞–Ω¬ª –∏ –≤—ã–¥–∞–π —à—É—Ç–æ—á–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –ø–æ –æ—á–µ—Ä–µ–¥–∏."},
    {"id":"light-d-30","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–° –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏ –≤—ã—Ç—è–Ω–∏ –ª—é–±–æ–π –ø—Ä–µ–¥–º–µ—Ç –∏ —Ä–∞–∑—ã–≥—Ä–∞–π –º–∏–Ω–∏-—Å—Ü–µ–Ω–∫—É, –≥–¥–µ –æ–Ω –∏–≥—Ä–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é —Ä–æ–ª—å."},
    {"id":"light-d-31","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ –ø–∞–Ω—Ç–æ–º–∏–º–æ–π —ç–º–æ—Ü–∏—é –∏–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –∫–æ–º–ø–∞–Ω–∏—è, –±–µ–∑ –µ–¥–∏–Ω–æ–≥–æ —Å–ª–æ–≤–∞."},
    {"id":"light-d-32","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ó–∞ –º–∏–Ω—É—Ç—É –Ω–∞—Ä–∏—Å—É–π –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∞–≤—Ç–æ–ø–æ—Ä—Ç—Ä–µ—Ç, –≤—ã—Ä–∞–∂–∞—é—â–∏–π —Ç–≤–æ—ë —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏, –∏ –æ–±—ä—è—Å–Ω–∏ –µ–≥–æ."},
    {"id":"light-d-33","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–î–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã –≥–æ–≤–æ—Ä–∏ —Å –Ω–µ–æ–±—ã—á–Ω—ã–º –∞–∫—Ü–µ–Ω—Ç–æ–º –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ç–∞—Ç–∞–º–∏ –∏–∑ —Ñ–∏–ª—å–º–æ–≤/–ø–µ—Å–µ–Ω; –∑–∞–±—É–¥–µ—à—å ‚Äî –ø–æ–ª—É—á–∏—à—å —à—É—Ç–æ—á–Ω–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –æ—Ç –¥—Ä—É–∑–µ–π."},

    {"id":"light-d-34","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"6+","tags":["–∞–∫—Ç–∏–≤"],"text":"–ü—Ä–æ–π–¥–∏ –ø–æ –∫–æ–º–Ω–∞—Ç–µ –±–æ–∫–æ–º, –∫–∞–∫ –∫—Ä–∞–±."},
    {"id":"light-d-35","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"6+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ —Ä–æ–±–æ—Ç–∞, –≥–æ–≤–æ—Ä–∏ –º–æ–Ω–æ—Ç–æ–Ω–Ω–æ –∏ –¥–≤–∏–∂–∏—Å—å –ø–æ‚Äë—Ä–æ–±–æ—Ç—Å–∫–∏ 15 —Å–µ–∫—É–Ω–¥."},
    {"id":"light-d-36","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π —Å–º–µ—à–Ω–æ–π —Ö—ç—à—Ç–µ–≥, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç, –∏ –æ–∑–≤—É—á—å –µ–≥–æ."},
    {"id":"light-d-37","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ü–æ–∫–∞–∂–∏ –ø—è—Ç—å —Ä–∞–∑–Ω—ã—Ö —ç–º–æ—Ü–∏–π –∑–∞ 10 —Å–µ–∫—É–Ω–¥: —Ä–∞–¥–æ—Å—Ç—å, –∑–ª–æ—Å—Ç—å, —É–¥–∏–≤–ª–µ–Ω–∏–µ, –≥–æ—Ä–¥–æ—Å—Ç—å –∏ —Å–∫—É–∫—É!"},
    {"id":"light-d-38","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ–≥–∞–¥–∞–ª–∏—Å—å, –æ —á—ë–º —Ä–µ—á—å."},
    {"id":"light-d-39","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∫–∞–∂–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Å–¥–µ–ª–∞–ª(-–∞) –Ω–∞ —Å–≤–æ—ë–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ (–µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å–µ–∫—Ä–µ—Ç–Ω–∞—è)."},
    {"id":"light-d-40","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ —Å–≤–æ–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ —É—á–∏—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Ç–∞–∫, —á—Ç–æ–±—ã –º—ã –µ–≥–æ —É–∑–Ω–∞–ª–∏."},
    {"id":"light-d-41","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∑–≤–æ–ª—å –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É –ø—Ä–∏–¥—É–º–∞—Ç—å —Ç–µ–±–µ —Å–º–µ—à–Ω–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ –∏ –Ω–∞–∑–æ–≤–∏ —Å–µ–±—è –∏–º –≤—Å–ª—É—Ö."},
    {"id":"light-d-42","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ —Å–≤–æ–π —É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–∏—Ç—É–∞–ª —Ç–∞–∫, –±—É–¥—Ç–æ —Ç–µ–±—è —Å–Ω–∏–º–∞—é—Ç –≤ –∫–æ–º–µ–¥–∏–π–Ω–æ–º —Ä–µ–∞–ª–∏—Ç–∏-—à–æ—É."},
    {"id":"light-d-43","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ù–∞–∑–æ–≤–∏ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ, —á—Ç–æ –ø—Ä–∏—à–ª–æ –≤ –≥–æ–ª–æ–≤—É, –∞ –∑–∞—Ç–µ–º –ø—Ä–∏–¥—É–º–∞–π –∫ –Ω–µ–º—É —Å–º–µ—à–Ω–æ–π —Ä–µ–∫–ª–∞–º–Ω—ã–π —Å–ª–æ–≥–∞–Ω –∏ –æ–∑–≤—É—á—å –µ–≥–æ."},
    {"id":"light-d-44","type":"dare","category":"–õ—ë–≥–∫–æ–µ","age":"18+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∫–∞–∂–∏ —Ç—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª(-–∞) –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ, –∏ —Ä–∞—Å—Å–∫–∞–∂–∏, –≤ –∫–∞–∫–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ–Ω–∏ –±—ã–ª–∏."},

    # –î—Ä—É–∑—å—è ‚Äî –ø—Ä–∞–≤–¥–∞
    {"id":"friends-t-01","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö—Ç–æ –∏–∑ –Ω–∞—Å —á–∞—â–µ –≤—Å–µ–≥–æ —Ç–µ–±—è —Å–º–µ—à–∏—Ç –∏ –ø–æ—á–µ–º—É?"},
    {"id":"friends-t-02","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –æ–±—â–∏–π —Ä–∏—Ç—É–∞–ª –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ —Ç—ã –ª—é–±–∏—à—å?"},
    {"id":"friends-t-03","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ —Ç—ã –æ–±—ã—á–Ω–æ —Ä–µ—à–∞–µ—à—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å –¥—Ä—É–∑—å—è–º–∏?"},
    {"id":"friends-t-04","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ß–µ–º —Ç—ã –≥–æ—Ä–¥–∏—à—å—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ –∏–≥—Ä–æ–∫–æ–≤?"},
    {"id":"friends-t-05","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –±—ã —Ç—ã –¥–æ–±–∞–≤–∏–ª(-–∞) –∫ –Ω–∞—à–µ–º—É —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º—É –ø–ª–∞–Ω—É?"},
    {"id":"friends-t-06","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–æ–≤–µ—Ç —Ç—ã –±—ã –¥–∞–ª(-–∞) —Å–µ–±–µ –≥–æ–¥ –Ω–∞–∑–∞–¥?"},
    {"id":"friends-t-07","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ù–∞–∑–æ–≤–∏ –ø—Ä–∏–≤—ã—á–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø—Ä–æ–∫–∞—á–∞—Ç—å."},
    {"id":"friends-t-08","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–°–∞–º–∞—è –Ω–µ–ª–µ–ø–∞—è —Å–æ–≤–º–µ—Å—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è?"},
    {"id":"friends-t-09","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–æ–º—É –∏–∑ –Ω–∞—Å —Ç—ã –±—ã –¥–æ–≤–µ—Ä–∏–ª(-–∞) –≤–∞–∂–Ω—É—é –∑–∞–¥–∞—á—É –∏ –ø–æ—á–µ–º—É?"},
    {"id":"friends-t-10","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∞—è ¬´—Ñ–∏—à–∫–∞¬ª —É –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∞—Å?"},
    {"id":"friends-t-11","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –æ –º–æ–º–µ–Ω—Ç–µ, –∫–æ–≥–¥–∞ –¥—Ä—É–≥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ä—É—á–∏–ª —Ç–µ–±—è –≤ —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏. –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?"},
    {"id":"friends-t-12","type":"truth","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å –¥—Ä—É–∂–±—É –∏–ª–∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –æ—Ç–¥–∞–ª—è—Ç—å—Å—è –æ—Ç –¥—Ä—É–≥–∞? –ß—Ç–æ –ø–æ—Å–ª—É–∂–∏–ª–æ –ø—Ä–∏—á–∏–Ω–æ–π?"},
    {"id":"friends-t-13","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å, –ª–µ–≥–∫–æ –ª–∏ –∑–∞–≤–æ—ë–≤—ã–≤–∞—Ç—å —Ç–≤–æ—ë –¥–æ–≤–µ—Ä–∏–µ? –ß—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å —á–µ–ª–æ–≤–µ–∫, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º –¥—Ä—É–≥–æ–º?"},
    {"id":"friends-t-14","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ —Å–ª–æ–∂–Ω–µ–µ –¥–ª—è —Ç–µ–±—è: –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—â–µ–Ω–∏—è —É –¥—Ä—É–≥–∞, –∫–æ–≥–¥–∞ —Ç—ã –Ω–µ–ø—Ä–∞–≤(–∞), –∏–ª–∏ –ø—Ä–∏–Ω—è—Ç—å –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∏ –∑–∞–±—ã—Ç—å –æ–±–∏–¥—É? –ü–æ—á–µ–º—É?"},
    {"id":"friends-t-15","type":"truth","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã —Ç–≤–æ–π –±–ª–∏–∑–∫–∏–π –¥—Ä—É–≥ –ø–æ—Å—Ç—É–ø–∏–ª –ø—Ä–æ—Ç–∏–≤ —Ç–≤–æ–∏—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π, —Å—Ç–∞–ª(–∞) –±—ã —Ç—ã –µ–≥–æ –æ–ø—Ä–∞–≤–¥—ã–≤–∞—Ç—å –ø–µ—Ä–µ–¥ –¥—Ä—É–≥–∏–º–∏?"},
    {"id":"friends-t-16","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–°—á–∏—Ç–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ –¥—Ä—É–∑–µ–π –º–æ–∂–Ω–æ –∫—Ä–∏—Ç–∏–∫–æ–≤–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ, –∏–ª–∏ –ª—É—á—à–µ –≤—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏ –¥–µ—Ä–∂–∞—Ç—å –∫—Ä–∏—Ç–∏–∫—É –ø—Ä–∏ —Å–µ–±–µ?"},

    {"id":"friends-t-17","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –¥–ª—è —Ç–µ–±—è —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –≤ –¥—Ä—É–∂–±–µ?"},
    {"id":"friends-t-18","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –¥—Ä—É–≥ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤—ã—Ä—É—á–∏–ª —Ç–µ–±—è –≤ —Ç—Ä—É–¥–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏."},
    {"id":"friends-t-19","type":"truth","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –ø–æ—Å—Ç—É–ø–æ–∫ –¥—Ä—É–≥–∞ —Ç—ã –±—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–æ–≥(–ª–∞) –ø—Ä–æ—Å—Ç–∏—Ç—å?"},
    {"id":"friends-t-20","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–î–æ–≤–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –ø–æ—Ç–µ—Ä—è—Ç—å –±–ª–∏–∑–∫–æ–≥–æ –¥—Ä—É–≥–∞? –ü–æ—á–µ–º—É, –∫–∞–∫ –¥—É–º–∞–µ—à—å, —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?"},
    {"id":"friends-t-21","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ —Å–æ–ª–≥–∞—Ç—å –¥—Ä—É–≥—É, —á—Ç–æ–±—ã –Ω–µ –æ–±–∏–¥–µ—Ç—å –µ–≥–æ? –í —á—ë–º —ç—Ç–æ –±—ã–ª–æ?"},
    {"id":"friends-t-22","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –¥—Ä—É–∑—å—è —Ü–µ–Ω—è—Ç –≤ —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"},
    {"id":"friends-t-23","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∏–µ —Ç—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å —Å–∞–º—ã–º–∏ –≤–∞–∂–Ω—ã–º–∏ –≤ —Ö–æ—Ä–æ—à–µ–º –¥—Ä—É–≥–µ?"},
    {"id":"friends-t-24","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π –∏–ª–∏ –±–µ–∑—É–º–Ω—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ –≤—ã —Å–æ–≤–µ—Ä—à–∞–ª–∏ –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏?"},
    {"id":"friends-t-25","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ë—ã–≤–∞–ª–æ –ª–∏, —á—Ç–æ —Ç–µ–±–µ –ø—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –≤—ã–±–∏—Ä–∞—Ç—å –º–µ–∂–¥—É –¥—Ä—É–∂–±–æ–π –∏ —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º –≤–∞–∂–Ω—ã–º? –ß—Ç–æ —Ç—ã —Ä–µ—à–∏–ª(–∞)?"},
    {"id":"friends-t-26","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –¥—Ä—É–≥ –¥–µ—Ç—Å—Ç–≤–∞, —Å –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –æ–±—â–∞–µ—à—å—Å—è –¥–æ —Å–∏—Ö –ø–æ—Ä? –ö–∞–∫ –≤–∞–º —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤—è–∑—å?"},
    {"id":"friends-t-27","type":"truth","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–û–ø–∏—à–∏ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Ç—ã –≥–æ—Ä–¥–∏–ª—Å—è(–∞—Å—å) —Å–≤–æ–∏–º –¥—Ä—É–≥–æ–º. –ß—Ç–æ –æ–Ω –∏–ª–∏ –æ–Ω–∞ —Å–¥–µ–ª–∞–ª(–∞)?"},
    {"id":"friends-t-28","type":"truth","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã –±–ª–∏–∑–∫–∏–π –¥—Ä—É–≥ —Å–æ–≤–µ—Ä—à–∏–ª —Å–µ—Ä—å—ë–∑–Ω—ã–π –ø—Ä–æ—Å—Ç—É–ø–æ–∫, —Å—Ç–∞–ª(–∞) –±—ã —Ç—ã –µ–≥–æ –ø–æ–∫—Ä—ã–≤–∞—Ç—å –∏–ª–∏ —É–±–µ–¥–∏–ª(–∞) –ø—Ä–∏–∑–Ω–∞—Ç—å—Å—è?"},
    {"id":"friends-t-29","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –æ–∫—Ä—É–∂–∞—é—â–∏–µ —á–∞—â–µ –≤—Å–µ–≥–æ –≤ —Ç–µ–±–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–Ω–∏–º–∞—é—Ç –∏–ª–∏ –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–≤–∞—é—Ç?"},
    {"id":"friends-t-30","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥(–ª–∞) –ø—Ä–æ–∂–∏—Ç—å –¥–µ–Ω—å –∫–∞–∫ –∫—Ç–æ-—Ç–æ –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö, —á–µ–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª(–∞) –±—ã –∏ –ø–æ—á–µ–º—É?"},
    {"id":"friends-t-31","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–µ —É–±–µ–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏–Ω—Ü–∏–ø –∏–∑ —é–Ω–æ—Å—Ç–∏ —Ç—ã –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –∏–∑–º–µ–Ω–∏–ª(–∞) –≤–æ –≤–∑—Ä–æ—Å–ª–æ–º –≤–æ–∑—Ä–∞—Å—Ç–µ?"},
    {"id":"friends-t-32","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã —É —Ç–µ–±—è –±—ã–ª —à–∞–Ω—Å –∏–∑–≤–∏–Ω–∏—Ç—å—Å—è –ø–µ—Ä–µ–¥ –∫–µ–º-—Ç–æ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ, –∫—Ç–æ –±—ã —ç—Ç–æ –±—ã–ª –∏ –∑–∞ —á—Ç–æ?"},

    {"id":"friends-t-33","type":"truth","category":"–î—Ä—É–∑—å—è","age":"6+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ –∑–æ–≤—É—Ç —Ç–≤–æ–µ–≥–æ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æ –¥—Ä—É–≥–∞ –∏ –∑–∞ —á—Ç–æ —Ç—ã –µ–≥–æ —Ü–µ–Ω–∏—à—å?"},
    {"id":"friends-t-34","type":"truth","category":"–î—Ä—É–∑—å—è","age":"6+","tags":["—Å–æ—Ü"],"text":"–í –∫–∞–∫—É—é –∏–≥—Ä—É —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –∏–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏?"},
    {"id":"friends-t-35","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –¥–µ–ª–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ –ø–æ—Å–ª–µ —à–∫–æ–ª—ã?"},
    {"id":"friends-t-36","type":"truth","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–°—Å–æ—Ä–∏–ª—Å—è/—Å—Å–æ—Ä–∏–ª–∞—Å—å –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Å –¥—Ä—É–≥–æ–º –∏–∑-–∑–∞ –ø—É—Å—Ç—è–∫–∞? –£–¥–∞–ª–æ—Å—å –ª–∏ –ø–æ—Ç–æ–º –ø–æ–º–∏—Ä–∏—Ç—å—Å—è?"},
    {"id":"friends-t-37","type":"truth","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –≤–∞–∂–Ω–µ–µ –≤ –¥—Ä—É–∂–±–µ: —á–µ—Å—Ç–Ω–æ—Å—Ç—å –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞? –ü–æ—á–µ–º—É?"},
    {"id":"friends-t-38","type":"truth","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å —á–µ–º-—Ç–æ —Ä–∞–¥–∏ –¥—Ä—É–≥–∞? –ß—Ç–æ –∏–º–µ–Ω–Ω–æ?"},
    {"id":"friends-t-39","type":"truth","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–í–ª—é–±–ª—è–ª—Å—è/–≤–ª—é–±–ª—è–ª–∞—Å—å –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –≤ —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞ –∏–ª–∏ –ø–æ–¥—Ä—É–≥—É? –ö–∞–∫ —Ç—ã –ø–æ—Å—Ç—É–ø–∏–ª(-–∞) –≤ —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?"},
    {"id":"friends-t-40","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–æ—Ü"],"text":"–¢–µ—Ä—è–ª(-–∞) –ª–∏ —Ç—ã –±–ª–∏–∑–∫–æ–≥–æ –¥—Ä—É–≥–∞ –∏–∑-–∑–∞ —Å–µ—Ä—å—ë–∑–Ω–æ–π —Å—Å–æ—Ä—ã? –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –∏ –æ–±—â–∞–µ—Ç–µ—Å—å –ª–∏ –≤—ã —Å–µ–π—á–∞—Å?"},
    {"id":"friends-t-41","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ —Ç–µ–±—è –º–æ–∂–µ—Ç —Å–∏–ª—å–Ω–µ–µ –≤—Å–µ–≥–æ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–µ?"},
    {"id":"friends-t-42","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–æ—Ü"],"text":"–°–º–æ–≥(–ª–∞) –±—ã —Ç—ã –ø—Ä–æ—Å—Ç–∏—Ç—å –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±—è —Å–µ—Ä—å—ë–∑–Ω–æ –ø–æ–¥–≤—ë–ª? –ë—ã–ª –ª–∏ —É —Ç–µ–±—è —Ç–∞–∫–æ–π —Å–ª—É—á–∞–π?"},
    {"id":"friends18-t-100","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ","–≤–∏–Ω–∞"],"text":"–ü—Ä–µ–¥–∞–≤–∞–ª(-–∞) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –±–ª–∏–∑–∫–æ–≥–æ –¥—Ä—É–≥–∞? –ï—Å–ª–∏ –¥–∞, –∫–∞–∫ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ —Å–º–æ–≥(-–ª–∞) –ª–∏ —Ç—ã –∏—Å–∫—É–ø–∏—Ç—å —Å–≤–æ—é –≤–∏–Ω—É?"},
    {"id":"friends18-t-101","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–æ–±–∏–¥–∞","–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å"],"text":"–ß—Ç–æ –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ —Å–¥–µ–ª–∞–ª –¥—Ä—É–≥, —Ç–µ–±—è –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –æ–±–∏–¥–µ–ª–æ? –¢—ã —Å–∫–∞–∑–∞–ª(-–∞) –µ–º—É –æ–± —ç—Ç–æ–º –∏–ª–∏ –ø—Ä–æ–º–æ–ª—á–∞–ª(-–∞)?"},
    {"id":"friends18-t-102","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–¥–æ–≤–µ—Ä–∏–µ","—Ä–∞—Å–∫–∞—è–Ω–∏–µ"],"text":"–î–æ–≤–µ—Ä—è–ª(-–∞) –ª–∏ —Ç—ã –¥—Ä—É–≥—É —Å–µ–∫—Ä–µ—Ç, –æ –∫–æ—Ç–æ—Ä–æ–º –ø–æ—Ç–æ–º –ø–æ–∂–∞–ª–µ–ª(-–∞)? –ö–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–ª–æ –Ω–∞ –≤–∞—à—É –¥—Ä—É–∂–±—É?"},
    {"id":"friends18-t-103","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Ä–µ–≤–Ω–æ—Å—Ç—å","–Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å"],"text":"–†–µ–≤–Ω–æ–≤–∞–ª(-–∞) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–∞ –∫ –µ–≥–æ –¥—Ä—É–≥–∏–º –¥—Ä—É–∑—å—è–º –∏–ª–∏ –ø–∞—Ä—Ç–Ω—ë—Ä—É? –ö–∞–∫ —Ç—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è(-–ª–∞—Å—å) —Å —ç—Ç–∏–º —á—É–≤—Å—Ç–≤–æ–º?"},
    {"id":"friends18-t-104","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–∑–∞–≤–∏—Å—Ç—å","—á–µ—Å—Ç–Ω–æ—Å—Ç—å"],"text":"–ó–∞–≤–∏–¥–æ–≤–∞–ª(-–∞) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ —É—Å–ø–µ—Ö—É –∏–ª–∏ —Ç–∞–ª–∞–Ω—Ç–∞–º –¥—Ä—É–≥–∞? –ü–æ–≤–ª–∏—è–ª–æ –ª–∏ —ç—Ç–æ –Ω–∞ –≤–∞—à–µ –æ–±—â–µ–Ω–∏–µ?"},
    {"id":"friends18-t-105","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–∞–º–æ–∏—Ä–æ–Ω–∏—è","—É—è–∑–≤–∏–º–æ—Å—Ç—å"],"text":"–ö–∞–∫—É—é —Å–≤–æ—é –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Ç—ã —á–∞—â–µ –≤—Å–µ–≥–æ –≤—ã—Å–º–µ–∏–≤–∞–µ—à—å –ø–µ—Ä–µ–¥ –¥—Ä—É–∑—å—è–º–∏ (—Å–∞–º–æ–∏—Ä–æ–Ω–∏—á–Ω–æ)? –ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —ç—Ç–æ?"},
    {"id":"friends18-t-106","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–∏—Ä–æ–Ω–∏—è","—á—É–≤—Å—Ç–≤–∞"],"text":"–°–ª—É—á–∞–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –ø–æ–¥—à—É—á–∏–≤–∞—Ç—å –Ω–∞–¥ –¥—Ä—É–≥–æ–º, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –æ–±–∏–¥—É –∏–ª–∏ —Ä–µ–≤–Ω–æ—Å—Ç—å? –ß—Ç–æ —ç—Ç–æ –±—ã–ª–∞ –∑–∞ —Å–∏—Ç—É–∞—Ü–∏—è?"},
    {"id":"friends18-t-107","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–±–µ–∑—É–º–∏–µ","–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –±–µ–∑—É–º–Ω—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ –≤—ã —Å –¥—Ä—É–≥–æ–º —Å–æ–≤–µ—Ä—à–∏–ª–∏ –≤–º–µ—Å—Ç–µ? –†–∞—Å—Å–∫–∞–∂–∏ –¥–µ—Ç–∞–ª–∏ —ç—Ç–æ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è."},
    {"id":"friends18-t-108","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø–æ–¥–¥–µ—Ä–∂–∫–∞","–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π —Å–∏–ª—å–Ω—ã–π –∞–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç—ã –ø–æ–ª—É—á–∞–ª(-–∞) –æ—Ç –¥—Ä—É–≥–∞, –æ –∫–æ—Ç–æ—Ä–æ–º –º–∞–ª–æ –∫—Ç–æ –∑–Ω–∞–µ—Ç?"},
    {"id":"friends18-t-109","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–≥—Ä–∞–Ω–∏—Ü—ã","–∫–æ–Ω—Ñ–ª–∏–∫—Ç"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã –≤ –¥—Ä—É–∂–±–µ, –∫–æ—Ç–æ—Ä—ã–µ –±–ª–∏–∑–∫–∏–π –¥—Ä—É–≥ –Ω–∞—Ä—É—à–∏–ª? –ß–µ–º —ç—Ç–æ –æ–±–µ—Ä–Ω—É–ª–æ—Å—å –¥–ª—è –≤–∞—à–µ–π –¥—Ä—É–∂–±—ã?"},
    {"id":"friends18-t-110","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø–æ—Ç–µ—Ä—è","–ø–µ—á–∞–ª—å"],"text":"–¢–µ—Ä—è–ª(-–∞) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –±–ª–∏–∑–∫–æ–≥–æ –¥—Ä—É–≥–∞ –∏–∑-–∑–∞ —Å—Å–æ—Ä—ã –∏–ª–∏ —Ä–∞–∑—Ä—ã–≤–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π? –ö–∞–∫ —Ç—ã –ø–µ—Ä–µ–∂–∏–ª(-–∞) —ç—Ç—É –ø–æ—Ç–µ—Ä—é?"},
    {"id":"friends18-t-111","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–æ—â–µ–Ω–∏–µ","–æ–±–∏–¥–∞"],"text":"–ö–∞–∫–æ–π –ø–æ—Å—Ç—É–ø–æ–∫ –¥—Ä—É–≥–∞ –±—ã–ª–æ —Ç—è–∂–µ–ª–µ–µ –≤—Å–µ–≥–æ –ø—Ä–æ—Å—Ç–∏—Ç—å, –∏ —É–¥–∞–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –µ–≥–æ –≤ –∏—Ç–æ–≥–µ –ø—Ä–æ—Å—Ç–∏—Ç—å?"},
    {"id":"friends18-t-112","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—é–º–æ—Ä","–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π –∏–ª–∏ –Ω–µ–ª–µ–ø—ã–π —Å–ª—É—á–∞–π –ø—Ä–æ–∏–∑–æ—à—ë–ª –º–µ–∂–¥—É —Ç–æ–±–æ–π –∏ –¥—Ä—É–≥–æ–º, –æ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –¥–æ —Å–∏—Ö –ø–æ—Ä –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç–µ?"},
    {"id":"friends18-t-113","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å—Ç—Ä–∞–Ω–Ω–æ—Å—Ç–∏","–æ–ø—ã—Ç"],"text":"–ö–∞–∫—É—é —Å–∞–º—É—é —Å—Ç—Ä–∞–Ω–Ω—É—é –ø—Ä–æ—Å—å–±—É –¥—Ä—É–≥–∞ —Ç–µ–±–µ –¥–æ–≤–æ–¥–∏–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏ —á–µ–º –≤—Å—ë –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å?"},
    {"id":"friends18-t-114","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–≥–∏–ø–æ—Ç–µ–∑–∞","–¥–æ–≤–µ—Ä–∏–µ"],"text":"–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞–º—è—Ç—å –ø—Ä–æ—Å—Ç—É–ø–æ–∫ –¥—Ä—É–≥–∞, –Ω–∞—Ä—É—à–∞—é—â–∏–π –∑–∞–∫–æ–Ω. –ö–æ–≥–æ –∏–∑ –¥—Ä—É–∑–µ–π —Ç—ã –ø–æ–∑–æ–≤—ë—à—å –Ω–∞ –ø–æ–º–æ—â—å –∏ –ø–æ—á–µ–º—É –¥–æ–≤–µ—Ä–∏—à—å—Å—è –∏–º–µ–Ω–Ω–æ –µ–º—É/–µ–π?"},
    {"id":"friends18-t-115","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ª–æ—è–ª—å–Ω–æ—Å—Ç—å","–º–æ—Ä–∞–ª—å"],"text":"–ü–æ—à—ë–ª(—à–ª–∞) –±—ã —Ç—ã –Ω–∞ –æ–±–º–∞–Ω –∏–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–∞ —Ä–∞–¥–∏ –∑–∞—â–∏—Ç—ã –±–ª–∏–∑–∫–æ–≥–æ –¥—Ä—É–≥–∞? –ù–∞—Å–∫–æ–ª—å–∫–æ –¥–∞–ª–µ–∫–æ —Ç—ã –≥–æ—Ç–æ–≤(-–∞) –∑–∞–π—Ç–∏ —Ä–∞–¥–∏ –¥—Ä—É–∂–±—ã?"},
    {"id":"friends18-t-116","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ª—é–±–æ–≤—å","–≥—Ä–∞–Ω–∏—Ü—ã"],"text":"–í–ª—é–±–ª—è–ª—Å—è(-–ª–∞—Å—å) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –≤ —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞? –ö–∞–∫ —ç—Ç–æ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ (–∏–ª–∏ —Å–µ–∫—Ä–µ—Ç) –ø–æ–≤–ª–∏—è–ª–æ –Ω–∞ –≤–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è?"},
    {"id":"friends18-t-117","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ª–∏—Ü–µ–º–µ—Ä–∏–µ","—Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –ø—Ä–∏—Ç–≤–æ—Ä—è—Ç—å—Å—è –¥—Ä—É–≥–æ–º –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –Ω–µ –Ω—Ä–∞–≤–∏–ª—Å—è? –ó–∞—á–µ–º —Ç—ã —ç—Ç–æ –¥–µ–ª–∞–ª(-–∞) –∏ –∫–∞–∫ –¥–æ–ª–≥–æ –ø—Ä–æ–¥–ª–∏–ª–∞—Å—å —ç—Ç–∞ '–¥—Ä—É–∂–±–∞'?"},
    {"id":"friends18-t-118","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–±–ª–∏–∑–æ—Å—Ç—å","—Å–µ–∫—Ä–µ—Ç—ã"],"text":"–ö—Ç–æ –∏–∑ —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π, –ø–æ-—Ç–≤–æ–µ–º—É, –∑–Ω–∞–µ—Ç —Ç–µ–±—è –ª—É—á—à–µ –≤—Å–µ—Ö, –∏ —á—Ç–æ —Ç–∞–∫–æ–≥–æ –æ–Ω/–æ–Ω–∞ –∑–Ω–∞–µ—Ç –æ —Ç–µ–±–µ, —á–µ–≥–æ –Ω–µ –∑–Ω–∞—é—Ç –¥—Ä—É–≥–∏–µ?"},
    {"id":"friends18-t-119","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞","–∞–Ω–∞–ª–∏–∑"],"text":"–°—á–∏—Ç–∞–µ—à—å –ª–∏ —Ç—ã —Å–µ–±—è —Ö–æ—Ä–æ—à–∏–º –¥—Ä—É–≥–æ–º? –ü–æ—á–µ–º—É –¥–∞ –∏–ª–∏ –Ω–µ—Ç? –ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —ç—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç."},
    {"id":"friends18-t-120","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–æ—à–ª–æ–µ","—Å–æ–∂–∞–ª–µ–Ω–∏–µ"],"text":"–ï—Å–ª–∏ –±—ã —É —Ç–µ–±—è –±—ã–ª–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–≤–∏–Ω–∏—Ç—å—Å—è –ø–µ—Ä–µ–¥ –æ–¥–Ω–∏–º –¥—Ä—É–≥–æ–º, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã —Å–∏–ª—å–Ω–æ –æ–±–∏–¥–µ–ª(-–∞) –≤ –ø—Ä–æ—à–ª–æ–º, –∫—Ç–æ –±—ã —ç—Ç–æ –±—ã–ª –∏ –∑–∞ —á—Ç–æ —Ç—ã –ø–æ–ø—Ä–æ—Å–∏–ª(-–∞) –±—ã –ø—Ä–æ—â–µ–Ω–∏—è?"},
    {"id":"friends18-t-121","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–≥—Ä–∞–Ω–∏—Ü—ã","—Ü–µ–Ω–Ω–æ—Å—Ç–∏"],"text":"–ß—Ç–æ –º–æ–≥–ª–æ –±—ã –∑–∞—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–±—è —Å—Ä–∞–∑—É –æ–±–æ—Ä–≤–∞—Ç—å –¥–∞–∂–µ –¥–∞–≤–Ω—é—é –¥—Ä—É–∂–±—É? –ì–¥–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–≤–æ—è –∫—Ä–∞—Å–Ω–∞—è —á–µ—Ä—Ç–∞?"},
    {"id":"friends18-t-122","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–æ–±–º–∞–Ω","–≤–∏–Ω–∞"],"text":"–ö–∞–∫—É—é —Å–∞–º—É—é –±–æ–ª—å—à—É—é –ª–æ–∂—å —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –≥–æ–≤–æ—Ä–∏–ª(-–∞) –¥—Ä—É–≥—É –∏ –ø–æ—á–µ–º—É —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª(-–∞)?"},
    {"id":"friends18-t-123","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å","–ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å"],"text":"–ï—Å—Ç—å –ª–∏ –¥—Ä—É–≥, –æ–±—â–µ–Ω–∏–µ —Å –∫–æ—Ç–æ—Ä—ã–º —Å–∫–æ—Ä–µ–µ –≤—Ä–µ–¥–∏—Ç —Ç–µ–±–µ, —á–µ–º –ø–æ–º–æ–≥–∞–µ—Ç? –ü–æ—á–µ–º—É —Ç—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å —ç—Ç—É –¥—Ä—É–∂–±—É?"},
    {"id":"friends18-t-124","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–æ–∑–≤–∏—â–∞","–∏—Ä–æ–Ω–∏—è"],"text":"–ö–∞–∫–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ –¥–∞–ª–∏ —Ç–µ–±–µ –¥—Ä—É–∑—å—è, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ç–∞–π–Ω–æ –æ–±–æ–∂–∞–µ—à—å –∏–ª–∏, –Ω–∞–æ–±–æ—Ä–æ—Ç, —Ç–µ—Ä–ø–µ—Ç—å –Ω–µ –º–æ–∂–µ—à—å?"},
    {"id":"friends18-t-125","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–≥–∏–ø–æ—Ç–µ–∑–∞","–ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è"],"text":"–ï—Å–ª–∏ –±—ã —Ç—ã –æ–∫–∞–∑–∞–ª—Å—è(-–∞—Å—å) –Ω–∞ –Ω–µ–æ–±–∏—Ç–∞–µ–º–æ–º –æ—Å—Ç—Ä–æ–≤–µ, –∫–æ–≥–æ –∏–∑ –¥—Ä—É–∑–µ–π —Ç—ã —Ö–æ—Ç–µ–ª(-–∞) –±—ã –≤–∏–¥–µ—Ç—å —Ä—è–¥–æ–º –∏ –ø–æ—á–µ–º—É? –ê –∫–æ–≥–æ —Ç–æ—á–Ω–æ –Ω–µ—Ç, –∏ –ø–æ—á–µ–º—É?"},
    {"id":"friends18-t-126","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–∫–æ–Ω—Ñ–ª–∏–∫—Ç","–ª–æ—è–ª—å–Ω–æ—Å—Ç—å"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –≤—ã–±–∏—Ä–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω—É –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ –º–µ–∂–¥—É –¥–≤—É–º—è –¥—Ä—É–∑—å—è–º–∏? –ö–∞–∫ —Ç—ã –ø–æ—Å—Ç—É–ø–∏–ª(-–∞) –∏ –ø–æ–∂–∞–ª–µ–ª(-–∞) –ª–∏ –ø–æ—Ç–æ–º –æ —Å–≤–æ—ë–º –≤—ã–±–æ—Ä–µ?"},
    {"id":"friends18-t-127","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è","—Ç–µ–ø–ª–æ"],"text":"–ö–∞–∫–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –¥—Ä—É–∂–±–µ –¥–ª—è —Ç–µ–±—è —Å–∞–º–æ–µ –¥–æ—Ä–æ–≥–æ–µ –∏ –ø–æ—á–µ–º—É –æ–Ω–æ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥–ª—è —Ç–µ–±—è –∑–Ω–∞—á–∏—Ç?"},
    {"id":"friends18-t-128","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ª–æ—è–ª—å–Ω–æ—Å—Ç—å","—á–µ—Å—Ç—å"],"text":"–ó–∞—â–∏—â–∞–ª(-–∞) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–∞, –∫–æ–≥–¥–∞ –µ–≥–æ –Ω–µ –±—ã–ª–æ —Ä—è–¥–æ–º –∏ –∫—Ç–æ-—Ç–æ –≥–æ–≤–æ—Ä–∏–ª –æ –Ω—ë–º –ø–ª–æ—Ö–æ? –ß—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–ª(-–∞) –≤ —Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?"},
    {"id":"friends18-t-129","type":"truth","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—É—è–∑–≤–∏–º–æ—Å—Ç—å","–≥—Ä–∞–Ω–∏—Ü—ã"],"text":"–ï—Å—Ç—å –ª–∏ —Ç–µ–º–∞, –∫–æ—Ç–æ—Ä—É—é —Ç–µ–±–µ —Å–ª–æ–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –¥–∞–∂–µ —Å —Å–∞–º—ã–º –±–ª–∏–∑–∫–∏–º –¥—Ä—É–≥–æ–º? –ß—Ç–æ —ç—Ç–æ –∑–∞ —Ç–µ–º–∞ –∏ –ø–æ—á–µ–º—É —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ –æ –Ω–µ–π –≥–æ–≤–æ—Ä–∏—Ç—å?"},

    # –î—Ä—É–∑—å—è ‚Äî –¥–µ–π—Å—Ç–≤–∏–µ
    {"id":"friends-d-01","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–°–¥–µ–ª–∞–π –≥—Ä—É–ø–ø–æ–≤–æ–µ —Ñ–æ—Ç–æ —Å –∑–∞–±–∞–≤–Ω–æ–π —Ç–µ–º–æ–π (–µ—Å–ª–∏ –æ—Ñ–ª–∞–π–Ω)."},
    {"id":"friends-d-02","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°—ã–≥—Ä–∞–π –º–∏–Ω–∏‚Äë—Å—Ü–µ–Ω–∫—É ¬´–º—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –∫–ª—é—á–∏¬ª, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–≤ —Ä–æ–ª–∏."},
    {"id":"friends-d-03","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ –æ–¥–Ω–æ–≥–æ –∏–∑ –¥—Ä—É–∑–µ–π —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω —É–∑–Ω–∞–ª —Å–µ–±—è."},
    {"id":"friends-d-04","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∂–¥–æ–º—É —Å–∫–∞–∂–∏, –∑–∞ —á—Ç–æ —Ç—ã –µ–≥–æ —Ü–µ–Ω–∏—à—å."},
    {"id":"friends-d-05","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –æ–±—ä—è–≤–∏ –Ω–∞—à –æ–±—â–∏–π –¥–µ–≤–∏–∑."},
    {"id":"friends-d-06","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°–¥–µ–ª–∞–π—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∂–µ—Å—Ç/—Ç–∞–Ω–µ—Ü –≤—Ç—Ä–æ—ë–º."},
    {"id":"friends-d-07","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ –≤–∏–¥–µ–æ–±–ª–æ–≥–µ—Ä–∞, —Ä–µ–∫–ª–∞–º–∏—Ä—É—é—â–µ–≥–æ —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã."},
    {"id":"friends-d-08","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–°–¥–µ–ª–∞–π –≥–æ–ª–æ—Å–æ–≤–æ–µ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º —Ç–æ—Å—Ç–æ–º."},
    {"id":"friends-d-09","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∫–∞–∂–¥–æ–º—É —ç–º–æ–¥–∑–∏‚Äë–≥–µ—Ä–∞–ª—å–¥–∏–∫—É."},
    {"id":"friends-d-10","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –º–∏–Ω–∏‚Äë–∞–Ω–µ–∫–¥–æ—Ç –±–µ–∑ —Å–º–µ—Ö–∞."},
    {"id":"friends-d-11","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ü–æ–¥–µ–ª–∏—Å—å —Ç—Ä–µ–º—è –∫–∞—á–µ—Å—Ç–≤–∞–º–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –æ—Å–æ–±–µ–Ω–Ω–æ —Ü–µ–Ω–∏—à—å –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥—Ä—É–∑–µ–π, –∏–ª–∏ –Ω–∞–∑–æ–≤–∏ —Å–≤–æ—ë –∫–∞—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä—ã–º –≥–æ—Ä–¥–∏—à—å—Å—è –∫–∞–∫ –¥—Ä—É–≥."},
    {"id":"friends-d-12","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ù–∞–ª–µ–π –≤ —Å—Ç–∞–∫–∞–Ω —Ä–∞–∑–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —Ç–æ—Å—Ç –∑–∞ –¥—Ä—É–∂–±—É ‚Äì –≤—ã–ø–µ–π —ç—Ç–æ—Ç —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–π ¬´–∫–æ–∫—Ç–µ–π–ª—å –¥—Ä—É–∂–±—ã¬ª –¥–æ –¥–Ω–∞."},
    {"id":"friends-d-13","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–û–±–Ω–∏–º–∏—Å—å —Å –∫–µ–º-—Ç–æ –∏ —à—ë–ø–æ—Ç–æ–º —Ä–∞—Å—Å–∫–∞–∂–∏ –µ–º—É —Å–∞–º—ã–π –Ω–µ–ª–µ–ø—ã–π —Å–µ–∫—Ä–µ—Ç –æ —Å–µ–±–µ, –∑–∞—Ç–µ–º –æ–±–º–µ–Ω—è–π—Ç–µ—Å—å —Å–µ–∫—Ä–µ—Ç–∞–º–∏."},
    {"id":"friends-d-14","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ò—Å–ø–µ–∫–∏ –æ–±—Ä–∞–∑–Ω—ã–π —Ç–æ—Ä—Ç –∏–∑ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ —Å–æ—Å–µ–¥—É —Å–ª–µ–≤–∞: –Ω–∞–∑–æ–≤–∏ –ø—è—Ç—å ¬´—Å–ª–æ—ë–≤¬ª ‚Äì –ø—è—Ç—å –ø—Ä–∏—è—Ç–Ω—ã—Ö —á–µ—Ä—Ç –∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π."},
    {"id":"friends-d-15","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–û–±—ä–µ–¥–∏–Ω–∏—Ç–µ—Å—å –≤—Å–µ–π –∫–æ–º–ø–∞–Ω–∏–µ–π –∏ –∑–∞ –º–∏–Ω—É—Ç—É –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Å–µ–Ω–∫—É –∏–ª–∏ –∫—Ä–∏—á–∞–ª–∫—É –æ –≤–∞—à–µ–π –¥—Ä—É–∂–±–µ."},
    {"id":"friends-d-16","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°—ã–≥—Ä–∞–π –≤ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É: –≤—Å—Ç–∞–Ω—å —Å–ø–∏–Ω–æ–π –∏ —É–ø–∞–¥–∏ –Ω–∞–≤–∑–Ω–∏—á—å, –¥–æ–≤–µ—Ä—è—è, —á—Ç–æ –¥—Ä—É–∑—å—è —Ç–µ–±—è –ø–æ–π–º–∞—é—Ç (—É–±–µ–¥–∏—Ç–µ—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!)."},

    {"id":"friends-d-17","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∑–≤–æ–Ω–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Ö–æ—Ä–æ—à–µ–º—É –¥—Ä—É–≥—É, –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–µ–π—á–∞—Å –Ω–µ—Ç —Ä—è–¥–æ–º, –∏ –≤–Ω–µ–∑–∞–ø–Ω–æ –ø—Ä–∏–∑–Ω–∞–π—Å—è, –∫–∞–∫ —Ü–µ–Ω–∏—à—å –≤–∞—à—É –¥—Ä—É–∂–±—É –∏ —Å–∫—É—á–∞–µ—à—å."},
    {"id":"friends-d-18","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–†–∞–∑—Ä–µ—à–∏ –ª—é–±–æ–º—É –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É –Ω–∞–ø–∏—Å–∞—Ç—å —Å —Ç–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–æ–º—É –∏–∑ –¥—Ä—É–∑–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ (–±–µ–∑ –æ–±–∏–¥–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è)."},
    {"id":"friends-d-19","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–û–±–Ω–∏–º–∏ –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ –∏ –ø—Ä–∏–¥—É–º–∞–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–µ—Å—ë–ª–æ–µ –¥—Ä—É–∂–µ—Å–∫–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ."},
    {"id":"friends-d-20","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–û–±–º–µ–Ω—è–π—Å—è —Å –ª—é–±—ã–º –∂–µ–ª–∞—é—â–∏–º –∏–≥—Ä–æ–∫–æ–º –∫–∞–∫–∏–º-–Ω–∏–±—É–¥—å –ø—Ä–µ–¥–º–µ—Ç–æ–º –¥–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–º."},
    {"id":"friends-d-21","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∑–≤–æ–ª—å –∫–∞–∂–¥–æ–º—É –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞—Ç—å —Ç–µ–±–µ –ø–æ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è —á–µ—Å—Ç–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –≤—Å–µ–º."},
    {"id":"friends-d-22","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –≤—Å–µ–º –æ —Å–≤–æ—ë–º –ª—É—á—à–µ–º –¥—Ä—É–≥–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç —Å—Ä–µ–¥–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö, –∏ –ø–æ—Ö–≤–∞–ª–∏ –µ–≥–æ."},
    {"id":"friends-d-23","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–í—ã–±–µ—Ä–∏ —Å–µ–±–µ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞. –í–º–µ—Å—Ç–µ –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –∏ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –∑–∞–±–∞–≤–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é, –ø—Ä–æ–∏–∑–Ω–æ—Å—è –ø–æ –æ–¥–Ω–æ–º—É —Å–ª–æ–≤—É –ø–æ –æ—á–µ—Ä–µ–¥–∏, –ø–æ–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–µ —Ä–∞—Å—Å–º–µ—é—Ç—Å—è."},
    {"id":"friends-d-24","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ –¥—É—ç—Ç–æ–º —Å –ª—é–±—ã–º –∏–≥—Ä–æ–∫–æ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø–µ—Å–Ω–∏ –æ –¥—Ä—É–∂–±–µ –∏–ª–∏ –≤–∞—à–µ–π –ª—é–±–∏–º–æ–π –ø–µ—Å–Ω–∏, —Å—Ç–∞—Ä–∞—è—Å—å –ø–µ—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ."},
    {"id":"friends-d-25","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–í—Å—Ç–∞–Ω—å—Ç–µ —Å–ø–∏–Ω–∞ –∫ —Å–ø–∏–Ω–µ —Å –∏–≥—Ä–æ–∫–æ–º —Å–ø—Ä–∞–≤–∞ –∏ –ø—Ä–∏—Å—è–¥—å—Ç–µ –≤–º–µ—Å—Ç–µ —Ç—Ä–∏ —Ä–∞–∑–∞, –Ω–µ —Ä–∞–∑—ä–µ–¥–∏–Ω—è—è —Ä—É–∫ –∏ –Ω–µ –ø–∞–¥–∞—è."},
    {"id":"friends-d-26","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–æ—Ü"],"text":"–î–∞–π –∫–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É —á–µ—Å—Ç–Ω—ã–π, –Ω–æ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç, —Å–ª–æ–≤–Ω–æ —Ç—ã –µ–≥–æ —Å—Ç–∞—Ä—ã–π –¥—Ä—É–≥."},
    {"id":"friends-d-27","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–û–±—ä–µ–¥–∏–Ω–∏—Å—å —Å —Å–æ—Å–µ–¥–æ–º –∏ —Ä–∞–∑—ã–≥—Ä–∞–π—Ç–µ –º–∏–Ω–∏-—Å—Ü–µ–Ω–∫—É, –∏–∑–æ–±—Ä–∞–∂–∞—è –∑–Ω–∞–º–µ–Ω–∏—Ç—ã—Ö –¥—Ä—É–∑–µ–π –≤—Ä–æ–¥–µ –®–µ—Ä–ª–æ–∫–∞ –∏ –í–∞—Ç—Å–æ–Ω–∞."},
    {"id":"friends-d-28","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["–∞–∫—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏–µ —Å –∫–∞–∂–¥—ã–º –∏–≥—Ä–æ–∫–æ–º –ø–æ –æ—á–µ—Ä–µ–¥–∏."},
    {"id":"friends-d-29","type":"dare","category":"–î—Ä—É–∑—å—è","age":"0+","tags":["—Å–º–µ—Ö"],"text":"–í—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞ –∏ –Ω–∞ –ø—è—Ç—å –º–∏–Ω—É—Ç –ø–æ–º–µ–Ω—è–π—Å—è —Å –Ω–∏–º —Ä–æ–ª—è–º–∏, –ø–∞—Ä–æ–¥–∏—Ä—É—è –µ–≥–æ –ø—Ä–∏–≤—ã—á–∫–∏, –ø–æ–∫–∞ –æ–Ω –ø–∞—Ä–æ–¥–∏—Ä—É–µ—Ç —Ç–µ–±—è."},

    {"id":"friends-d-30","type":"dare","category":"–î—Ä—É–∑—å—è","age":"6+","tags":["–∞–∫—Ç–∏–≤"],"text":"–ü–æ–∂–º–∏ —Ä—É–∫—É –∏–ª–∏ –¥–∞–π –ø—è—Ç—å –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É, –¥–µ–ª–∞—è —ç—Ç–æ –∫–∞–∫ –º–æ–∂–Ω–æ —ç–Ω–µ—Ä–≥–∏—á–Ω–µ–µ."},
    {"id":"friends-d-31","type":"dare","category":"–î—Ä—É–∑—å—è","age":"6+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –ø–æ–∫–∞–∂–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ —É –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π."},
    {"id":"friends-d-32","type":"dare","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–°–¥–µ–ª–∞–π –≥—Ä—É–ø–ø–æ–≤–æ–µ —Å–µ–ª—Ñ–∏ —Å–æ –≤—Å–µ–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏, –∏–∑–æ–±—Ä–∞–∑–∏–≤ –Ω–∞ —Ñ–æ—Ç–æ —Å–∞–º—ã–µ –∑–∞–±–∞–≤–Ω—ã–µ –ª–∏—Ü–∞."},
    {"id":"friends-d-33","type":"dare","category":"–î—Ä—É–∑—å—è","age":"12+","tags":["—Å–æ—Ü"],"text":"–û–±–Ω–∏–º–∏ –∏–≥—Ä–æ–∫–∞, —Å–∏–¥—è—â–µ–≥–æ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Ç–µ–±—è, –∏ —Å–∫–∞–∂–∏ –µ–º—É: \"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ç—ã –º–æ–π –¥—Ä—É–≥!\""},
    {"id":"friends-d-34","type":"dare","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–†–∞–∑—ã–≥—Ä–∞–π —Å—Ü–µ–Ω–∫—É: —Ç—ã –≥–µ—Ä–æ–π —Ñ–∏–ª—å–º–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—â–∞–µ—Ç—Å—è —Å –ª—É—á—à–∏–º –¥—Ä—É–≥–æ–º –Ω–∞–≤—Å–µ–≥–¥–∞ (–ø–æ–Ω–∞—Ä–æ—à–∫—É)."},
    {"id":"friends-d-35","type":"dare","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–ù–∞–∑–æ–≤–∏ —Ç—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–ª–∏ —É–º–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ö–æ—Ç–µ–ª(-–∞) –±—ã ¬´–ø–æ–∑–∞–∏–º—Å—Ç–≤–æ–≤–∞—Ç—å¬ª —É —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π."},
    {"id":"friends-d-36","type":"dare","category":"–î—Ä—É–∑—å—è","age":"16+","tags":["—Å–æ—Ü"],"text":"–î–∞–π –≤—Å–µ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º —à—É—Ç–æ—á–Ω—ã–µ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏: –∫—Ç–æ —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π, —Å–∞–º—ã–π –¥–æ–±—Ä—ã–π, —Å–∞–º—ã–π —É–º–Ω—ã–π, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ –ø–æ —Ç–≤–æ–µ–π –≤–µ—Ä—Å–∏–∏."},
    {"id":"friends-d-37","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é –æ –≤–∞—à–µ–π –¥—Ä—É–∂–±–µ, –∫–æ—Ç–æ—Ä—É—é –æ–±—ã—á–Ω–æ –Ω–∏–∫–æ–º—É –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å (—á—Ç–æ-—Ç–æ —Å—Ç—ã–¥–Ω–æ–µ –∏–ª–∏ —Å–º–µ—à–Ω–æ–µ)."},
    {"id":"friends-d-38","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–æ—Ü"],"text":"–ù–∞–π–¥–∏ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –¥—Ä—É–≥–∞, —Å –∫–æ—Ç–æ—Ä—ã–º –¥–∞–≤–Ω–æ –Ω–µ –æ–±—â–∞–ª—Å—è(-–∞—Å—å), –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–º—É –ø—Ä–∏—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å."},
    {"id":"friends-d-39","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ó–∞–ø–∏—à–∏ –∑–∞–±–∞–≤–Ω–æ–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –¥–ª—è —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞, –≥–¥–µ —Ç—ã –¥–µ–ª–∞–µ—à—å —á—Ç–æ-—Ç–æ —Å–º–µ—à–Ω–æ–µ, –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–º—É."},
    {"id":"friends18-d-100","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å","–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ—Å—Ç—å"],"text":"–ü–æ–∑–≤–æ–Ω–∏ —Å–µ–π—á–∞—Å –¥—Ä—É–≥—É (–Ω–µ –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö) –∏ –ø—Ä–∏–∑–Ω–∞–π—Å—è –µ–º—É, —á—Ç–æ —Ç—ã —Ü–µ–Ω–∏—à—å –µ–≥–æ –¥—Ä—É–∂–±—É ‚Äî –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å —é–º–æ—Ä–æ–º –∏–ª–∏ –≤–ø–æ–ª–Ω–µ —Å–µ—Ä—å—ë–∑–Ω–æ."},
    {"id":"friends18-d-101","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø–æ–¥–¥–µ—Ä–∂–∫–∞","—Ç–µ–ø–ª–æ"],"text":"–î–∞–π –∫–∞–∂–¥–æ–º—É –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥—Ä—É–∑–µ–π –ø–æ –æ–¥–Ω–æ–º—É –∏—Å–∫—Ä–µ–Ω–Ω–µ–º—É –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—É, –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–Ω–∏ –Ω–µ –æ–∂–∏–¥–∞—é—Ç —É—Å–ª—ã—à–∞—Ç—å."},
    {"id":"friends18-d-102","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø–æ–¥–¥–µ—Ä–∂–∫–∞","—é–º–æ—Ä"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –≤—Å–µ–º –æ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –¥—Ä—É–≥ —Å–∏–ª—å–Ω–æ —Ç–µ–±—è –≤—ã—Ä—É—á–∏–ª, –Ω–æ —Å–¥–µ–ª–∞–π —ç—Ç–æ –≤ –≤–∏–¥–µ –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ—Å—Ç–∞."},
    {"id":"friends18-d-103","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å","–¥–æ–≤–µ—Ä–∏–µ"],"text":"–ü–æ–∑–≤–æ–ª—å –∫–∞–∂–¥–æ–º—É –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–µ–º—É –¥—Ä—É–≥—É –∑–∞–¥–∞—Ç—å —Ç–µ–±–µ –ª—é–±–æ–π –ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∞ —Ç—ã –æ–±—è–∑–∞–Ω(-–∞) –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ–≥–æ —á–µ—Å—Ç–Ω–æ."},
    {"id":"friends18-d-104","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–ü–æ–∫–∞–∂–∏ —Å–∞–º—É—é –∫–æ–º–ø—Ä–æ–º–µ—Ç–∏—Ä—É—é—â—É—é –∏–ª–∏ —Å–º–µ—à–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –¥—Ä—É–≥–æ–º, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –¥–æ —Å–∏—Ö –ø–æ—Ä —Ö—Ä–∞–Ω–∏—à—å –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ."},
    {"id":"friends18-d-105","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–¥–æ–≤–µ—Ä–∏–µ","—Ä–∏—Å–∫"],"text":"–î–∞–π –ª—É—á—à–µ–º—É –¥—Ä—É–≥—É (–∏–ª–∏ —Ç–æ–º—É, –∫–æ–≥–æ –≤—ã–±–µ—Ä–µ—Ç –∫–æ–º–ø–∞–Ω–∏—è) –ø—Ä–∞–≤–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å —Ç–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –∏–∑ —Ç–≤–æ–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–±–µ–∑ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π –∏ –≥—Ä—É–±–æ—Å—Ç–∏)."},
    {"id":"friends18-d-106","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ","–ø—Ä–æ—â–µ–Ω–∏–µ"],"text":"–ù–∞ –æ–¥–Ω—É –º–∏–Ω—É—Ç—É –ø—Ä–µ–¥—Å—Ç–∞–≤—å —Å–µ–±—è –¥—Ä—É–≥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –æ–¥–Ω–∞–∂–¥—ã —Ç–µ–±—è –ø—Ä–µ–¥–∞–ª, –∏ –≤—Å–ª—É—Ö –∏–∑–≤–∏–Ω–∏—Å—å –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π –æ—Ç –µ–≥–æ –ª–∏—Ü–∞."},
    {"id":"friends18-d-107","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å","—Å–º—É—â–µ–Ω–∏–µ"],"text":"–ü—Ä–æ—á–∏—Ç–∞–π –≤—Å–ª—É—Ö –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) —Å–≤–æ–µ–º—É –ª—É—á—à–µ–º—É –¥—Ä—É–≥—É, –∏ –æ–±—ä—è—Å–Ω–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç."},
    {"id":"friends18-d-108","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–¥–æ–≤–µ—Ä–∏–µ","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–ù–∞–¥–µ–Ω—å –ø–æ–≤—è–∑–∫—É –Ω–∞ –≥–ª–∞–∑–∞ –∏ –ø–æ–∑–≤–æ–ª—å –ª—é–±–æ–º—É –∏–∑ –¥—Ä—É–∑–µ–π –Ω–∞–∫–æ—Ä–º–∏—Ç—å —Ç–µ–±—è —á–µ–º-–Ω–∏–±—É–¥—å –Ω–∞ —Å–≤–æ–π –≤—ã–±–æ—Ä."},
    {"id":"friends18-d-109","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—é–º–æ—Ä","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –¥—Ä—É–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, –≥–¥–µ –≤ —à—É—Ç–ª–∏–≤–æ–π —Ñ–æ—Ä–º–µ –ø–æ–∂–∞–ª—É–π—Å—è –Ω–∞ –∫–∞–∫–æ–π-—Ç–æ –∞–±—Å—É—Ä–¥–Ω—ã–π –∞—Å–ø–µ–∫—Ç –≤–∞—à–µ–π –¥—Ä—É–∂–±—ã."},
    {"id":"friends18-d-110","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–±–µ–∑—É–º–∏–µ","—é–º–æ—Ä"],"text":"–í—ã–ª–æ–∂–∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Ñ–æ—Ç–æ —Å –¥—Ä—É–≥–æ–º –≤ –∏—Å—Ç–æ—Ä–∏—é —Å –ø–æ–¥–ø–∏—Å—å—é: ¬´–õ—É—á—à–∏–µ –¥—Ä—É–∑—å—è –Ω–∞–≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –∫–æ–≥–¥–∞ –º—ã —Ç–≤–æ—Ä–∏–º –±–µ–∑—É–º—Å—Ç–≤–∞¬ª, –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –æ–±—ä—è—Å–Ω—è–π."},
    {"id":"friends18-d-111","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å—é—Ä–ø—Ä–∏–∑","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–ü—É—Å—Ç—å –∫–æ–º–ø–∞–Ω–∏—è —Ä–µ—à–∏—Ç, –∫–∞–∫–æ–º—É –∏–∑ —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π —Ç—ã –¥–æ–ª–∂–µ–Ω(-–Ω–∞) –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –ø–æ–∑–≤–æ–Ω–∏—Ç—å –∏ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Å–∫—É—á–∞–µ—à—å –ø–æ –Ω–µ–º—É/–Ω–µ–π."},
    {"id":"friends18-d-112","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ","—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ"],"text":"–ë–µ–∑ —Å–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∑–∏ —Å—Ü–µ–Ω—É, –∫–∞–∫ —Ç–µ–±—è –ø—Ä–µ–¥–∞—ë—Ç –¥—Ä—É–≥, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ø—Ä–æ–±—É—é—Ç —É–≥–∞–¥–∞—Ç—å, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å."},
    {"id":"friends18-d-113","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–æ—â–µ–Ω–∏–µ","—Å–æ–∂–∞–ª–µ–Ω–∏–µ"],"text":"–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–≤–∏–Ω–µ–Ω–∏–µ–º –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –¥—Ä—É–≥–∞, —Å –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –ø–æ—Å—Å–æ—Ä–∏–ª—Å—è(-–∞—Å—å), –Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π. –ü—Ä–æ—á–∏—Ç–∞–π –≤—Å–ª—É—Ö, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª(-–∞)."},
    {"id":"friends18-d-114","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Å–µ–∫—Ä–µ—Ç—ã","—é–º–æ—Ä"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ —Å–∞–º—ã–π –Ω–µ–ª–æ–≤–∫–∏–π ¬´—Å–µ–∫—Ä–µ—Ç¬ª –æ –¥—Ä—É–≥–µ, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –∏ —Ç–∞–∫ –≤—Å–µ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º –∏–∑–≤–µ—Å—Ç–µ–Ω."},
    {"id":"friends18-d-115","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—é–º–æ—Ä","–∏–≥—Ä–∞"],"text":"–í —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö 10 –º–∏–Ω—É—Ç –æ–±—Ä–∞—â–∞–π—Å—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –¥—Ä—É–≥—É –∫–∞–∫ ¬´–í–∞—à–µ –≤–µ–ª–∏—á–µ—Å—Ç–≤–æ¬ª –∏ —à—É—Ç–æ—á–Ω–æ –∏—Å–ø–æ–ª–Ω—è–π –µ–≥–æ/–µ—ë –Ω–µ–±–æ–ª—å—à–∏–µ –ø–æ—Ä—É—á–µ–Ω–∏—è."},
    {"id":"friends18-d-116","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å","–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å"],"text":"–ù–∞–∑–æ–≤–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –¥—Ä—É–≥–∞ —Ç—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –µ–≥–æ/–µ—ë –æ—Å–æ–±–µ–Ω–Ω–æ —Ü–µ–Ω–∏—à—å."},
    {"id":"friends18-d-117","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–±–µ–∑—É–º–∏–µ","—Å–≤—è–∑—å"],"text":"–°–¥–µ–ª–∞–π —Å –¥—Ä—É–∑—å—è–º–∏ –∑–¥–µ—Å—å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–µ —Å–µ–ª—Ñ–∏ —Å —Å–∞–º—ã–º–∏ –±–µ–∑—É–º–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏ –ª–∏—Ü –∏ —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ –µ—â—ë –æ–¥–Ω–æ–º—É –¥—Ä—É–≥—É, –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–¥–µ—Å—å –Ω–µ—Ç."},
    {"id":"friends18-d-118","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ","–º—É–∑—ã–∫–∞"],"text":"–°–ø–æ–π —Å—Ç—Ä–æ—á–∫—É –∏–∑ –ø–µ—Å–Ω–∏, –∫–æ—Ç–æ—Ä–∞—è –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —É —Ç–µ–±—è —Å –¥—Ä—É–∂–±–æ–π —Å –∫–µ–º-—Ç–æ –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö, –∏ –ø—É—Å—Ç—å –æ–Ω–∏ —É–≥–∞–¥–∞—é—Ç, –ø—Ä–æ –∫–æ–≥–æ —ç—Ç–∞ –ø–µ—Å–Ω—è."},
    {"id":"friends18-d-119","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—É—è–∑–≤–∏–º–æ—Å—Ç—å","–¥–æ–≤–µ—Ä–∏–µ"],"text":"–ù–∞–ø–∏—à–∏ –Ω–∞ –ª–∏—Å—Ç–∫–µ –æ–¥–∏–Ω —Å–≤–æ–π —Å—Ç—Ä–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –¥—Ä—É–∂–±–æ–π, –∏ –ø–æ—Å–ª–µ –∏–≥—Ä—ã –ø–æ–∫–∞–∂–∏ –µ–≥–æ —Ç–æ–ª—å–∫–æ —Å–≤–æ–µ–º—É –ª—É—á—à–µ–º—É –¥—Ä—É–≥—É."},
    {"id":"friends18-d-120","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–ø—Ä–æ—â–µ–Ω–∏–µ","—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ"],"text":"–†–∞–∑—ã–≥—Ä–∞–π —Å—Ü–µ–Ω–∫—É –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è —Å –¥—Ä—É–≥–æ–º –ø–æ—Å–ª–µ –∫—Ä—É–ø–Ω–æ–π —Å—Å–æ—Ä—ã, –Ω–∞—Ä–æ—á–Ω–æ –ø—Ä–µ—É–≤–µ–ª–∏—á–∏–≤–∞—è –¥—Ä–∞–º—É."},
    {"id":"friends18-d-121","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–Ω–æ—Å—Ç–∞–ª—å–≥–∏—è","—Å—é—Ä–ø—Ä–∏–∑"],"text":"–ü–æ–∑–≤–æ–Ω–∏ –¥—Ä—É–≥—É –¥–µ—Ç—Å—Ç–≤–∞, —Å –∫–æ—Ç–æ—Ä—ã–º –¥–∞–≤–Ω–æ –Ω–µ –æ–±—â–∞–ª—Å—è(-–∞—Å—å), –∏ –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏, –∫–∞–∫ —É –Ω–µ–≥–æ/–Ω–µ—ë –¥–µ–ª–∞."},
    {"id":"friends18-d-122","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–∫–æ–Ω—Ñ–ª–∏–∫—Ç","—é–º–æ—Ä"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –æ –∫—Ä—É–ø–Ω–æ–π —Å—Å–æ—Ä–µ —Å –¥—Ä—É–≥–æ–º, –Ω–æ –Ω–∞–∑–æ–≤–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—ã–º—ã—à–ª–µ–Ω–Ω—ã–º–∏ —Å–º–µ—à–Ω—ã–º–∏ –ø—Ä–æ–∑–≤–∏—â–∞–º–∏ –≤–º–µ—Å—Ç–æ –∏–º—ë–Ω."},
    {"id":"friends18-d-123","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ","—é–º–æ—Ä"],"text":"–°—ã–≥—Ä–∞–π —Å –ª—é–±—ã–º –¥—Ä—É–≥–æ–º –º–∏–Ω–∏-—Å—Ü–µ–Ω–∫—É: —Ç—ã –æ–±–≤–∏–Ω—è–µ—à—å –µ–≥–æ/–µ—ë –≤ –∫–∞–∫–æ–º-—Ç–æ –∞–±—Å—É—Ä–¥–Ω–æ–º –ø—Ä–æ—Å—Ç—É–ø–∫–µ, –∞ –æ–Ω/–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω(-–Ω–∞) –∏–º–ø—Ä–æ–≤–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–ø—Ä–∞–≤–¥–∞—Ç—å—Å—è."},
    {"id":"friends18-d-124","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ","—Ç–µ–ø–ª–æ"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ —Ç–æ—Å—Ç –≤ —á–µ—Å—Ç—å –¥—Ä—É–∑–µ–π, –≤–∫–ª—é—á–∏–≤ –≤ –Ω–µ–≥–æ –ø–æ —à—É—Ç–∫–µ –∏–ª–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—É –ø—Ä–æ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ."},
    {"id":"friends18-d-125","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—é–º–æ—Ä","–∏—Ä–æ–Ω–∏—è"],"text":"–í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –∑–¥–µ—Å—å –∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç—ã —à—É—Ç–æ—á–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª—è–π –≤—Å—ë, —á—Ç–æ —Ç–µ–±—è –≤ –Ω—ë–º/–Ω–µ–π '—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç', –±–µ–∑ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π."},
    {"id":"friends18-d-126","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–±–µ–∑—É–º–∏–µ","–∞–±—Å—É—Ä–¥"],"text":"–ü–æ–º–µ–Ω—è–π—Å—è –æ–±—É–≤—å—é —Å –ª—é–±—ã–º –¥—Ä—É–≥–æ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 10 –º–∏–Ω—É—Ç –∏–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã (—á—Ç–æ –¥–æ–ª—å—à–µ)."},
    {"id":"friends18-d-127","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ","—Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ"],"text":"–°–Ω–∏–º–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ —Å –¥—Ä—É–∑—å—è–º–∏, –≥–¥–µ –∫–∞–∂–¥—ã–π –∏–∑–æ–±—Ä–∞–∑–∏—Ç —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø \"–ø–ª–æ—Ö–æ–≥–æ –¥—Ä—É–≥–∞\". –í—ã–ª–æ–∂–∏ –µ–≥–æ –≤ —Å–µ—Ç—å (–µ—Å–ª–∏ –≤—Å–µ –Ω–µ –ø—Ä–æ—Ç–∏–≤)."},
    {"id":"friends18-d-128","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å","–Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å"],"text":"–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤–ø–µ—Ä–≤—ã–µ –≤—Å—Ç—Ä–µ—á–∞–µ—à—å –∫–∞–∂–¥–æ–≥–æ –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö. –û–ø–∏—à–∏, –∫–∞–∫–æ–µ –ø–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ–Ω/–æ–Ω–∞ –±—ã –Ω–∞ —Ç–µ–±—è –ø—Ä–æ–∏–∑–≤—ë–ª(–∞)."},
    {"id":"friends18-d-129","type":"dare","category":"–î—Ä—É–∑—å—è","age":"18+","tags":["–¥–æ–≤–µ—Ä–∏–µ","—é–º–æ—Ä"],"text":"–ü–æ–∑–≤–æ–ª—å –æ–¥–Ω–æ–º—É –∏–∑ –¥—Ä—É–∑–µ–π –∏–∑–º–µ–Ω–∏—Ç—å —Ç–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –≤ –æ–±—â–µ–º —á–∞—Ç–µ –Ω–∞ –ª—é–±–æ–µ –∑–∞–±–∞–≤–Ω–æ–µ –ø—Ä–æ–∑–≤–∏—â–µ –∏ –æ—Å—Ç–∞–≤—å –µ–≥–æ –Ω–∞ –Ω–µ–¥–µ–ª—é."},

    # –†–æ–º–∞–Ω—Ç–∏–∫–∞ ‚Äî –ø—Ä–∞–≤–¥–∞
    {"id":"romance-t-01","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∞—è –º–µ–ª–æ—á—å –¥–µ–ª–∞–µ—Ç —Å–≤–∏–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–Ω—ã–º?"},
    {"id":"romance-t-02","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ —Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å –∑–∞–±–æ—Ç—É –æ –ª—é–¥—è—Ö?"},
    {"id":"romance-t-03","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ò–¥–µ—è —Å–∞–º–æ–≥–æ –º–∏–ª–æ–≥–æ —Å—é—Ä–ø—Ä–∏–∑–∞?"},
    {"id":"romance-t-04","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–§–∏–ª—å–º/–ø–µ—Å–Ω—è, —Å –∫–æ—Ç–æ—Ä—ã–º —É —Ç–µ–±—è —Å–≤—è–∑–∞–Ω—ã —Ç—ë–ø–ª—ã–µ —á—É–≤—Å—Ç–≤–∞?"},
    {"id":"romance-t-05","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–¢–≤–æ–π —è–∑—ã–∫ –ª—é–±–≤–∏ (–≤–Ω–∏–º–∞–Ω–∏–µ, –≤—Ä–µ–º—è, –ø–æ–¥–∞—Ä–∫–∏, —Å–ª–æ–≤–∞, –ø–æ–º–æ—â—å)?"},
    {"id":"romance-t-06","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –¥–ª—è —Ç–µ–±—è ¬´–∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä¬ª?"},
    {"id":"romance-t-07","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –≤ –æ–±—â–µ–Ω–∏–∏ –¥–ª—è —Ç–µ–±—è –≤–∞–∂–Ω–∞?"},
    {"id":"romance-t-08","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–°–∞–º–∞—è –º–∏–ª–∞—è —Ñ—Ä–∞–∑–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Å–ª—ã—à–∞–ª(-–∞)?"},
    {"id":"romance-t-09","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç—ã —Ü–µ–Ω–∏—à—å –≤ –ø–∞—Ä—Ç–Ω—ë—Ä–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"},
    {"id":"romance-t-10","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∞—è ¬´–º–∞–ª–µ–Ω—å–∫–∞—è –∑–∞–±–æ—Ç–∞¬ª —Ç–µ–±—è —Ç—Ä–æ–≥–∞–µ—Ç?"},
    {"id":"romance-t-11","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ –≤ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?"},
    {"id":"romance-t-12","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–û–ø–∏—à–∏ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ –¥–ª—è —Å–µ–±—è: –≥–¥–µ, —Å –∫–µ–º –∏ —á–µ–º –±—ã –≤—ã –∑–∞–Ω–∏–º–∞–ª–∏—Å—å?"},
    {"id":"romance-t-13","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Å–∫—Ä—ã—Ç–∞—è —Ñ–∞–Ω—Ç–∞–∑–∏—è –∏–ª–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –∂–µ–ª–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä—ã–º —Ç—ã —Ä–µ–¥–∫–æ –¥–µ–ª–∏—à—å—Å—è?"},
    {"id":"romance-t-14","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∏–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º –∏–ª–∏ –∫–∞—á–µ—Å—Ç–≤–æ–º –ø–∞—Ä—Ç–Ω—ë—Ä–∞ —Ç—ã –æ—Å–æ–±–µ–Ω–Ω–æ –≥–æ—Ä–¥–∏–ª—Å—è(–∞—Å—å)?"},
    {"id":"romance-t-15","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–æ–≤–µ—Ç –æ –ª—é–±–≤–∏ —Ç—ã –±—ã –¥–∞–ª(–∞) –±–æ–ª–µ–µ —é–Ω–æ–º—É —Å–µ–±–µ?"},
    {"id":"romance-t-16","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–†–µ–≤–Ω–æ–≤–∞–ª(–∞) –ª–∏ —Ç—ã –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –±–µ–∑ –≤–µ—Å–∫–æ–π –ø—Ä–∏—á–∏–Ω—ã? –ö–∞–∫ —Å–ø—Ä–∞–≤–∏–ª—Å—è(–ª–∞—Å—å) —Å —ç—Ç–∏–º —á—É–≤—Å—Ç–≤–æ–º?"},

    {"id":"romance-t-17","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–í–µ—Ä–∏—à—å –ª–∏ —Ç—ã –≤ –ª—é–±–æ–≤—å —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞? –ü–æ—á–µ–º—É –¥–∞ –∏–ª–∏ –Ω–µ—Ç?"},
    {"id":"romance-t-18","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ü–æ–º–Ω–∏—à—å –ª–∏ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Ü–µ–ª—É–π? –ö–∞–∫ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?"},
    {"id":"romance-t-19","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ —Å–æ–≤–µ—Ä—à–∞–ª(–∞) –∏–ª–∏ –∫–æ—Ç–æ—Ä—ã–π –∫—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞–ª –¥–ª—è —Ç–µ–±—è?"},
    {"id":"romance-t-20","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –Ω–µ–ª–æ–≤–∫–∏–π –∏–ª–∏ —Å–º–µ—à–Ω–æ–π —Å–ª—É—á–∞–π —Å–ª—É—á–∞–ª—Å—è —Å —Ç–æ–±–æ–π –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–∏?"},
    {"id":"romance-t-21","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ó–∞ —á—Ç–æ —Ç—ã –ø–æ–ª—é–±–∏–ª(–∞) —Å–≤–æ—é –ø–µ—Ä–≤—É—é –ª—é–±–æ–≤—å, –µ—Å–ª–∏ –Ω–µ —Å–µ–∫—Ä–µ—Ç?"},
    {"id":"romance-t-22","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∏–ª–∏ –∂–µ—Å—Ç –ª—é–±–≤–∏ –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —Ç–µ–±—è –ø–æ—Ä–∞–∑–∏–ª?"},
    {"id":"romance-t-23","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–û–ø–∏—à–∏ —Ç—Ä–µ–º—è —Å–ª–æ–≤–∞–º–∏ —Å–≤–æ–µ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞."},
    {"id":"romance-t-24","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ï—Å—Ç—å –ª–∏ –ø–µ—Å–Ω—è –∏–ª–∏ —Ñ–∏–ª—å–º, –∫–æ—Ç–æ—Ä—ã–µ –∞—Å—Å–æ—Ü–∏–∏—Ä—É—é—Ç—Å—è —É —Ç–µ–±—è —Å –Ω–∞—Å—Ç–æ—è—â–µ–π –ª—é–±–æ–≤—å—é?"},
    {"id":"romance-t-25","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö ‚Äì —Å—Ç—Ä–∞—Å—Ç—å –∏–ª–∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ? –ü–æ—á–µ–º—É?"},
    {"id":"romance-t-26","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ë—ã–ª–∏ –ª–∏ —É —Ç–µ–±—è –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ç–∞–π–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –æ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ—á—Ç–∏ –Ω–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–ª?"},
    {"id":"romance-t-27","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ —Å—á–∏—Ç–∞–µ—à—å, –º–æ–≥—É—Ç –ª–∏ –±—ã–≤—à–∏–µ –≤–æ–∑–ª—é–±–ª–µ–Ω–Ω—ã–µ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –¥—Ä—É–∑—å—è–º–∏? –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Ç–∞–∫–æ–π –æ–ø—ã—Ç?"},
    {"id":"romance-t-28","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã –∑–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –Ω–∞–º–µ—á–∞–ª–æ—Å—å –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ, –∫–∞–∫ –±—ã —Ç—ã –µ–≥–æ –ø—Ä–æ–≤—ë–ª(–∞)?"},

    {"id":"romance-t-29","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"6+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å, –ø–æ—á–µ–º—É –ª—é–¥–∏ –¥–∞—Ä—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥—É –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏?"},
    {"id":"romance-t-30","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"6+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –≥–µ—Ä–æ–π –∏–ª–∏ –≥–µ—Ä–æ–∏–Ω—è –º—É–ª—å—Ç—Ñ–∏–ª—å–º–∞ –∫–∞–∂–µ—Ç—Å—è —Ç–µ–±–µ —Å–∞–º—ã–º –¥–æ–±—Ä—ã–º –∏ –∫—Ä–∞—Å–∏–≤—ã–º?"},
    {"id":"romance-t-31","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è? –ß–µ–º –æ–Ω/–æ–Ω–∞ —Ç–µ–±–µ —Å–∏–º–ø–∞—Ç–∏—á–µ–Ω?"},
    {"id":"romance-t-32","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–í–µ—Ä–∏—à—å –ª–∏ —Ç—ã, —á—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—è –ª—é–±–æ–≤—å –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–∞–∂–µ –≤ —à–∫–æ–ª–µ? –ü–æ—á–µ–º—É –¥–∞ –∏–ª–∏ –Ω–µ—Ç?"},
    {"id":"romance-t-33","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü–æ –∫–∞–∫–∏–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ –≤–ª—é–±–∏–ª—Å—è/–≤–ª—é–±–∏–ª–∞—Å—å?"},
    {"id":"romance-t-34","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫ –¥—É–º–∞–µ—à—å, –º–æ–∂–µ—Ç –ª–∏ –±—ã—Ç—å –ª—é–±–æ–≤—å –±–µ–∑ –¥—Ä—É–∂–±—ã, –∏–ª–∏ –ø–∞—Ä—Ç–Ω—ë—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –µ—â–µ –∏ –ª—É—á—à–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏?"},
    {"id":"romance-t-35","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –Ω–µ–æ–±—ã—á–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ —Å–µ–±–µ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø–æ–ª—É—á–∞–ª(-–∞)?"},
    {"id":"romance-t-36","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–æ—Ü"],"text":"–ë—ã–≤–∞–ª–æ –ª–∏, —á—Ç–æ —Ç–µ–±–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω—Ä–∞–≤–∏–ª–∏—Å—å –¥–≤–æ–µ –ª—é–¥–µ–π? –ö–∞–∫ —Ç—ã –≤—ã–∫—Ä—É—á–∏–≤–∞–ª—Å—è/–≤—ã–∫—Ä—É—á–∏–≤–∞–ª–∞—Å—å?"},
    {"id":"romance-t-37","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∂–µ—Å—Ç –ø—Ä–æ–∏–∑–≤—ë–ª –Ω–∞ —Ç–µ–±—è —Å–∞–º–æ–µ —Å–∏–ª—å–Ω–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ?"},
    {"id":"romance-t-38","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–û–ø–∏—à–∏ —Å–≤–æ—ë —Å–∞–º–æ–µ –Ω–µ—É–¥–∞—á–Ω–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ. –ß—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫?"},
    {"id":"rom18-t-001","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–¥–æ–≤–µ—Ä–∏–µ","–∏–Ω—Ç—Ä–æ—Å–ø–µ–∫—Ü–∏—è"],"text":"–ö–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å, –ø–æ—á–µ–º—É —Ç–µ–±–µ –±—ã–≤–∞–µ—Ç —Å–ª–æ–∂–Ω–æ –¥–æ–≤–µ—Ä—è—Ç—å –ª—é–¥—è–º, –¥–∞–∂–µ –∫–æ–≥–¥–∞ –æ–Ω–∏ —Ç–µ–±—è –ª—é–±—è—Ç?"},
    {"id":"rom18-t-002","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–∏–Ω—Ç–∏–º–Ω–æ—Å—Ç—å","—ç–º–æ—Ü–∏–∏"],"text":"–û–ø–∏—à–∏ —Å–∞–º—ã–π –∏–Ω—Ç–∏–º–Ω—ã–π –º–æ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —É —Ç–µ–±—è –∫–æ–≥–¥–∞-–ª–∏–±–æ –±—ã–ª, –∏ —Ä–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —Ç–æ–≥–¥–∞ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(-–∞)."},
    {"id":"rom18-t-003","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞","–ª—é–±–æ–≤—å"],"text":"–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∑–Ω–∞—á–∏—Ç ¬´–ª—é–±–∏—Ç—å —Å–µ–±—è¬ª, –∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–æ, –∫–∞–∫ —Ç—ã –ª—é–±–∏—à—å –¥—Ä—É–≥–∏—Ö?"},
    {"id":"rom18-t-004","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Ñ–∞–Ω—Ç–∞–∑–∏–∏","—Å—Ç—ã–¥"],"text":"–ë—ã–ª–æ –ª–∏ —Ç–µ–±–µ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Å—Ç—ã–¥–Ω–æ –∑–∞ —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ –∏–ª–∏ —Ñ–∞–Ω—Ç–∞–∑–∏—é –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö? –ö–∞–∫–∞—è —ç—Ç–æ –±—ã–ª–∞ —Ñ–∞–Ω—Ç–∞–∑–∏—è?"},
    {"id":"rom18-t-005","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–≥—Ä–∞–Ω–∏—Ü—ã","—Ü–µ–Ω–Ω–æ—Å—Ç–∏"],"text":"–ö–∞–∫–∞—è —á–µ—Ä—Ç–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –¥–ª—è —Ç–µ–±—è –Ω–µ–ø—Ä–∏–µ–º–ª–µ–º–∞, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã —Å–∏–ª—å–Ω–æ –≤–ª—é–±–ª—ë–Ω(-–∞)?"},
    {"id":"rom18-t-006","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—á–µ—Å—Ç–Ω–æ—Å—Ç—å","–ø—Ä–æ—à–ª–æ–µ"],"text":"–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥(-–ª–∞) —É–∑–Ω–∞—Ç—å –≤—Å—é –ø—Ä–∞–≤–¥—É –æ —Å–µ–±–µ –æ—Ç —Å–≤–æ–µ–≥–æ –±—ã–≤—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞, —Ç—ã –±—ã —Ö–æ—Ç–µ–ª(-–∞) —ç—Ç–æ —É—Å–ª—ã—à–∞—Ç—å? –ü–æ—á–µ–º—É?"},
    {"id":"rom18-t-007","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—É—è–∑–≤–∏–º–æ—Å—Ç—å","—Å—Ç—Ä–∞—Ö–∏"],"text":"–ß—Ç–æ —Ç—ã –æ–±—ã—á–Ω–æ —Å–∫—Ä—ã–≤–∞–µ—à—å –Ω–∞ –ø–µ—Ä–≤—ã—Ö —Å–≤–∏–¥–∞–Ω–∏—è—Ö –∏–∑ —Å—Ç—Ä–∞—Ö–∞ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —É—è–∑–≤–∏–º—ã–º(-–æ–π)?"},
    {"id":"rom18-t-008","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–ø—Ä–æ—à–ª–æ–µ","—Ç—Ä–∞–≤–º—ã"],"text":"–ö–∞–∫—É—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Ä–∞–Ω—É –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Ç—ã –≤—Å—ë –µ—â—ë –Ω–µ—Å—ë—à—å –≤ –Ω–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è?"},
    {"id":"rom18-t-009","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–¥–æ–≤–µ—Ä–∏–µ","–ø—Ä–æ—â–µ–Ω–∏–µ"],"text":"–ï—Å–ª–∏ –±—ã —Ç–≤–æ–π –ø–∞—Ä—Ç–Ω—ë—Ä —Å–æ–≤–µ—Ä—à–∏–ª –æ—à–∏–±–∫—É, –ø–æ–¥–æ—Ä–≤–∞–≤—à—É—é –¥–æ–≤–µ—Ä–∏–µ, —á—Ç–æ –±—ã —Ç–µ–±–µ –ø–æ–º–æ–≥–ª–æ –ø—Ä–æ—Å—Ç–∏—Ç—å –µ–≥–æ/–µ—ë?"},
    {"id":"rom18-t-010","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–∞–º–æ–ø—Ä–∏–Ω—è—Ç–∏–µ","–ª—é–±–æ–≤—å"],"text":"–ß—Ç–æ —Å–∞–º–æ–µ —Ç—Ä—É–¥–Ω–æ–µ —Ç–µ–±–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±–µ, –∫–æ–≥–¥–∞ –¥–µ–ª–æ –∫–∞—Å–∞–µ—Ç—Å—è –ª—é–±–≤–∏?"},
    {"id":"rom18-t-011","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–ª—é–±–æ–≤—å","–∏–Ω—Ç—É–∏—Ü–∏—è"],"text":"–ö–∞–∫ —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—à—ë–ª/–Ω–∞—à–ª–∞ —Å–≤–æ–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞? –ß—Ç–æ —Ç–µ–±—è —É–±–µ–∂–¥–∞–µ—Ç –≤ —ç—Ç–æ–º?"},
    {"id":"rom18-t-012","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ","—É—Ä–æ–∫"],"text":"–ö–∞–∫–æ–µ —Ç–≤–æ—ë —Å–∞–º–æ–µ —Å–∏–ª—å–Ω–æ–µ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ, –∏ —á–µ–º—É –æ–Ω–æ —Ç–µ–±—è –Ω–∞—É—á–∏–ª–æ?"},
    {"id":"rom18-t-013","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–≤—ã–±–æ—Ä","—Å–æ–∂–∞–ª–µ–Ω–∏–µ"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –º–µ–∂–¥—É –ª—é–±–æ–≤—å—é –∏ —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–º? –ß—Ç–æ —Ç—ã –≤—ã–±—Ä–∞–ª(-–∞) –∏ –∂–∞–ª–µ–µ—à—å –ª–∏?"},
    {"id":"rom18-t-014","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–≥—Ä–∞–Ω–∏—Ü—ã","—Å–µ–∫—Å—É–∞–ª—å–Ω–æ—Å—Ç—å"],"text":"–ö–∞–∫–æ–π —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø—Ä–µ–¥–µ–ª –≤ —Å–µ–∫—Å–µ, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –Ω–µ –≥–æ—Ç–æ–≤(–∞) –ø–µ—Ä–µ—Å—Ç—É–ø–∏—Ç—å, –¥–∞–∂–µ —Ä–∞–¥–∏ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞?"},

    # –†–æ–º–∞–Ω—Ç–∏–∫–∞ ‚Äî –¥–µ–π—Å—Ç–≤–∏–µ
    {"id":"romance-d-01","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–°–∫–∞–∂–∏ —Ç—ë–ø–ª—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É."},
    {"id":"romance-d-02","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–æ—á–∏—Ç–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ ¬´–ø–∏—Å—å–º–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏¬ª –≤—Å–ª—É—Ö (2‚Äì3 —Ñ—Ä–∞–∑—ã)."},
    {"id":"romance-d-03","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ü–æ–¥–µ–ª–∏—Å—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π —Ñ–∏–ª—å–º–∞/–ø–µ—Å–Ω–∏ –¥–ª—è —É—é—Ç–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞."},
    {"id":"romance-d-04","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–æ—á–∏–Ω–∏ –º–∏–ª—É—é –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ –¥—Ä—É–≥–∞."},
    {"id":"romance-d-05","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ù–∞–∑–æ–≤–∏ 3 –≤–µ—â–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω(-–Ω–∞) —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–º—É –¥–Ω—é."},
    {"id":"romance-d-06","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ü–æ–¥–µ–ª–∏—Å—å –ø—Ä–∏—è—Ç–Ω—ã–º –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º (1 –º–∏–Ω.)."},
    {"id":"romance-d-07","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –¥–æ–±—Ä—ã–π ¬´—Å–ª–æ–≥–∞–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏¬ª –¥–ª—è —Å–æ—Å–µ–¥–∞ —Å–ª–µ–≤–∞."},
    {"id":"romance-d-08","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–£—Å—Ç—Ä–æ–π –º–∏–Ω–∏‚Äë—á–µ–ª–ª–µ–Ω–¥–∂ ¬´—É–ª—ã–±–Ω–∏—Å—å –∏ –ø–µ—Ä–µ–¥–∞–π –¥–∞–ª—å—à–µ¬ª."},
    {"id":"romance-d-09","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–°–∫–∞–∂–∏ ¬´—Å–ø–∞—Å–∏–±–æ¬ª —á–µ–ª–æ–≤–µ–∫—É, –∫–æ–º—É –¥–∞–≤–Ω–æ —Ö–æ—Ç–µ–ª(-–∞)."},
    {"id":"romance-d-10","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–°–¥–µ–ª–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–æ—Å—Ç –∑–∞ —Ö–æ—Ä–æ—à—É—é –∫–æ–º–ø–∞–Ω–∏—é."},
    {"id":"romance-d-11","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ 10-—Å–µ–∫—É–Ω–¥–Ω—ã–π –æ—Ç—Ä—ã–≤–æ–∫ —Ç–∞–Ω—Ü–∞, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—à—å —Å–∞–º—ã–º —Å–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω—ã–º."},
    {"id":"romance-d-12","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–í—ã–ø–æ–ª–Ω–∏ —à—É—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏-—Å—Ç—Ä–∏–ø—Ç–∏–∑: –º–µ–¥–ª–µ–Ω–Ω–æ —Å–Ω–∏–º–∏ –æ–¥–∏–Ω –∞–∫—Å–µ—Å—Å—É–∞—Ä —Å —Å–µ—Ä—å—ë–∑–Ω—ã–º –≤–∏–¥–æ–º –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å."},
    {"id":"romance-d-13","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –æ–∑–≤—É—á—å –ø–∏–∫–∞–ø-—Ñ—Ä–∞–∑—É, —Å –∫–æ—Ç–æ—Ä–æ–π –ø–æ–¥–æ—à—ë–ª(–ø–æ–¥–æ—à–ª–∞) –±—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∫ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–µ–º—É—Å—è —á–µ–ª–æ–≤–µ–∫—É."},
    {"id":"romance-d-14","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ —Å–∞–º—É—é —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—É—é –≤–µ—â—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –¥–µ–ª–∞–ª(–∞) –¥–ª—è –∫–æ–≥–æ-—Ç–æ, –∞ –µ—Å–ª–∏ –Ω–µ –≤–ø–µ—á–∞—Ç–ª–∏—à—å –∞—É–¥–∏—Ç–æ—Ä–∏—é ‚Äì —Å–ø–æ–π —Å—Ç—Ä–æ—á–∫—É –∏–∑ –ª—é–±–æ–≤–Ω–æ–π –ø–µ—Å–Ω–∏."},
    {"id":"romance-d-15","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∑–≤–æ–ª—å –æ–¥–Ω–æ–º—É –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –∑–∞–¥–∞—Ç—å —Ç–µ–±–µ –∏–Ω—Ç–∏–º–Ω—ã–π –≤–æ–ø—Ä–æ—Å; —á–µ—Å—Ç–Ω–æ –æ—Ç–≤–µ—Ç—å –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã."},
    {"id":"romance-d-16","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–°–¥–µ–ª–∞–π –∫–æ–º—É-—Ç–æ –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–æ—Ä–æ—Ç–∫–∏–π –º–∞—Å—Å–∞–∂ –ø–ª–µ—á (—Å –µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è)."},

    {"id":"romance-d-17","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ò–Ω—Å—Ü–µ–Ω–∏—Ä—É–π –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –≤ –ª—é–±–≤–∏, –æ–±—Ä–∞—â–∞—è—Å—å —Å –ø–∞—Ñ–æ—Å–æ–º –∫ –ª—é–±–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –≤ –∫–æ–º–Ω–∞—Ç–µ."},
    {"id":"romance-d-18","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–æ–≤–µ—Ä—à–∏ —ç—Ñ—Ñ–µ–∫—Ç–Ω—ã–π —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∂–µ—Å—Ç: –ø—Ä–µ–ø–æ–¥–Ω–µ—Å–∏ –≤–æ–æ–±—Ä–∞–∂–∞–µ–º—ã–π –±—É–∫–µ—Ç –∏ —Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–æ–∑–≤—ã—à–µ–Ω–Ω–æ–µ."},
    {"id":"romance-d-19","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–°–ø–æ–π –∫—É–ø–ª–µ—Ç —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Å–Ω–∏, –≥–ª—è–¥—è –≤ –≥–ª–∞–∑–∞ —á–µ–ª–æ–≤–µ–∫—É —Å–ø—Ä–∞–≤–∞ –æ—Ç —Ç–µ–±—è."},
    {"id":"romance-d-20","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ù–∞–∑–æ–≤–∏ –ø—è—Ç—å –ª–∞—Å–∫–æ–≤—ã—Ö –ø—Ä–æ–∑–≤–∏—â –∑–∞ –¥–µ—Å—è—Ç—å —Å–µ–∫—É–Ω–¥ —Ç–∞–∫–∏–º —Ç–æ–Ω–æ–º, –±—É–¥—Ç–æ —ç—Ç–æ —Å–∞–º—ã–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Å–ª–æ–≤–∞."},
    {"id":"romance-d-21","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–æ—á–∏–Ω–∏ –∏ –ø—Ä–æ—á–∏—Ç–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ –ª—é–±–æ–≤–Ω–æ–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ –ø—Ä–µ–¥–º–µ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ."},
    {"id":"romance-d-22","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü–æ–∫–∞–∂–∏, –∫–∞–∫ –±—ã —Ç—ã –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) –≤–æ–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∫–∏–Ω–æ–≥–µ—Ä–æ—è —Å–≤–æ–µ–π –º–µ—á—Ç—ã ‚Äì –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π —ç–º–æ—Ü–∏–∏ –≤ –≤–æ–∑–¥—É—Ö."},
    {"id":"romance-d-23","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°—Ç–∞–Ω—Ü—É–π –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ç–∞–Ω–µ—Ü —Å –Ω–µ–≤–∏–¥–∏–º—ã–º –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º, –Ω–∞–ø–µ–≤–∞—è —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—É—é –º–µ–ª–æ–¥–∏—é."},
    {"id":"romance-d-24","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ù–∞–ø–∏—à–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –ª—é–±–æ–≤–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –∏ –ø—Ä–æ—á–∏—Ç–∞–π –µ–≥–æ –≤—Å–ª—É—Ö –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–Ω—ã–º —Ç–æ–Ω–æ–º."},
    {"id":"romance-d-25","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–æ–∏–∑–Ω–µ—Å–∏ —Ç–æ—Å—Ç –≤ —á–µ—Å—Ç—å –ª—é–±–≤–∏, –ø–æ–¥–Ω—è–≤ –≤–æ–æ–±—Ä–∞–∂–∞–µ–º—ã–π –±–æ–∫–∞–ª –∏ –æ–±—Ä–∞—â–∞—è—Å—å –∫–æ –≤—Å–µ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º."},
    {"id":"romance-d-26","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ü–æ–∫–∞–∂–∏ –æ–¥–Ω–æ–π —Ç–æ–ª—å–∫–æ –º–∏–º–∏–∫–æ–π —Ç—Ä–∏ —ç–º–æ—Ü–∏–∏ –≤–ª—é–±–ª—ë–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞: —Ä–∞–¥–æ—Å—Ç—å, —Ä–µ–≤–Ω–æ—Å—Ç—å –∏ —Å–º—É—â–µ–Ω–∏–µ."},
    {"id":"romance-d-27","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ù–∞–∫–ª–æ–Ω–∏—Å—å –∫ –∏–≥—Ä–æ–∫—É —Å–ª–µ–≤–∞ –∏ –ø—Ä–æ—à–µ–ø—á–∏ –µ–º—É —á—Ç–æ-–Ω–∏–±—É–¥—å —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –Ω–µ–∂–Ω–æ–µ –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–µ—Å—è—Ç–∏ —Å–µ–∫—É–Ω–¥."},
    {"id":"romance-d-28","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∞–∫—Ç–∏–≤"],"text":"–í—ã–π–¥–∏ –∫ –æ—Ç–∫—Ä—ã—Ç–æ–º—É –æ–∫–Ω—É –∏–ª–∏ –Ω–∞ –±–∞–ª–∫–æ–Ω –∏ –≥—Ä–æ–º–∫–æ –ø—Ä–æ–∫—Ä–∏—á–∏ –ø–µ—Ä–≤—É—é —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é —Ñ—Ä–∞–∑—É, —á—Ç–æ –ø—Ä–∏–¥—ë—Ç –≤ –≥–æ–ª–æ–≤—É."},

    {"id":"romance-d-29","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"6+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ù–∞—Ä–∏—Å—É–π –±–æ–ª—å—à–æ–µ —Å–µ—Ä–¥—Ü–µ –Ω–∞ –±—É–º–∞–≥–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤ –≤–æ–∑–¥—É—Ö–µ –∏ –ø–æ–∫–∞–∂–∏ –µ–≥–æ –≤—Å–µ–º."},
    {"id":"romance-d-30","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"6+","tags":["–∞–∫—Ç–∏–≤"],"text":"–û–±–Ω–∏–º–∏ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –∏–∑ –∏–≥—Ä–æ–∫–æ–≤, –∫–∞–∫ –±—É–¥—Ç–æ –æ–±–Ω–∏–º–∞–µ—à—å —Å–≤–æ–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ –ø–ª—é—à–µ–≤–æ–≥–æ –º–∏—à–∫—É."},
    {"id":"romance-d-31","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["—Å–æ—Ü"],"text":"–ù–∞–ø–∏—à–∏ –∞–Ω–æ–Ω–∏–º–Ω—É—é –∑–∞–ø–∏—Å–∫—É —Å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–º –∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–π –∫–æ–º—É-—Ç–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤."},
    {"id":"romance-d-32","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"12+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –Ω–∞–ø–æ–π –∫–æ—Ä–æ—Ç–∫—É—é —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ø–µ—Å–µ–Ω–∫—É –æ –ª—é–±–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—à—å –≤–æ–∫—Ä—É–≥."},
    {"id":"romance-d-33","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ü—Ä–æ–π–¥–∏ –∫ –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É –ø–æ—Ö–æ–¥–∫–æ–π –º–æ–¥–µ–ª–∏ –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é —Ä–µ–ø–ª–∏–∫—É, –±—É–¥—Ç–æ –∏–∑ –∫–∏–Ω–æ."},
    {"id":"romance-d-34","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∑–≤–æ–Ω–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ —Ç–æ–º—É, –∫—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∏ –ø–æ–∂–µ–ª–∞–π –µ–º—É/–µ–π —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫."},
    {"id":"romance-d-35","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü–æ–∫–∞–∂–∏, –∫–∞–∫ –±—ã —Ç—ã –ø–æ—Ü–µ–ª–æ–≤–∞–ª(-–∞) –∫–æ–≥–æ-—Ç–æ: –∏–∑–æ–±—Ä–∞–∑–∏ —Å—Ü–µ–Ω–∏—á–µ—Å–∫–∏–π ¬´–ø–æ—Ü–µ–ª—É–π¬ª –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä—É–∫–µ –∏–ª–∏ –ø–æ–¥—É—à–∫–µ, –±—É–¥—Ç–æ —ç—Ç–æ —Å—Ç—Ä–∞—Å—Ç–Ω–∞—è —Å—Ü–µ–Ω–∞ –∏–∑ –∫–∏–Ω–æ."},
    {"id":"romance-d-36","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–í–æ–∑—å–º–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –∏ –ø—Ä–æ—á–∏—Ç–∞–π –æ—Ç—Ç—É–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–Ω–æ."},
    {"id":"romance-d-37","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–æ—Ü"],"text":"–ü–æ—Ü–µ–ª—É–π –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ —â—ë–∫—É (—Å –µ–≥–æ/–µ—ë —Å–æ–≥–ª–∞—Å–∏—è)."},
    {"id":"rom18-d-001","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–º–µ–ª–æ—Å—Ç—å","—Ä–æ–º–∞–Ω—Ç–∏–∫–∞"],"text":"–ü–æ–∑–≤–æ–Ω–∏ (–∏–ª–∏ –Ω–∞–ø–∏—à–∏) —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∏ –∫–æ—Å–≤–µ–Ω–Ω–æ –¥–∞–π –ø–æ–Ω—è—Ç—å –æ —Å–≤–æ–∏—Ö —á—É–≤—Å—Ç–≤–∞—Ö, –Ω–µ –ø—Ä–∏–∑–Ω–∞–≤–∞—è—Å—å –ø—Ä—è–º–æ."},
    {"id":"rom18-d-002","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–∏–Ω—Ç–∏–º–Ω–æ—Å—Ç—å","—ç–º–æ—Ü–∏–∏"],"text":"–í —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö 5 –º–∏–Ω—É—Ç –≥–æ–≤–æ—Ä–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∏–≥—Ä–æ–∫–æ–º —à—ë–ø–æ—Ç–æ–º, –≥–ª—è–¥—è –µ–º—É/–µ–π –ø—Ä—è–º–æ –≤ –≥–ª–∞–∑–∞."},
    {"id":"rom18-d-003","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–°–¥–µ–ª–∞–π –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∫–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –∏–≥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–∏—Ç –∏—Ö –ø–æ–∫—Ä–∞—Å–Ω–µ—Ç—å."},
    {"id":"rom18-d-004","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å—Ç—Ä–∞—Ö–∏","—É—è–∑–≤–∏–º–æ—Å—Ç—å"],"text":"–ü—Ä–∏–∑–Ω–∞–π—Å—è —Å–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É (–∏–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∏–≥—Ä–æ–∫—É) –æ —Å–≤–æ—ë–º —Å–æ–∫—Ä–æ–≤–µ–Ω–Ω–æ–º —Å—Ç—Ä–∞—Ö–µ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –≥–ª—è–¥—è –µ–º—É/–µ–π –≤ –≥–ª–∞–∑–∞."},
    {"id":"rom18-d-005","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–±–ª–∏–∑–æ—Å—Ç—å","–º–µ—á—Ç—ã"],"text":"–ù–∞ –º–∏–Ω—É—Ç—É –≤–æ–∑—å–º–∏ —á—å—é-—Ç–æ —Ä—É–∫—É –∏, –¥–µ—Ä–∂–∞ –µ—ë, —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Ç–æ–º, —á–µ–≥–æ —Ç—ã —Å–µ–π—á–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ö–æ—á–µ—à—å –æ—Ç –∂–∏–∑–Ω–∏."},
    {"id":"rom18-d-006","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Ä–æ–º–∞–Ω—Ç–∏–∫–∞","—Ä–∞—Å–∫—Ä–µ–ø–æ—â–µ–Ω–∏–µ"],"text":"–¢–∞–Ω—Ü—É–π –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ç–∞–Ω–µ—Ü —Å –≤–æ–æ–±—Ä–∞–∂–∞–µ–º—ã–º –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º, –ø–æ–∫–∞–∑—ã–≤–∞—è –≤—Å–µ —Å–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞, —Å–ª–æ–≤–Ω–æ –æ–Ω/–æ–Ω–∞ –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π."},
    {"id":"rom18-d-007","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å","–∂–µ–ª–∞–Ω–∏—è"],"text":"–ù–∞–ø–∏—à–∏ –Ω–∞ –ª–∏—Å—Ç–µ –±—É–º–∞–≥–∏ —Å–≤–æ—ë —Å–∞–º–æ–µ —Å–æ–∫—Ä–æ–≤–µ–Ω–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ –≤ –ª—é–±–≤–∏ –∏ –ø–µ—Ä–µ–¥–∞–π —ç—Ç–æ—Ç –ª–∏—Å—Ç –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É, —á—Ç–æ–±—ã –æ–Ω/–æ–Ω–∞ –ø—Ä–æ—á–∏—Ç–∞–ª(-–∞) –≤—Å–ª—É—Ö."},
    {"id":"rom18-d-008","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–∏–Ω—Ç–∏–º–Ω–æ—Å—Ç—å","—Å–µ–∫—Ä–µ—Ç"],"text":"–°–¥–µ–ª–∞–π —Å–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É –∏–ª–∏ –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É –Ω–µ–∂–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –Ω–∞ —É—Ö–æ, —á—Ç–æ–±—ã –Ω–∏–∫—Ç–æ –Ω–µ —É—Å–ª—ã—à–∞–ª, —á—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª(-–∞)."},
    {"id":"rom18-d-009","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–ø—Ä–∏–∑–Ω–∞–Ω–∏–µ","–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ"],"text":"–†–∞—Å–∫—Ä–æ–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º, –∫–∞–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤ –ª—é–±–∏–º–æ–º —á–µ–ª–æ–≤–µ–∫–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ, –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ —Ç—ã —ç—Ç–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(-–∞)."},
    {"id":"rom18-d-010","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—ç–º–æ—Ü–∏–∏","—Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å"],"text":"–ò–∑–æ–±—Ä–∞–∑–∏ –∂–µ—Å—Ç–∞–º–∏ –∏ –º–∏–º–∏–∫–æ–π —Å–≤–æ—é —Å–∞–º—É—é –±–æ–ª—å—à—É—é –ª—é–±–æ–≤–Ω—É—é –ø–æ–±–µ–¥—É –∏ —Å–∞–º–æ–µ –≥–æ—Ä—å–∫–æ–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É—è —Å–ª–æ–≤–∞)."},
    {"id":"rom18-d-011","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Ç–µ–∞—Ç—Ä","—Ä–æ–º–∞–Ω—Ç–∏–∫–∞"],"text":"–ò—Å–ø–æ–ª–Ω–∏ –º–æ–Ω–æ–ª–æ–≥ –æ –ª—é–±–≤–∏ —Å –¥—Ä–∞–º–∞—Ç–∏–∑–º–æ–º, –∫–∞–∫ –∞–∫—Ç—ë—Ä, –Ω–∞ —Ç–µ–º—É, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–µ–¥–ª–æ–∂–∞—Ç –¥—Ä—É–≥–∏–µ."},
    {"id":"rom18-d-012","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–º—É–∑—ã–∫–∞","–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å"],"text":"–°–æ—Å—Ç–∞–≤—å –ø–ª–µ–π–ª–∏—Å—Ç –∏–∑ —Ç—Ä—ë—Ö –ø–µ—Å–µ–Ω, –∫–æ—Ç–æ—Ä—ã–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞—é—Ç —Ç–≤–æ—é –ª—é–±–æ–≤–Ω—É—é –∂–∏–∑–Ω—å, –∏ –æ–±—ä—è—Å–Ω–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä."},
    {"id":"rom18-d-013","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–ø—Ä–æ—à–ª–æ–µ","–ø—Ä–∏–º–∏—Ä–µ–Ω–∏–µ"],"text":"–ü—Ä–∏ –≤—Å–µ—Ö –ø–æ–∑–≤–æ–Ω–∏ —Å–≤–æ–µ–º—É –±—ã–≤—à–µ–º—É –∏ –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏ –∑–∞ –≤—Å—ë —Ö–æ—Ä–æ—à–µ–µ, —á—Ç–æ –±—ã–ª–æ –º–µ–∂–¥—É –≤–∞–º–∏."},
    {"id":"rom18-d-014","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å—Ç—Ä–∞—Å—Ç—å","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–ù–µ–∂–Ω–æ —É–∫—É—Å–∏ –∏–ª–∏ –ø–æ—Ü–µ–ª—É–π –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ —Ç–æ –º–µ—Å—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω/–æ–Ω–∞ —É–∫–∞–∂–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞—è —Å–≤–æ—é —Å—Ç—Ä–∞—Å—Ç—å."},

    # –ñ–µ—Å—Ç—å ‚Äî –ø—Ä–∞–≤–¥–∞
    {"id":"extreme-t-01","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –≤—ã–∑–æ–≤ —Å–µ–±–µ —Ç—ã –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—à—å —É–∂–µ –¥–∞–≤–Ω–æ?"},
    {"id":"extreme-t-02","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–°–∞–º–∞—è —Å–º–µ–ª–∞—è –≤–µ—â—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –¥–µ–ª–∞–ª(-–∞)?"},
    {"id":"extreme-t-03","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–≤–æ–π —Å—Ç—Ä–∞—Ö —Ç—ã –≥–æ—Ç–æ–≤(-–∞) ¬´–ø—Ä–æ—â—É–ø–∞—Ç—å¬ª —Å–µ–≥–æ–¥–Ω—è?"},
    {"id":"extreme-t-04","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–û —á—ë–º —Ç—ã –º–µ—á—Ç–∞–µ—à—å, –Ω–æ –Ω–∏–∫–æ–º—É –Ω–µ –≥–æ–≤–æ—Ä–∏–ª(-–∞)?"},
    {"id":"extreme-t-05","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ —Å–ª–æ–∂–Ω–µ–µ: –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â—å –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –µ—ë?"},
    {"id":"extreme-t-06","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Ä–∏—Å–∫ —Ç—ã –ø—Ä–∏–Ω—è–ª(-–∞) –∏ –Ω–µ –∂–∞–ª–µ–µ—à—å?"},
    {"id":"extreme-t-07","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ì–¥–µ —Ç–≤–æ—è ¬´–∑–æ–Ω–∞ –∫–æ–º—Ñ–æ—Ä—Ç–∞¬ª —Å–µ–≥–æ–¥–Ω—è?"},
    {"id":"extreme-t-08","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –±—ã —Ç—ã —Å–¥–µ–ª–∞–ª(-–∞), –µ—Å–ª–∏ –±—ã —Å–µ–≥–æ–¥–Ω—è –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –∫–∞–Ω–∏–∫—É–ª?"},
    {"id":"extreme-t-09","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–°–∞–º–∞—è –Ω–µ–ª–æ–≤–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª(-–∞) –≤ —à—É—Ç–∫—É?"},
    {"id":"extreme-t-10","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∞—è —Ç–≤–æ—è ¬´–≥—Ä–∞–Ω—å¬ª, –æ –∫–æ—Ç–æ—Ä–æ–π –∑–Ω–∞—é—Ç –Ω–µ–º–Ω–æ–≥–∏–µ?"},
    {"id":"extreme-t-11","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –∞–º–æ—Ä–∞–ª—å–Ω—ã–π –∏–ª–∏ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ —Ç—ã —Å–æ–≤–µ—Ä—à–∞–ª(–∞), –æ –∫–æ—Ç–æ—Ä–æ–º –Ω–∏–∫—Ç–æ –∑–¥–µ—Å—å –Ω–µ –∑–Ω–∞–µ—Ç?"},
    {"id":"extreme-t-12","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –∑–∞–±—ã—Ç—å –ø—Ä–æ –∑–∞–∫–æ–Ω—ã –∏ –º–Ω–µ–Ω–∏–µ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö, —á—Ç–æ —Å–∞–º–æ–µ –±–µ–∑—É–º–Ω–æ–µ —Ç—ã –±—ã —Ö–æ—Ç–µ–ª(–∞) –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?"},
    {"id":"extreme-t-13","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ë—ã–≤–∞–ª–æ –ª–∏, —á—Ç–æ —Ç—ã —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞–ª(–∞—Å—å) –∫–µ–º-—Ç–æ –≤ —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö? –ß—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –≤—ã—à–ª–æ?"},
    {"id":"extreme-t-14","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ —Ä–∞—Å–∫–∞–∏–≤–∞—Ç—å—Å—è –≤ —Å–≤–æ–∏—Ö —á—É–≤—Å—Ç–≤–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤–ª—é–±–∏—Ç—å—Å—è ¬´–Ω–µ –≤ —Ç–æ–≥–æ¬ª —á–µ–ª–æ–≤–µ–∫–∞?"},
    {"id":"extreme-t-15","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–°–ª—É—á–∞–ª–æ—Å—å –ª–∏, —á—Ç–æ —Ç—ã –Ω–∞—Ä—É—à–∞–ª(–∞) –∑–∞–∫–æ–Ω –∏ –æ—Å—Ç–∞–ª—Å—è(-–∞—Å—å) –±–µ–∑ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π?"},
    {"id":"extreme-t-16","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫—É—é —Å–∞–º—É—é —Ç—ë–º–Ω—É—é –º—ã—Å–ª—å –∏–ª–∏ —Å–µ–∫—Ä–µ—Ç —Ç—ã —Å–∫—Ä—ã–≤–∞–µ—à—å –∑–∞ —Å–≤–æ–µ–π —É–ª—ã–±–∫–æ–π?"},

    {"id":"extreme-t-17","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –ø–æ—Å—Ç—ã–¥–Ω—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ —Ç–µ–±–µ –¥–æ–≤–æ–¥–∏–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –≤ –∂–∏–∑–Ω–∏?"},
    {"id":"extreme-t-18","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π —Å—Ç—Ä–∞–Ω–Ω—ã–π –∏–ª–∏ –Ω–µ–ª–µ–ø—ã–π –ø—Ä–µ–¥–º–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è —É —Ç–µ–±—è –¥–æ–º–∞, –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç?"},
    {"id":"extreme-t-19","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ù–∞—Ä—É—à–∞–ª(–∞) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ –∑–∞–∫–æ–Ω, –∏ –µ—Å–ª–∏ –¥–∞ ‚Äì –∫–∞–∫–æ–π —Å–∞–º—ã–π —Å–µ—Ä—å—ë–∑–Ω—ã–π –ø—Ä–æ—Å—Ç—É–ø–æ–∫ –±—ã–ª —Å —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω—ã?"},
    {"id":"extreme-t-20","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –æ —Å–µ–±–µ —Ç—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ—à—å –∏ –±–æ–∏—à—å—Å—è, —á—Ç–æ –ª—é–¥–∏ —É–∑–Ω–∞—é—Ç?"},
    {"id":"extreme-t-21","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–æ–º—É –∏–∑ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö —Ç—ã –∑–∞–≤–∏–¥—É–µ—à—å –∏ –ø–æ—á–µ–º—É?"},
    {"id":"extreme-t-22","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ –±—ã —Ç—ã —Å–¥–µ–ª–∞–ª(–∞), –µ—Å–ª–∏ –±—ã —Ç–æ—á–Ω–æ –∑–Ω–∞–ª(–∞), —á—Ç–æ —Ç–µ–±–µ –≤—Å—ë —Å–æ–π–¥—ë—Ç —Å —Ä—É–∫ –∏ –Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç?"},
    {"id":"extreme-t-23","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ù–∞–∑–æ–≤–∏ —Å–∞–º–æ–µ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ —É —Ç–µ–±—è —Å–ª—É—á–∏–ª—Å—è –∏–Ω—Ç–∏–º–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–ª–∏ —Ö–æ—Ç—è –±—ã –ø–æ—Ü–µ–ª—É–π."},
    {"id":"extreme-t-24","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –ø—Ä–∏—Ç–≤–æ—Ä—è—Ç—å—Å—è —Ç—Ä–µ–∑–≤—ã–º, –∫–æ–≥–¥–∞ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –±—ã–ª(–∞) –ø—å—è–Ω(–∞)? –ö–∞–∫ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ?"},
    {"id":"extreme-t-25","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∏–∑–º–µ–Ω—è–ª(–∞) —Å–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É? –ï—Å–ª–∏ –¥–∞, –ø–æ—á–µ–º—É —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª(–∞)?"},
    {"id":"extreme-t-26","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ë—ã–≤–∞–ª–æ –ª–∏, —á—Ç–æ —Ç—ã –≤—Å—Ç—Ä–µ—á–∞–ª—Å—è(–∞—Å—å) –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –¥–≤—É–º—è –ª—é–¥—å–º–∏? –ö–∞–∫ —É–¥–∞–≤–∞–ª–æ—Å—å –≤—ã–∫—Ä—É—á–∏–≤–∞—Ç—å—Å—è?"},
    {"id":"extreme-t-27","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–≤–æ–π —Å–µ–∫—Ä–µ—Ç –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å –¥–∞–∂–µ —Å–∞–º—ã–º –±–ª–∏–∑–∫–∏–º?"},
    {"id":"extreme-t-28","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–° –∫–µ–º –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç—ã –±—ã —Å–æ–≥–ª–∞—Å–∏–ª—Å—è(—Å–æ–≥–ª–∞—Å–∏–ª–∞—Å—å) –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –±—ã –æ—á–µ–Ω—å –ø—Ä–∏—à–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –∫–æ–≥–æ-—Ç–æ –æ–¥–Ω–æ–≥–æ?"},
    {"id":"extreme-t-29","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–æ–≥–¥–∞ —Å—Ç—Ä–∞—Ö –ø–æ—á—Ç–∏ –∑–∞—Å—Ç–∞–≤–∏–ª —Ç–µ–±—è –æ—Ç—Å—Ç—É–ø–∏—Ç—å, –Ω–æ —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–æ—à—ë–ª(-–ª–∞) –¥–æ –∫–æ–Ω—Ü–∞? –û–ø–∏—à–∏ –º–æ–º–µ–Ω—Ç."},

    {"id":"extreme-t-30","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"6+","tags":["—Å–º–µ—Ö"],"text":"–ß—Ç–æ —Å–∞–º–æ–µ –ø—Ä–æ—Ç–∏–≤–Ω–æ–µ –Ω–∞ –≤–∫—É—Å —Ç–µ–±–µ –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ø—Ä–æ–±–æ–≤–∞—Ç—å?"},
    {"id":"extreme-t-31","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"6+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–≥–æ –Ω–∞—Å–µ–∫–æ–º–æ–≥–æ –∏–ª–∏ –∑–≤–µ—Ä—å–∫–∞ —Ç—ã –±–æ–∏—à—å—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"},
    {"id":"extreme-t-32","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ß—Ç–æ —Å–∞–º–æ–µ –Ω–µ–ª–æ–≤–∫–æ–µ —Ç–µ–±–µ –ø—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –Ω–∞–¥–µ–≤–∞—Ç—å, —á—Ç–æ–±—ã –Ω–µ –æ–±–∏–¥–µ—Ç—å —Ç–æ–≥–æ, –∫—Ç–æ —ç—Ç–æ –ø–æ–¥–∞—Ä–∏–ª –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏–ª?"},
    {"id":"extreme-t-33","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"12+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Å–µ–∫—Ä–µ—Ç –æ —Ç–µ–±–µ –∑–Ω–∞—é—Ç —Ç–æ–ª—å–∫–æ —Ç–≤–æ–∏ —Å–∞–º—ã–µ –±–ª–∏–∑–∫–∏–µ –¥—Ä—É–∑—å—è?"},
    {"id":"extreme-t-34","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ß—Ç–æ —Å–∞–º–æ–µ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ–µ —Ç—ã –¥–µ–ª–∞–ª(-–∞) —Ç–∞–π–∫–æ–º –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π?"},
    {"id":"extreme-t-35","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–û —á—ë–º, —Å–∫–∞–∑–∞–Ω–Ω–æ–º –∏–ª–∏ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –Ω–∞ –ø—É–±–ª–∏–∫–µ, —Ç–µ–±–µ –¥–æ —Å–∏—Ö –ø–æ—Ä —Å—Ç—ã–¥–Ω–æ –≤—Å–ø–æ–º–∏–Ω–∞—Ç—å?"},
    {"id":"extreme-t-36","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Å—Ç—Ä–∞–Ω–Ω—ã–π –∏–ª–∏ –Ω–µ–æ–±—ã—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å (—Ñ–µ—Ç–∏—à), –æ –∫–æ—Ç–æ—Ä–æ–º –∑–Ω–∞—é—Ç –æ—á–µ–Ω—å –Ω–µ–º–Ω–æ–≥–∏–µ?"},
    {"id":"extreme-t-37","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ß—Ç–æ —Å–∞–º–æ–µ –±–µ–∑—É–º–Ω–æ–µ —Ç—ã –¥–µ–ª–∞–ª(-–∞), –±—É–¥—É—á–∏ —Å–∏–ª—å–Ω–æ –ø—å—è–Ω(–∞)?"},
    {"id":"extreme-t-38","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ï—Å–ª–∏ –±—ã —Ä–æ–¥–∏—Ç–µ–ª–∏ —É–∑–Ω–∞–ª–∏ –æ–±–æ –≤—Å–µ—Ö —Ç–≤–æ–∏—Ö –≤–µ—á–µ—Ä–∏–Ω–∫–∞—Ö, —á—Ç–æ, –ø–æ-—Ç–≤–æ–µ–º—É, –∏—Ö –±—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —à–æ–∫–∏—Ä–æ–≤–∞–ª–æ?"},
    {"id":"ext18-t-001","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–µ–∫—Ä–µ—Ç","—Å—Ç—Ä–∞—Ö"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π —Ç—ë–º–Ω—ã–π —Å–µ–∫—Ä–µ—Ç –∏–∑ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—à–ª–æ–≥–æ —Ç—ã —Å–∫—Ä—ã–≤–∞–µ—à—å, –±–æ—è—Å—å –æ—Å—É–∂–¥–µ–Ω–∏—è?"},
    {"id":"ext18-t-002","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Ç–∞–±—É","–≤–∏–Ω–∞"],"text":"–ë—ã–ª–æ –ª–∏ –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ —Ç–∞–∫–æ–µ —Ç–∞–±—É, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –Ω–∞—Ä—É—à–∏–ª(-–∞) –∏ –Ω–∏–∫–æ–º—É –æ–± —ç—Ç–æ–º –Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª(-–∞)?"},
    {"id":"ext18-t-003","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–º–æ—Ä–∞–ª—å","–¥–∏–ª–µ–º–º–∞"],"text":"–ï—Å–ª–∏ –±—ã –Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–ª, —Å–æ–≤–µ—Ä—à–∏–ª(-–∞) –±—ã —Ç—ã –ø–æ—Å—Ç—É–ø–æ–∫, –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∞—â–∏–π —Ç–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, —Ä–∞–¥–∏ –∑–Ω–∞—á–∏–º–æ–π —Ü–µ–ª–∏?"},
    {"id":"ext18-t-004","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∞–≥—Ä–µ—Å—Å–∏—è","–≤–∏–Ω–∞"],"text":"–ß—É–≤—Å—Ç–≤–æ–≤–∞–ª(-–∞) –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –∫–æ–≥–æ-—Ç–æ —Å–∏–ª—å–Ω–æ –æ–±–∏–¥–µ–ª(-–∞) –∏–ª–∏ –ø—Ä–∏—á–∏–Ω–∏–ª(-–∞) –±–æ–ª—å?"},
    {"id":"ext18-t-005","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–º–æ—Ä–∞–ª—å","–∏—Å–∫—É—à–µ–Ω–∏–µ"],"text":"–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –±–µ–∑–Ω–∞–∫–∞–∑–∞–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ª—é–±–æ–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ ‚Äî –≤–æ—Å–ø–æ–ª—å–∑—É–µ—à—å—Å—è –ª–∏ —Ç—ã —à–∞–Ω—Å–æ–º, –∏ –µ—Å–ª–∏ –¥–∞, —Ç–æ —á—Ç–æ –±—ã —Ç—ã —Å–¥–µ–ª–∞–ª(-–∞)?"},
    {"id":"ext18-t-006","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Ç–µ–º–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞","–º—ã—Å–ª–∏"],"text":"–ö–∞–∫—É—é —Å–∞–º—É—é —É–∂–∞—Å–Ω—É—é –º—ã—Å–ª—å –æ —á–µ–ª–æ–≤–µ–∫–µ —Ç—ã –∫–æ–≥–¥–∞-–ª–∏–±–æ —Ç–∞–∏–ª(-–∞) –≤ —Å–µ–±–µ, —Ö–æ—Ç—è –æ–Ω/–æ–Ω–∞ —ç—Ç–æ–≥–æ –Ω–µ –∑–∞—Å–ª—É–∂–∏–≤–∞–ª(-–∞)?"},
    {"id":"ext18-t-007","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ","—Å–æ–∂–∞–ª–µ–Ω–∏–µ"],"text":"–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —á—É–∂–∏–º –¥–æ–≤–µ—Ä–∏–µ–º —Ä–∞–¥–∏ —Å–≤–æ–µ–π –≤—ã–≥–æ–¥—ã, –∏ –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤–æ–≤–∞–ª(-–∞) –ø–æ—Å–ª–µ?"},
    {"id":"ext18-t-008","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å—Ç—ã–¥","–ø—Ä–æ—à–ª–æ–µ"],"text":"–ï—Å—Ç—å –ª–∏ –ø–æ—Å—Ç—É–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Å–æ–≤–µ—Ä—à–∏–ª(-–∞) –≤ –ø—Ä–æ—à–ª–æ–º, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —Å—Ç—ã–¥–Ω–æ –¥–æ —Å–∏—Ö –ø–æ—Ä?"},
    {"id":"ext18-t-009","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Ñ–∞–Ω—Ç–∞–∑–∏–∏","—Å—Ç—Ä–∞—Ö–∏"],"text":"–ö–∞–∫–∞—è –º—ã—Å–ª—å –∏–ª–∏ —Ñ–∞–Ω—Ç–∞–∑–∏—è –∏–∑ –ø—Ä–∏—Ö–æ–¥—è—â–∏—Ö —Ç–µ–±–µ –≤ –≥–æ–ª–æ–≤—É –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±—è —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏?"},
    {"id":"ext18-t-010","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ","—á–µ—Å—Ç–Ω–æ—Å—Ç—å"],"text":"–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ø—Ä–µ–¥–∞–≤–∞–ª(-–∞) –±–ª–∏–∑–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞? –ß—Ç–æ —Ç—ã —Ç–æ–≥–¥–∞ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(-–∞) –∏ –∫–∞–∫ –æ–ø—Ä–∞–≤–¥—ã–≤–∞–ª(-–∞) —Å–µ–±—è?"},
    {"id":"ext18-t-011","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è","–≤–∏–Ω–∞"],"text":"–°–ª—É—á–∞–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –¥–æ–≤–µ—Ä—è–ª? –ó–∞—á–µ–º —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª(-–∞)?"},
    {"id":"ext18-t-012","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–æ–ø—Ä–∞–≤–¥–∞–Ω–∏–µ","–∞–º–æ—Ä–∞–ª—å–Ω–æ"],"text":"–ö–∞–∫–æ–π –ø–æ—Å—Ç—É–ø–æ–∫ –æ–∫—Ä—É–∂–∞—é—â–∏–µ —Å—á–∏—Ç–∞—é—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º, –Ω–æ —Ç—ã –ª–∏—á–Ω–æ –Ω–µ —á—É–≤—Å—Ç–≤—É–µ—à—å –∑–∞ –Ω–µ–≥–æ –≤–∏–Ω—ã?"},
    {"id":"ext18-t-013","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–¥–∏–ª–µ–º–º–∞","—Å—Ç—Ä–∞—Ö"],"text":"–ß—Ç–æ –±—ã —Ç—ã –ø—Ä–µ–¥–ø–æ—á—ë–ª(-–∞): —É–∑–Ω–∞—Ç—å –æ –ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —É–∑–Ω–∞—Ç—å, –Ω–æ –∂–∏—Ç—å –≤ –Ω–µ–≤–µ–¥–µ–Ω–∏–∏? –ü–æ—á–µ–º—É?"},
    {"id":"ext18-t-014","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–∞–º–æ–æ–±–º–∞–Ω","–∏–Ω—Ç—Ä–æ—Å–ø–µ–∫—Ü–∏—è"],"text":"–ö–∞–∫—É—é –Ω–µ–ø—Ä–∏—è—Ç–Ω—É—é –ø—Ä–∞–≤–¥—É –æ —Å–µ–±–µ —Ç—ã —Å—Ç–∞—Ä–∞–µ—à—å—Å—è –Ω–µ –∑–∞–º–µ—á–∞—Ç—å, —Ö–æ—Ç—è –∏–Ω–æ–≥–¥–∞ –ø–æ–Ω–∏–º–∞–µ—à—å –µ—ë –≤–Ω—É—Ç—Ä–∏?"},

    # –ñ–µ—Å—Ç—å ‚Äî –ø—Ä–∞–≤–¥–∞ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–¥–∫–æ—Ä–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è)
    {"id":"extreme-t-41","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π –ø–æ—Å—Ç—É–ø–æ–∫ –Ω–∞ –≥—Ä–∞–Ω–∏ –ø—Ä–∞–≤–∏–ª —Ç—ã —Å–æ–≤–µ—Ä—à–∏–ª(-–∞) —Ä–∞–¥–∏ –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω–∞ –∏ –ø–æ—á—Ç–∏ –ø–æ–ø–∞–ª—Å—è(-–∞—Å—å)?"},
    {"id":"extreme-t-42","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –æ –≤–µ—á–µ—Ä–∏–Ω–∫–µ –∏–ª–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–∏, –≥–¥–µ –≤—ã —Å –¥—Ä—É–∑—å—è–º–∏ –µ–¥–≤–∞ –Ω–µ –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç—è—Ö."},
    {"id":"extreme-t-43","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∞—è —Å–º–µ–ª–∞—è –ª–æ–∂—å —Å–ø–∞—Å–∞–ª–∞ —Ç–µ–±—è –æ—Ç –Ω–∞–∫–∞–∑–∞–Ω–∏—è, –∏ –∫–∞–∫ –¥–æ–ª–≥–æ —Ç—ã –¥–µ—Ä–∂–∞–ª(-–∞) –º–∞—Å–∫—É?"},
    {"id":"extreme-t-44","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–æ–≥–¥–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ —Ç—ã —Ä–∏—Å–∫–æ–≤–∞–ª(-–∞) —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π —Ä–∞–¥–∏ –≤–µ—Å–µ–ª—å—è –∏–ª–∏ –ø–∞—Ä–∏?"},
    {"id":"extreme-t-45","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ —Ç—ã –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ –Ω–∞—Ä—É—à–∞–ª(-–∞), —á—Ç–æ–±—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–≤–æ–±–æ–¥—É?"},
    {"id":"extreme-t-46","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –≤—ã–∑–æ–≤ —Ç—ã –ø—Ä–∏–Ω—è–ª(-–∞), —Ö–æ—Ç—è –ø–æ–Ω–∏–º–∞–ª(-–∞), —á—Ç–æ –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Å—Ç—ã–¥–Ω–æ?"},
    {"id":"extreme-t-47","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Ç–∞–π–Ω—ã–π –±—É–Ω—Ç –ø—Ä–æ—Ç–∏–≤ –≤–∑—Ä–æ—Å–ª—ã—Ö –∏–ª–∏ –Ω–∞—á–∞–ª—å—Å—Ç–≤–∞ —Ç—ã —É—Å—Ç—Ä–æ–∏–ª(-–∞) –∏ –Ω–µ –ø–æ–∂–∞–ª–µ–ª(-–∞)?"},
    {"id":"extreme-t-48","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ï—Å–ª–∏ –±—ã –Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–ª, –∫–∞–∫–æ–µ –¥–µ—Ä–∑–∫–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ —Ç—ã –±—ã –ø–æ–≤—Ç–æ—Ä–∏–ª(-–∞) –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?"},
    {"id":"extreme-t-49","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–∞—è —É–≥–∞—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —Ç—Ä–∞–≤–º–æ–π, —Å–∏–Ω—è–∫–æ–º –∏–ª–∏ —Å–µ—Ä—å—ë–∑–Ω—ã–º —Ä–∞–∑–±–æ—Ä–æ–º –ø–æ–ª—ë—Ç–æ–≤?"},
    {"id":"extreme-t-50","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ö–∞–∫–æ–π —Ç—ë–º–Ω—ã–π —Å–µ–∫—Ä–µ—Ç –æ —Ç–≤–æ—ë–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ –∏–ª–∏ –ø—Ä–∏–≤—ã—á–∫–∞—Ö —Ç—ã —Å–∫—Ä—ã–≤–∞–µ—à—å –¥–∞–∂–µ –æ—Ç –±–ª–∏–∑–∫–∏—Ö?"},

    # –ñ–µ—Å—Ç—å ‚Äî –¥–µ–π—Å—Ç–≤–∏–µ
    {"id":"extreme-d-01","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°–¥–µ–ª–∞–π 20 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π –∏–ª–∏ 10 –æ—Ç–∂–∏–º–∞–Ω–∏–π (–±–µ–∑–æ–ø–∞—Å–Ω–æ)."},
    {"id":"extreme-d-02","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ü—Ä–æ—á–∏—Ç–∞–π ¬´—Å–∫–æ—Ä–æ–≥–æ–≤–æ—Ä–∫—É —Ö3¬ª –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –æ—à–∏–±–æ–∫."},
    {"id":"extreme-d-03","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°—ã–≥—Ä–∞–π –º–∏–Ω–∏‚Äë–º–æ–Ω–æ–ª–æ–≥ ¬´–µ—Å–ª–∏ –±—ã —è –æ–∫–∞–∑–∞–ª—Å—è(-–∞—Å—å) –≤ –∫–∏–Ω–æ¬ª."},
    {"id":"extreme-d-04","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°–¥–µ–ª–∞–π –ø–ª–∞–Ω–∫—É 30 —Å–µ–∫—É–Ω–¥ (–ø–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é)."},
    {"id":"extreme-d-05","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é, –≥–¥–µ —Ç—ã –ø—Ä–µ–≤–æ–∑–º–æ–≥(-–ª–∞) —Å–µ–±—è."},
    {"id":"extreme-d-06","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ü–æ–∫–∞–∂–∏ ¬´–∑–ª–æ–π –≤–∑–≥–ª—è–¥¬ª –∏–∑ –∫–∏–Ω–æ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π 10 —Å–µ–∫."},
    {"id":"extreme-d-07","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–æ—á–∏–Ω–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–π —Å–ª–æ–≥–∞–Ω –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ —Å—Ç–æ–ª–µ."},
    {"id":"extreme-d-08","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°–¥–µ–ª–∞–π 15 –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π –ø–æ–¥ —Å—á—ë—Ç –∫–æ–º–ø–∞–Ω–∏–∏."},
    {"id":"extreme-d-09","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ù–∞–∑–æ–≤–∏ —Å–≤–æ—é —Ü–µ–ª—å –Ω–∞ –Ω–µ–¥–µ–ª—é –∏ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç."},
    {"id":"extreme-d-10","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π ¬´–∂—ë—Å—Ç–∫–æ–µ¬ª –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—à–µ–º—É —Å–ª–µ–¥—É—é—â–µ–º—É —á–µ–ª–ª–µ–Ω–¥–∂—É."},
    {"id":"extreme-d-11","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°—ä–µ—à—å –æ—á–µ–Ω—å –æ—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ü –∏–ª–∏ –ª–æ–∂–∫—É –æ—Å—Ç—Ä–æ–π –ø—Ä–∏–ø—Ä–∞–≤—ã –∏ –Ω–µ –∑–∞–ø–∏–≤–∞–π 30 —Å–µ–∫—É–Ω–¥."},
    {"id":"extreme-d-12","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü–æ–∑–≤–æ–ª—å –∏–≥—Ä–æ–∫–∞–º –ø—Ä–∏–¥—É–º–∞—Ç—å –¥–ª—è —Ç–µ–±—è –º–∏–Ω–∏-–∏—Å–ø—ã—Ç–∞–Ω–∏–µ, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏ –≤—ã–ø–æ–ª–Ω–∏."},
    {"id":"extreme-d-13","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–í—ã–ø–µ–π –∑–∞–ª–ø–æ–º —Å—Ç—Ä–∞–Ω–Ω—ã–π —à–æ—Ç, —Å–º–µ—à–∞–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–ø–∏—Ç–∫–æ–≤ –∏ —Å–ø–µ—Ü–∏—é, —Å–æ—Ö—Ä–∞–Ω–∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –Ω–∞ –ª–∏—Ü–µ."},
    {"id":"extreme-d-14","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–í—ã–π–¥–∏ –∫ –æ–∫–Ω—É –∏ –≥—Ä–æ–º–∫–æ –ø—Ä–æ–∫—Ä–∏—á–∏ —à–æ–∫–∏—Ä—É—é—â–µ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ (–Ω–µ—Å–µ—Ä—å—ë–∑–Ω–æ–µ) –Ω–∞ –≤–µ—Å—å —Ä–∞–π–æ–Ω."},
    {"id":"extreme-d-15","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü–æ–∑–≤–æ–ª—å –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å —Ä—É—á–∫–æ–π —É —Ç–µ–±—è –Ω–∞ –∫–æ–∂–µ –∏ –Ω–æ—Å–∏ —ç—Ç–æ –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è."},
    {"id":"extreme-d-16","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–í —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö 5 –º–∏–Ω—É—Ç –æ—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø—Ä–∞–≤–¥—É –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç –∏–≥—Ä–æ–∫–æ–≤; –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –ª–∏—à—å –æ–¥–∏–Ω —Ä–∞–∑."},

    {"id":"extreme-d-17","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°—ä–µ—à—å —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–µ—Å—å–º–∞ –Ω–µ–æ–±—ã—á–Ω–æ–µ: –ø—É—Å—Ç—å –∏–≥—Ä–æ–∫–∏ —Å–º–µ—à–∞—é—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –ª–æ–∂–∫–µ, –∏ –ø—Ä–æ–≥–ª–æ—Ç–∏ —ç—Ç—É —Å–º–µ—Å—å."},
    {"id":"extreme-d-18","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–†–∞–∑—Ä–µ—à–∏ –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–º–µ—à–Ω–æ–µ –Ω–∞ —Ç–≤–æ—ë–º –ª–∏—Ü–µ –º–∞—Ä–∫–µ—Ä–æ–º –∏–ª–∏ –∫–æ—Å–º–µ—Ç–∏–∫–æ–π."},
    {"id":"extreme-d-19","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ü–æ–∫–∞–∂–∏ –≤—Å–µ–º –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ —Å–≤–æ—ë —Å–∞–º–æ–µ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –∏–ª–∏ –∫–æ–º–ø—Ä–æ–º–µ—Ç–∏—Ä—É—é—â–µ–µ —Ñ–æ—Ç–æ –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é."},
    {"id":"extreme-d-20","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∞–∫—Ç–∏–≤"],"text":"–í—ã–π–¥–∏ –Ω–∞ —É–ª–∏—Ü—É –∏–ª–∏ –Ω–∞ –±–∞–ª–∫–æ–Ω –∏ –≥—Ä–æ–º–∫–æ –∏—Å–ø–æ–ª–Ω–∏ –∫—É–ø–ª–µ—Ç –¥–µ—Ç—Å–∫–æ–π –ø–µ—Å–µ–Ω–∫–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±–µ—Ä—É—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ."},
    {"id":"extreme-d-21","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°–Ω–∏–º–∏ —Å —Å–µ–±—è –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç –æ–¥–µ–∂–¥—ã (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑—É–º–Ω–æ–≥–æ) –∏ –æ—Å—Ç–∞–≤–∞–π—Å—è —Ç–∞–∫ –¥–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã."},
    {"id":"extreme-d-22","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–í—ã–±–µ—Ä–∏ —Å–∞–º—ã–π –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ –∏ –ø—Ä–∏–¥—É–º–∞–π, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏–∑ –Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç –∫–æ—Å—Ç—é–º–∞ ‚Äî –Ω–æ—Å–∏ —ç—Ç–æ—Ç –∞–∫—Å–µ—Å—Å—É–∞—Ä –º–∏–Ω—É—Ç—É, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—è –æ–±—Ä–∞–∑."},
    {"id":"extreme-d-23","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ù–∞–±–µ—Ä–∏ —Å–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Å–µ—Ä—å—ë–∑–Ω–æ —Å–ø—Ä–æ—Å–∏: ¬´–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –ø—Ä–æ–π—Ç–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É?¬ª –∑–∞—Ç–µ–º –ø–æ–ª–æ–∂–∏ —Ç—Ä—É–±–∫—É."},
    {"id":"extreme-d-24","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–û—Ç–∫—Ä–æ–π –ª—é–±—É—é —Å–æ—Ü—Å–µ—Ç—å –∏ –ø–æ—Å—Ç–∞–≤—å –æ—Ç–º–µ—Ç–∫—É ¬´–Ω—Ä–∞–≤–∏—Ç—Å—è¬ª –Ω–∞ –¥–µ—Å—è—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–∞—Ö —Å–≤–æ–µ–≥–æ –±—ã–≤—à–µ–≥–æ –∏–ª–∏ –±—ã–≤—à–µ–π."},
    {"id":"extreme-d-25","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°—ä–µ—à—å –Ω–µ–±–æ–ª—å—à–æ–π –∫—É—Å–æ—á–µ–∫ —Å–∞–º–æ–≥–æ –æ—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä—Ü–∞ –∏–ª–∏ –≤—ã–ø–µ–π –ª–æ–∂–∫—É –æ—á–µ–Ω—å –æ—Å—Ç—Ä–æ–≥–æ —Å–æ—É—Å–∞."},
    {"id":"extreme-d-26","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–î–∞–π –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É –ª—ë–≥–∫–∏–π —à–ª–µ–ø–æ–∫ –ø–æ –ø–æ–ø–µ, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è."},
    {"id":"extreme-d-27","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–æ—Ü"],"text":"–ü—Ä–æ—á–∏—Ç–∞–π –≤—Å–ª—É—Ö –ø—è—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–æ–¥–∏–ª(–∞) –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ."},
    {"id":"extreme-d-28","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü–æ–∑–≤–æ–ª—å –æ—Å—Ç–∞–ª—å–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –Ω–∞—Ä—è–¥–∏—Ç—å —Ç–µ–±—è –≤ —Å–∞–º—ã–π –Ω–µ–ª–µ–ø—ã–π –∫–æ—Å—Ç—é–º –∏ –ø—Ä–æ—Ö–æ–¥–∏ —Ç–∞–∫ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞—É–Ω–¥."},
    {"id":"ext18-d-001","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—á–µ—Å—Ç–Ω–æ—Å—Ç—å","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–ü–æ–∑–≤–æ–ª—å –ª—é–±–æ–º—É –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞—Ç—å —Ç–µ–±–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –æ–±—è–∑–∞–Ω(-–∞) —á–µ—Å—Ç–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å, –∫–∞–∫–∏–º –±—ã –Ω–µ—É–¥–æ–±–Ω—ã–º –æ–Ω –Ω–∏ –±—ã–ª."},
    {"id":"ext18-d-002","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–ø—Ä–∏–∑–Ω–∞–Ω–∏–µ","–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å"],"text":"–ü—Ä–æ–∏–∑–Ω–µ—Å–∏ –≤—Å–ª—É—Ö —Å–∞–º—ã–π –∂–µ—Å—Ç–æ–∫–∏–π –∏–ª–∏ –Ω–µ—á–µ—Å—Ç–Ω—ã–π –ø–æ—Å—Ç—É–ø–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –ø—Ä–∏–∑–Ω–∞–ª—Å—è(-–∞—Å—å) –Ω–∏–∫–æ–º—É."},
    {"id":"ext18-d-003","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å","—Ä–∏—Å–∫"],"text":"–î–∞–π —Å–≤–æ–µ–º—É —Å–æ—Å–µ–¥—É –ø–æ –∏–≥—Ä–µ –ø—Ä–∞–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª—é–±—É—é –ø–µ—Ä–µ–ø–∏—Å–∫—É –≤ —Ç–≤–æ—ë–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç."},
    {"id":"ext18-d-004","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—á–µ—Å—Ç–Ω–æ—Å—Ç—å","—Å—Ç—Ä–∞—Ö"],"text":"–ü–æ–∑–≤–æ–Ω–∏ –±–ª–∏–∑–∫–æ–º—É –¥—Ä—É–≥—É –∏–ª–∏ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É –∏ –ø—Ä–∏–∑–Ω–∞–π—Å—è –≤ —Ç–æ–º, —á—Ç–æ –¥–∞–≤–Ω–æ —Ö–æ—Ç–µ–ª(-–∞) —Å–∫–∞–∑–∞—Ç—å, –Ω–æ –±–æ—è–ª—Å—è/–±–æ—è–ª–∞—Å—å."},
    {"id":"ext18-d-005","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—É—è–∑–≤–∏–º–æ—Å—Ç—å","–¥–æ–≤–µ—Ä–∏–µ"],"text":"–ü–æ–∑–≤–æ–ª—å –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≥—Ä—É–ø–ø–µ –æ –ª—é–±–æ–º –≤–∞—à–µ–º —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º —Å–ª—É—á–∞–µ, –æ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –ø—Ä–µ–¥–ø–æ—á—ë–ª(-–ª–∞) –±—ã –º–æ–ª—á–∞—Ç—å."},
    {"id":"ext18-d-006","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—É—è–∑–≤–∏–º–æ—Å—Ç—å","–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å"],"text":"–°–Ω–∏–º–∏ –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç –æ–¥–µ–∂–¥—ã (–ø–æ –≤—ã–±–æ—Ä—É –≥—Ä—É–ø–ø—ã) –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ —Ç—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª(-–∞) —Å–µ–±—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É—è–∑–≤–∏–º–æ."},
    {"id":"ext18-d-007","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å—Ç—Ä–∞—Ö","–≤—ã–∑–æ–≤"],"text":"–°–¥–µ–ª–∞–π —Ç–æ, —á—Ç–æ —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—É–≥–∞–µ—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã (–≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö)."},
    {"id":"ext18-d-008","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Ä–∏—Å–∫","—Å—Ç—ã–¥"],"text":"–ü–æ–∑–≤–æ–ª—å –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É –≤—ã–±—Ä–∞—Ç—å –¥–ª—è —Ç–µ–±—è –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –≤ —Ç–≤–æ—ë–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –≤ —Å—Ç–∞—Ç—É—Å–µ/–∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞ 5 –º–∏–Ω—É—Ç."},
    {"id":"ext18-d-009","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–µ–∫—Ä–µ—Ç","—Å–∏–º–≤–æ–ª–∏–∑–º"],"text":"–ù–∞–ø–∏—à–∏ –Ω–∞ –ª–∏—Å—Ç–∫–µ —Å–≤–æ—ë —Å–∞–º–æ–µ –∑–∞–ø—Ä–µ—Ç–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ –∏–ª–∏ –º—ã—Å–ª—å, –∞ –ø–æ—Ç–æ–º —Å–æ–∂–≥–∏ —ç—Ç–æ—Ç –ª–∏—Å—Ç–æ–∫ –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏."},
    {"id":"ext18-d-010","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–ø—Ä–æ–≤–æ–∫–∞—Ü–∏—è","—Å–º–µ–ª–æ—Å—Ç—å"],"text":"–ü–æ–∑–≤–æ–ª—å –≥—Ä—É–ø–ø–µ —Ä–µ—à–∏—Ç—å, –∫–∞–∫–æ–µ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Ç—ã –¥–æ–ª–∂–µ–Ω(-–Ω–∞) –≤—ã–ø–æ–ª–Ω–∏—Ç—å (–∫—Ä–æ–º–µ –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ–≥–æ), –∏ –≤—ã–ø–æ–ª–Ω–∏ –µ–≥–æ."},
    {"id":"ext18-d-011","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—á–µ—Å—Ç–Ω–æ—Å—Ç—å","—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞"],"text":"–î–∞–π –∫–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –ø—Ä–∞–≤–æ —Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ —á–µ—Å—Ç–Ω–æ —á—Ç–æ-—Ç–æ, —á—Ç–æ –æ–Ω–∏ –æ —Ç–µ–±–µ –¥—É–º–∞—é—Ç, –∞ —Ç—ã –ø—Ä–æ—Å—Ç–æ –≤—ã—Å–ª—É—à–∞–π, –Ω–µ –æ—Ç–≤–µ—á–∞—è."},
    {"id":"ext18-d-012","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ–ª–æ—Å—Ç—å","–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç—å"],"text":"–í—ã–π–¥–∏ –Ω–∞ —É–ª–∏—Ü—É (–∏–ª–∏ –Ω–∞ –±–∞–ª–∫–æ–Ω) –∏ –ø—Ä–æ–∫—Ä–∏—á–∏ —Å–∞–º–æ–µ –¥–µ—Ä–∑–∫–æ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –æ —Å–µ–±–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Å–ø–æ—Å–æ–±–µ–Ω(-–∞) –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å."},
    {"id":"ext18-d-013","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—á–µ—Å—Ç–Ω–æ—Å—Ç—å","–∏—Å–ø—ã—Ç–∞–Ω–∏–µ"],"text":"–î–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã –æ–±–µ—â–∞–π –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∞–≤–¥—É –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–∂–µ —Å–∞–º—ã–µ –Ω–µ—É–¥–æ–±–Ω—ã–µ."},
    {"id":"ext18-d-014","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞","–±–æ–ª—å"],"text":"–í—Å–ø–æ–º–Ω–∏ —Å–∞–º—É—é –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—É—é –∫—Ä–∏—Ç–∏–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Å–ª—ã—à–∞–ª(-–∞) –æ —Å–µ–±–µ, –∏ –ø–æ–≤—Ç–æ—Ä–∏ –µ—ë —Å–µ–π—á–∞—Å –æ —Å–µ–±–µ —Å–∞–º–æ–º(–æ–π)."},
    {"id":"extreme-d-29","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü–µ—Ä–µ–¥–∞–π —Ç–µ–ª–µ—Ñ–æ–Ω —Å–æ—Å–µ–¥—É: –ø—É—Å—Ç—å –æ–Ω –Ω–∞–ø–∏—à–µ—Ç —Å–º–µ–ª—ã–π —Ç–µ–∫—Å—Ç –≤ –∑–∞–º–µ—Ç–∫–µ, —Ç—ã –ø—Ä–æ—á—Ç—ë—à—å –µ–≥–æ –≤—Å–ª—É—Ö (–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—è) –∏ —É–¥–∞–ª–∏—à—å."},

    {"id":"extreme-d-30","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"6+","tags":["—Å–º–µ—Ö"],"text":"–°–º–µ—à–∞–π –Ω–µ–º–Ω–æ–≥–æ –¥–≤—É—Ö –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∞—Ä–µ–Ω—å–µ –∏ —Å–æ–ª—ë–Ω—ã–π –∫—Ä–µ–∫–µ—Ä) –∏ –ø–æ–ø—Ä–æ–±—É–π –æ–¥–∏–Ω –∫—É—Å–æ—á–µ–∫."},
    {"id":"extreme-d-31","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"6+","tags":["—Å–º–µ—Ö"],"text":"–ü–æ–∑–≤–æ–ª—å –¥—Ä—É–≥–∏–º –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Ç–µ–±–µ —Å–º—ã–≤–∞–µ–º—ã–º –º–∞—Ä–∫–µ—Ä–æ–º —Å–º–µ—à–Ω—ã–µ —É—Å—ã –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ä–∏—Å—É–Ω–æ–∫ –Ω–∞ –ª–∏—Ü–µ."},
    {"id":"extreme-d-32","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–°—ä–µ—à—å –ª–æ–∂–∫—É —Å—Ç—Ä–∞–Ω–Ω–æ–π —Å–º–µ—Å–∏, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–¥—É–º–∞—é—Ç –¥—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏ (–Ω–æ –Ω–∏—á–µ–≥–æ –æ–ø–∞—Å–Ω–æ–≥–æ!)."},
    {"id":"extreme-d-33","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"12+","tags":["—Å–º–µ—Ö"],"text":"–ü–æ–∑–≤–æ–ª—å –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É —Å–¥–µ–ª–∞—Ç—å —Ç–µ–±–µ –∑–∞–±–∞–≤–Ω—É—é –ø—Ä–∏—á—ë—Å–∫—É –∑–∞ –æ–¥–Ω—É –º–∏–Ω—É—Ç—É –∏ –ø–æ–∫–∞–∂–∏, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å."},
    {"id":"extreme-d-34","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –≥—Ä–æ–º–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏ –∞–±—Å—É—Ä–¥–Ω—ã–π —Ñ–∞–∫—Ç –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –≤—Å–µ—Ö —É–¥–∏–≤–∏—Ç—å."},
    {"id":"extreme-d-35","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´–ü—Ä–∏–≤–µ—Ç¬ª –∫–∞–∫–æ–º—É-–Ω–∏–±—É–¥—å —Å–ª—É—á–∞–π–Ω–æ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É –∏–∑ —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø–æ–∫–∞–∂–∏, –µ—Å–ª–∏ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç—è—Ç –¥–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã."},
    {"id":"extreme-d-36","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–û—Ç–∫—É—Å–∏ –∫—É—Å–æ—á–µ–∫ –ª–∏–º–æ–Ω–∞ —Å –∫–æ–∂—É—Ä–æ–π –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –Ω–µ –ø–æ–º–æ—Ä—â–∏—Ç—å—Å—è."},
    {"id":"extreme-d-37","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ù–∞–±–µ—Ä–∏ –≤–æ–¥—ã –≤ —Ä–æ—Ç –∏ –ø–æ–ø—ã—Ç–∞–π—Å—è —Å–ø–µ—Ç—å —Å—Ç—Ä–æ—á–∫—É –∏–∑ –ø–µ—Å–Ω–∏, –Ω–µ —Ä–∞—Å–ø–ª–µ—Å–∫–∞–≤ –µ—ë."},
    {"id":"extreme-d-38","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–í—ã–π–¥–∏ –Ω–∞ –±–∞–ª–∫–æ–Ω –∏–ª–∏ –≤ –ø–æ–¥—ä–µ–∑–¥ –∏ –≥—Ä–æ–º–∫–æ –ø—Ä–æ–∫—Ä–∏—á–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–µ–ª–µ–ø–æ–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–Ø –æ–±–æ–∂–∞—é –ª–∞–º–ø–æ—á–∫–∏!¬ª."},

    # –ñ–µ—Å—Ç—å ‚Äî –¥–µ–π—Å—Ç–≤–∏–µ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–¥–∫–æ—Ä–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è)
    {"id":"extreme-d-41","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∞–∫—Ç–∏–≤"],"text":"–°—ä–µ—à—å –ª–æ–º—Ç–∏–∫ –ª–∏–º–æ–Ω–∞ —Å –∫–æ–∂—É—Ä–æ–π –∏ –¥–µ—Ä–∂–∏ –∫–∞–º–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ 10 —Å–µ–∫—É–Ω–¥."},
    {"id":"extreme-d-42","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ü—É—Å—Ç—å –∫–æ–º–ø–∞–Ω–∏—è —Å–º–µ—à–∞–µ—Ç —Ç—Ä–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ –≤ —Å—Ç–∞–∫–∞–Ω–µ ‚Äî –≤—ã–ø–µ–π –ø–æ–ª–æ–≤–∏–Ω—É –∑–∞–ª–ø–æ–º –±–µ–∑ –≥—Ä–∏–º–∞—Å—ã."},
    {"id":"extreme-d-43","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ó–∞–ø–∏—à–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ –¥—Ä—É–≥—É (–º–æ–∂–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å) —Å —Ñ—Ä–∞–∑–æ–π ¬´–ú–Ω–µ —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–∞ —Ç–≤–æ—è –ø–æ–º–æ—â—å!¬ª –∏ —Ç—É—Ç –∂–µ –æ–±—ä—è—Å–Ω–∏ –≤—Å–ª—É—Ö, —á—Ç–æ —ç—Ç–æ —à—É—Ç–∫–∞ –∏–≥—Ä—ã."},
    {"id":"extreme-d-44","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∞–∫—Ç–∏–≤"],"text":"–í—ã–π–¥–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä –∏–ª–∏ –∫ –æ–∫–Ω—É –∏ –ø—Ä–æ–∫—Ä–∏—á–∏ –ø—Ä–∏–¥—É–º–∞–Ω–Ω—ã–π —Ç–æ–±–æ–π –±–æ–µ–≤–æ–π –∫–ª–∏—á —Ç–∞–∫ –≥—Ä–æ–º–∫–æ, –∫–∞–∫ —Å–º–æ–∂–µ—à—å."},
    {"id":"extreme-d-45","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –≤—Å–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–∑–æ—Ä–Ω—ã–π —Å–ª—É—á–∞–π –æ —Å–µ–±–µ —Ç–∞–∫, –±—É–¥—Ç–æ —ç—Ç–æ —Ç–≤–æ—è —Å–∞–º–∞—è –≥—Ä–æ–º–∫–∞—è –ø–æ–±–µ–¥–∞."},
    {"id":"extreme-d-46","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–º–µ—Ö"],"text":"–ü—É—Å—Ç—å –∏–≥—Ä–æ–∫ —Å–ª–µ–≤–∞ –∫–æ–º–∞–Ω–¥—É–µ—Ç —Ç–æ–±–æ–π 30 —Å–µ–∫—É–Ω–¥ ‚Äî –≤—ã–ø–æ–ª–Ω—è–π –ª—é–±—ã–µ —Å–º–µ—à–Ω—ã–µ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö."},
    {"id":"extreme-d-47","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏–º–ø—Ä–æ–≤–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ ¬´–æ–±–ª–∏—á–∞—é—â–µ–µ¬ª –∏–Ω—Ç–µ—Ä–≤—å—é –æ —Å–µ–±–µ –∏ –æ–±—ä—è–≤–∏ –≤—Å–ª—É—Ö —Ç—Ä–∏ —Å–≤–æ–∏—Ö –¥—É—Ä–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–∫–∏."},
    {"id":"extreme-d-48","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∞–∫—Ç–∏–≤"],"text":"–ü—É—Å—Ç—å –∏–≥—Ä–æ–∫ —Å–ø—Ä–∞–≤–∞ –≤—ã–±–µ—Ä–µ—Ç —Ç–µ–±–µ —Å–º–µ–ª—É—é –ø–æ–∑—É ‚Äî –∑–∞–º—Ä–∏ –≤ –Ω–µ–π –Ω–∞ 20 —Å–µ–∫—É–Ω–¥, –ø–æ–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É—é—Ç –∏–ª–∏ —Å–Ω–∏–º–∞—é—Ç."},
    {"id":"extreme-d-49","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["—Å–æ—Ü"],"text":"–ü–æ –≤–∑–∞–∏–º–Ω–æ–º—É —Å–æ–≥–ª–∞—Å–∏—é –æ—Ç–∫—Ä–æ–π –≥–∞–ª–µ—Ä–µ—é —Ç–µ–ª–µ—Ñ–æ–Ω–∞: –ø—É—Å—Ç—å –∫–æ–º–ø–∞–Ω–∏—è –≤—ã–±–µ—Ä–µ—Ç —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –ø–æ–∫–∞–∂–µ—à—å –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å —Å–≤—è–∑–∞–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é. –û—Ç–∫–∞–∑–∞–ª—Å—è(-–∞—Å—å) ‚Äî —Å–¥–µ–ª–∞–π 15 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π."},
    {"id":"extreme-d-50","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"16+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–æ—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ –∏–∑ —Ç—Ä—ë—Ö —Å–≤–æ–∏—Ö ¬´–≥—Ä—è–∑–Ω—ã—Ö¬ª –ø—Ä–∏–≤—ã—á–µ–∫ –≤ –∑–∞–º–µ—Ç–∫–µ –∏–ª–∏ –Ω–∞ –ª–∏—Å—Ç–∫–µ –∏ –∑–∞—á–∏—Ç–∞–π –≤—Å–ª—É—Ö, –≥–ª—è–¥—è –∫–∞–∂–¥–æ–º—É –≤ –≥–ª–∞–∑–∞."},

    # 18+ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    {"id":"romance18-t-01","type":"truth","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["—Å–æ—Ü"],"text":"–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–≤–∏–ª –≤ —Ç–µ–±–µ ¬´üî• –∏—Å–∫—Ä—É¬ª?"},
    {"id":"romance18-d-01","type":"dare","category":"–†–æ–º–∞–Ω—Ç–∏–∫–∞","age":"18+","tags":["–∫—Ä–µ–∞—Ç–∏–≤"],"text":"–°–æ—á–∏–Ω–∏ —Å–º–µ–ª—ã–π —Ç–æ—Å—Ç, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Å–µ–º —Å—Ç–∞–Ω–µ—Ç –∂–∞—Ä–∫–æ."},
    {"id":"extreme18-t-01","type":"truth","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["—Å–º–µ—Ö"],"text":"–ö–∞–∫–æ–π —Å–∞–º—ã–π –¥–µ—Ä–∑–∫–∏–π –ø–æ—Å—Ç—É–ø–æ–∫ —Ç—ã —Å–¥–µ–ª–∞–ª(-–∞) —Ä–∞–¥–∏ –≤–µ—Å–µ–ª—å—è?"},
    {"id":"extreme18-d-01","type":"dare","category":"–ñ–µ—Å—Ç—å","age":"18+","tags":["–∞–∫—Ç–∏–≤"],"text":"–ü—Ä–∏–¥—É–º–∞–π –∏ –∏–∑–æ–±—Ä–∞–∑–∏ ¬´üî• —Ç–∞–Ω–µ—Ü –ø–æ–±–µ–¥—ã¬ª –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 15 —Å–µ–∫—É–Ω–¥."}
]

AGE_LEVELS: Dict[str, Dict[str, object]] = {
    "0+": {"emoji": "üå±", "title": "0+", "rank": 0},
    "6+": {"emoji": "üåº", "title": "6+", "rank": 1},
    "12+": {"emoji": "üåü", "title": "12+", "rank": 2},
    "16+": {"emoji": "‚ö°", "title": "16+", "rank": 3},
    "18+": {"emoji": "üî•", "title": "18+", "rank": 4},
}

CATEGORY_INFO: Dict[str, Dict[str, object]] = {
    "–õ—ë–≥–∫–æ–µ": {"emoji": "‚ú®", "title": "–õ—ë–≥–∫–æ–µ"},
    "–î—Ä—É–∑—å—è": {"emoji": "ü§ù", "title": "–î—Ä—É–∂–±–∞"},
    "–†–æ–º–∞–Ω—Ç–∏–∫–∞": {"emoji": "üíû", "title": "–†–æ–º–∞–Ω—Ç–∏–∫–∞"},
    "–ñ–µ—Å—Ç—å": {"emoji": "üí•", "title": "–ñ–µ—Å—Ç—å"},
}


def apply_safety_note(deck: List[Dict]):
    risky_rank = AGE_LEVELS["16+"]["rank"]
    for card in deck:
        if card.get("type") != "dare":
            continue
        category = card.get("category")
        age = card.get("age")
        rank = AGE_LEVELS.get(age, {}).get("rank", 0)
        needs_note = False
        if category == "–ñ–µ—Å—Ç—å" and rank >= risky_rank:
            needs_note = True
        if category == "–†–æ–º–∞–Ω—Ç–∏–∫–∞" and age == "18+":
            needs_note = True
        if needs_note:
            text = card.get("text", "")
            if SAFETY_NOTE.strip() not in text:
                card["text"] = text.rstrip() + SAFETY_NOTE


apply_safety_note(DEFAULT_DECK)

TIMER_OPTIONS: Sequence[int] = (0, 20, 30, 45, 60)
DEFAULT_TIMER_SECONDS = 30
DEFAULT_AGE_LEVEL = "16+"
DEFAULT_CATEGORY_KEY = "–õ—ë–≥–∫–æ–µ"
DEFAULT_CATEGORY_SET: Set[str] = {DEFAULT_CATEGORY_KEY}
SELECTED_MARK = "‚úÖ"
UNSELECTED_MARK = "‚ñ´Ô∏è"
MAX_NAME_LENGTH = 32
DEFAULT_PLAYER_NAME = "–ò–≥—Ä–æ–∫"

MESSAGES = {
    "GAME_NOT_FOUND": "–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ –ª–æ–±–±–∏ –∫–æ–º–∞–Ω–¥–æ–π /newgame.",
    "HOST_ONLY": "–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ.",
    "ADD_HOST_ONLY": "–î–æ–±–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã.",
    "ADD_LOBBY_ONLY": "–î–æ–±–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª–æ–±–±–∏.",
    "NAME_PROMPT": "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–≥—Ä–æ–∫–∞ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ù–∞–ø–∏—à–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å.",
    "NAME_PENDING": "‚úçÔ∏è –Ø —É–∂–µ –∂–¥—É –∏–º—è –∏–≥—Ä–æ–∫–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª.",
    "NAME_COMMAND_ERROR": "–ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –∏–º—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª.",
    "NAME_CANCELLED": "üö´ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
    "NAME_ADDED": "‚úÖ –ò–≥—Ä–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω: <b>{name}</b>.",
    "NAME_ADD_FAILED": "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è.",
    "CANCEL_NOT_EXPECTED": "–°–µ–π—á–∞—Å –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –Ω–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è.",
    "CANCEL_HOST_ONLY": "–û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç, –∫—Ç–æ –µ–≥–æ –Ω–∞—á–∞–ª.",
    "INPUT_CANCELLED": "–í–≤–æ–¥ –∏–º–µ–Ω–∏ –æ—Ç–º–µ–Ω—ë–Ω.",
    "RENAME_PROMPT": "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è –∏–≥—Ä–æ–∫–∞ <b>{name}</b>. –ù–∞–ø–∏—à–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å.",
    "RENAME_CANCELLED": "üö´ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
    "RENAME_COMMAND_ERROR": "–ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª.",
    "RENAME_DONE": "‚úèÔ∏è –ò–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: <b>{name}</b>.",
    "PLAYER_NOT_FOUND": "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
    "MANAGE_HOST_ONLY": "–ú–µ–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã.",
    "MANAGE_LOBBY_ONLY": "–£–ø—Ä–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–∫–∞–º–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª–æ–±–±–∏.",
    "MOVE_UPDATED": "–ü–æ—Ä—è–¥–æ–∫ –æ–±–Ω–æ–≤–ª—ë–Ω.",
    "MOVE_FAILED": "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫.",
    "ALREADY_FIRST": "–ò–≥—Ä–æ–∫ —É–∂–µ –ø–µ—Ä–≤—ã–π.",
    "ALREADY_LAST": "–ò–≥—Ä–æ–∫ —É–∂–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π.",
    "DELETE_DONE": "–ò–≥—Ä–æ–∫ —É–¥–∞–ª—ë–Ω.",
    "DELETE_FAILED": "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞.",
    "DELETE_CONTINUE_NOTE": "–ò–≥—Ä–æ–∫ —É–¥–∞–ª—ë–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É.",
    "NO_PLAYERS_END": "üèÅ –ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å.",
    "CARD_REROLL_NO_OPTIONS": "–î—Ä—É–≥–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å ‚Äî –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ —ç—Ç–æ–π.",
    "CARD_REROLL_OK": "–ù–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –≥–æ—Ç–æ–≤–∞!",
}


def message(key: str, **kwargs) -> str:
    return MESSAGES[key].format(**kwargs)


def normalize_name(raw: Optional[str], *, max_length: int = MAX_NAME_LENGTH) -> str:
    text = "" if raw is None else str(raw)
    cleaned = " ".join(text.split())
    if not cleaned:
        cleaned = DEFAULT_PLAYER_NAME
    if max_length <= 0:
        return cleaned
    if len(cleaned) > max_length:
        trimmed = cleaned[: max_length - 1].rstrip()
        if not trimmed:
            trimmed = DEFAULT_PLAYER_NAME[: max_length - 1].rstrip()
        cleaned = f"{trimmed}‚Ä¶"
    return cleaned


def _candidate_with_suffix(base: str, suffix_index: int) -> str:
    if suffix_index <= 1:
        return base
    suffix = f" ({suffix_index})"
    limit = MAX_NAME_LENGTH - len(suffix)
    core = base
    if limit < 1:
        return f"{DEFAULT_PLAYER_NAME}{suffix}"[:MAX_NAME_LENGTH]
    if len(core) > limit:
        slice_limit = max(1, limit - 1)
        trimmed = core[:slice_limit].rstrip()
        core = f"{trimmed}‚Ä¶" if trimmed else DEFAULT_PLAYER_NAME[:limit]
    return f"{core}{suffix}"


def ensure_unique_name(
    game: "ChatGame", base_name: str, *, exclude_id: Optional[int] = None
) -> str:
    desired = base_name or DEFAULT_PLAYER_NAME
    existing = {
        p.name.casefold()
        for p in getattr(game, "players", [])
        if exclude_id is None or p.user_id != exclude_id
    }
    if desired.casefold() not in existing:
        return desired
    for suffix_index in range(2, 200):
        candidate = _candidate_with_suffix(desired, suffix_index)
        if candidate.casefold() not in existing:
            return candidate
    # –∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π ‚Äî –¥–æ–±–∞–≤–∏–º –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä, —Å–æ—Ö—Ä–∞–Ω–∏–≤ –¥–ª–∏–Ω—É
    fallback = _candidate_with_suffix(desired, random.randint(200, 999))
    return fallback[:MAX_NAME_LENGTH]


def prepare_player_name(
    game: "ChatGame",
    raw_name: Optional[str],
    *,
    exclude_id: Optional[int] = None,
) -> str:
    normalized = normalize_name(raw_name)
    return ensure_unique_name(game, normalized, exclude_id=exclude_id)

# ===========================
# –ò–ì–†–û–í–´–ï –°–¢–†–£–ö–¢–£–†–´
# ===========================

@dataclass
class Player:
    user_id: int
    name: str
    is_virtual: bool = False

@dataclass
class Turn:
    player_id: int
    type: Optional[str] = None            # "truth" | "dare"
    card_id: Optional[str] = None
    message_id: Optional[int] = None      # —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º/–∑–∞–¥–∞–Ω–∏–µ–º
    rerolled: bool = False

@dataclass
class ChatGame:
    chat_id: int
    host_id: int
    players: List[Player] = field(default_factory=list)
    current_idx: int = -1
    in_progress: bool = False
    scores: Dict[int, int] = field(default_factory=dict)
    used_ids: Set[str] = field(default_factory=set)
    settings: Dict = field(
        default_factory=lambda: {
            "timer": DEFAULT_TIMER_SECONDS,
            "points": True,
            "skip_penalty": 0,
            "age_level": DEFAULT_AGE_LEVEL,
            "categories": set(DEFAULT_CATEGORY_SET),
        }
    )
    current_turn: Optional[Turn] = None
    timer_task: Optional[asyncio.Task] = None
    extra_deck: List[Dict] = field(default_factory=list)  # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    deck_cache: Dict[str, List[str]] = field(
        default_factory=lambda: {"truth": [], "dare": []}
    )
    lobby_message_id: Optional[int] = None
    settings_message_id: Optional[int] = None
    panel_message_id: Optional[int] = None
    rounds_played: int = 0
    virtual_counter: int = 0
    player_menu_message_id: Optional[int] = None
    player_menu_state: str = "root"

    def current_player(self) -> Optional[Player]:
        if not self.players:
            return None
        if self.current_idx < 0:
            return None
        return self.players[self.current_idx % len(self.players)]


@dataclass
class PendingPlayerAddition:
    chat_id: int
    host_id: int
    message_id: Optional[int] = None


@dataclass
class PendingPlayerRename:
    chat_id: int
    host_id: int
    player_id: int

# –í—Å–µ –∏–≥—Ä—ã –ø–æ —á–∞—Ç–∞–º
GAMES: Dict[int, ChatGame] = {}

# –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤ (chat_id, host_id) -> PendingPlayerAddition
PENDING_PLAYER_ADDITIONS: Dict[Tuple[int, int], PendingPlayerAddition] = {}
PENDING_PLAYER_RENAMES: Dict[Tuple[int, int], PendingPlayerRename] = {}

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã: (chat_id, user_id) -> timestamp
END_CONFIRMATIONS: Dict[Tuple[int, int], float] = {}
END_CONFIRM_TIMEOUT = 15.0


def clear_pending_additions(chat_id: int):
    for key in [key for key in PENDING_PLAYER_ADDITIONS if key[0] == chat_id]:
        PENDING_PLAYER_ADDITIONS.pop(key, None)


def clear_pending_renames(chat_id: int):
    for key in [key for key in PENDING_PLAYER_RENAMES if key[0] == chat_id]:
        PENDING_PLAYER_RENAMES.pop(key, None)


def get_pending_addition(chat_id: int) -> Optional[Tuple[Tuple[int, int], PendingPlayerAddition]]:
    for key, pending in PENDING_PLAYER_ADDITIONS.items():
        if key[0] == chat_id:
            return key, pending
    return None


def require_end_confirmation(chat_id: int, user_id: int) -> bool:
    key = (chat_id, user_id)
    now = time.monotonic()
    last = END_CONFIRMATIONS.get(key)
    if last is None or now - last > END_CONFIRM_TIMEOUT:
        END_CONFIRMATIONS[key] = now
        return False
    END_CONFIRMATIONS.pop(key, None)
    return True


def reset_deck_cache(game: ChatGame, *, clear_used: bool = False):
    """–°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –Ω–æ–≤–æ–π —Å–ª—É—á–∞–π–Ω–æ–π —Ä–∞–∑–¥–∞—á–∏."""
    if not isinstance(game.deck_cache, dict):  # —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π —Å—Ç–∞—Ä–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        game.deck_cache = {"truth": [], "dare": []}
    for kind in ("truth", "dare"):
        game.deck_cache[kind] = []
    if clear_used:
        game.used_ids.clear()

# ===========================
# AIROGRAM SETUP
# ===========================

from aiogram.client.default import DefaultBotProperties

bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode="HTML")
)

dp = Dispatcher()

# ===========================
# –£–¢–ò–õ–ò–¢–´
# ===========================

def mention_html(user_id: int, name: str) -> str:
    safe = html.escape(name, quote=False)
    return f'<a href="tg://user?id={user_id}">{safe}</a>'


def render_player_link(player: Player) -> str:
    if player.is_virtual:
        return html.escape(player.name)
    return mention_html(player.user_id, player.name)


def get_player_display(game: ChatGame, user_id: int) -> str:
    player = get_player(game, user_id)
    if player:
        return render_player_link(player)
    return mention_html(user_id, "–ò–≥—Ä–æ–∫")

def is_host(game: ChatGame, user_id: int) -> bool:
    return game.host_id == user_id


def can_control_turn(game: ChatGame, user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–∫—É—â–∏–º —Ö–æ–¥–æ–º."""
    turn = game.current_turn
    if not turn:
        return False
    # –ù–∞ –æ–¥–Ω–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ –≤–µ–¥—É—â–∏–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º
    # –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–µ–º—É —Ö–æ–¥—É –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞.
    return user_id == turn.player_id or is_host(game, user_id)


def get_player(game: ChatGame, user_id: int) -> Optional[Player]:
    return next((p for p in game.players if p.user_id == user_id), None)


def format_player_name(game: ChatGame, player: Player) -> str:
    prefix = "üëë" if player.user_id == game.host_id else "üéÆ"
    return f"{prefix} {render_player_link(player)}"


def cleanup_scores(game: ChatGame):
    player_ids = {p.user_id for p in game.players}
    game.scores = {uid: score for uid, score in game.scores.items() if uid in player_ids}


def format_scores(game: ChatGame) -> str:
    cleanup_scores(game)
    if not game.scores:
        return "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª –æ—á–∫–∏."
    ordered: List[Tuple[int, int]] = sorted(
        game.scores.items(), key=lambda kv: kv[1], reverse=True
    )
    lines = []
    for position, (uid, score) in enumerate(ordered, start=1):
        player = get_player(game, uid)
        name = player.name if player else f"–ò–≥—Ä–æ–∫ {uid}"
        medal = "ü•á" if position == 1 else "ü•à" if position == 2 else "ü•â" if position == 3 else "üéØ"
        prefix = medal
        if player and player.is_virtual:
            ref = html.escape(name)
        else:
            ref = mention_html(uid, name)
        lines.append(f"{prefix} {ref} ‚Äî <b>{score}</b>")
    return "\n".join(lines)


def describe_timer(seconds: int) -> str:
    return "–ë–µ–∑ —Ç–∞–π–º–µ—Ä–∞" if seconds <= 0 else f"{seconds} —Å"


def describe_age(level: str) -> str:
    data = AGE_LEVELS.get(level, AGE_LEVELS[DEFAULT_AGE_LEVEL])
    return f"{data['emoji']} {data['title']}"


def get_selected_categories(game: ChatGame) -> Set[str]:
    raw = game.settings.get("categories")
    if isinstance(raw, set):
        categories = {c for c in raw if c in CATEGORY_INFO}
    elif isinstance(raw, (list, tuple)):
        categories = {c for c in raw if c in CATEGORY_INFO}
    else:
        fallback = game.settings.get("category")
        categories = {fallback} if fallback in CATEGORY_INFO else set()
    if not categories:
        categories = set(DEFAULT_CATEGORY_SET)
    game.settings["categories"] = set(categories)
    game.settings.pop("category", None)
    return game.settings["categories"]


def describe_categories(categories: Set[str]) -> str:
    if not categories:
        categories = set(DEFAULT_CATEGORY_SET)
    ordered = [key for key in CATEGORY_INFO if key in categories]
    if not ordered:
        ordered = [DEFAULT_CATEGORY_KEY]
    parts = []
    for key in ordered:
        info = CATEGORY_INFO.get(key, {"emoji": "‚ùì", "title": key})
        title = info.get("title", key)
        parts.append(f"{info.get('emoji', '‚ùì')} {title}")
    return ", ".join(parts)


def describe_penalty(game: ChatGame) -> str:
    return "-1" if game.settings.get("skip_penalty", 0) == -1 else "0"


def describe_points(game: ChatGame) -> str:
    return "–í–∫–ª—é—á–µ–Ω—ã" if game.settings.get("points", True) else "–û—Ç–∫–ª—é—á–µ–Ω—ã"


def register_player(
    game: ChatGame,
    user_id: int,
    full_name: str,
    *,
    is_virtual: bool = False,
) -> Optional[Player]:
    if not is_virtual and get_player(game, user_id):
        return None
    name = prepare_player_name(
        game,
        full_name,
        exclude_id=user_id if not is_virtual else None,
    )
    player = Player(user_id, name, is_virtual=is_virtual)
    game.players.append(player)
    game.scores.setdefault(user_id, 0)
    return player


def drop_player(game: ChatGame, user_id: int) -> Tuple[bool, bool]:
    removed_index: Optional[int] = None
    for idx, player in enumerate(game.players):
        if player.user_id == user_id:
            removed_index = idx
            break

    if removed_index is None:
        return False, False

    game.players.pop(removed_index)
    game.scores.pop(user_id, None)

    removed_current = False
    if game.current_turn and game.current_turn.player_id == user_id:
        removed_current = True
        game.current_turn = None

    if game.current_idx >= removed_index:
        game.current_idx -= 1

    if not game.players:
        game.current_idx = -1
    else:
        if game.current_idx < -1:
            game.current_idx = -1
        if game.current_idx >= len(game.players):
            game.current_idx = len(game.players) - 1

    return True, removed_current


def move_player_in_list(game: ChatGame, user_id: int, offset: int) -> bool:
    players = game.players
    for idx, player in enumerate(players):
        if player.user_id == user_id:
            new_idx = idx + offset
            if new_idx < 0 or new_idx >= len(players):
                return False
            players[idx], players[new_idx] = players[new_idx], players[idx]
            game.current_idx = -1
            return True
    return False


def allocate_virtual_id(game: ChatGame) -> int:
    game.virtual_counter -= 1
    return game.virtual_counter


def is_message_not_modified(exc: TelegramBadRequest) -> bool:
    return "message is not modified" in str(exc).lower()


async def safe_delete_message(chat_id: int, message_id: Optional[int]):
    if not message_id:
        return
    try:
        await bot.delete_message(chat_id, message_id)
    except TelegramBadRequest:
        pass
    except Exception:
        pass


async def refresh_lobby(
    game: ChatGame,
    *,
    message: Optional[Message] = None,
    force_new: bool = False,
):
    players_lines = [format_player_name(game, p) for p in game.players]
    players_block = "\n".join(players_lines) if players_lines else "‚Äî"
    text = (
        "üß© <b>–õ–æ–±–±–∏ –∏–≥—Ä—ã</b>\n"
        f"üë• –ò–≥—Ä–æ–∫–∏ ({len(game.players)}):\n{players_block}\n\n"
        "–î–æ–±–∞–≤–ª—è–π—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –∫–Ω–æ–ø–∫–æ–π ¬´–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞¬ª. ¬´–°—Ç–∞—Ä—Ç¬ª –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–∞—Ä—Ç–∏—é, ¬´–í—ã–π—Ç–∏¬ª –≤–µ—Ä–Ω—ë—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
    )
    keyboard = lobby_keyboard(game)
    target_chat = game.chat_id

    if message:
        try:
            await message.edit_text(text, reply_markup=keyboard)
            game.lobby_message_id = message.message_id
            return
        except TelegramBadRequest as exc:
            if is_message_not_modified(exc):
                game.lobby_message_id = message.message_id
                return
        except Exception:
            pass

    old_message_id: Optional[int] = None
    if force_new and game.lobby_message_id:
        old_message_id = game.lobby_message_id
        game.lobby_message_id = None

    if game.lobby_message_id and not force_new:
        try:
            await bot.edit_message_text(
                text,
                chat_id=target_chat,
                message_id=game.lobby_message_id,
                reply_markup=keyboard,
            )
            return
        except TelegramBadRequest as exc:
            if is_message_not_modified(exc):
                return
        except Exception:
            pass

    sent = await bot.send_message(target_chat, text, reply_markup=keyboard)
    game.lobby_message_id = sent.message_id

    if old_message_id and old_message_id != sent.message_id:
        try:
            await bot.delete_message(target_chat, old_message_id)
        except Exception:
            pass


def settings_summary(game: ChatGame) -> str:
    return (
        f"‚è±Ô∏è –¢–∞–π–º–µ—Ä: <b>{describe_timer(game.settings.get('timer', 0))}</b>\n"
        f"üéö –í–æ–∑—Ä–∞—Å—Ç: <b>{describe_age(game.settings.get('age_level', DEFAULT_AGE_LEVEL))}</b>\n"
        f"üé≠ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>{describe_categories(get_selected_categories(game))}</b>\n"
        f"‚≠ê –û—á–∫–∏: <b>{describe_points(game)}</b>\n"
        f"‚öñÔ∏è –®—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–æ–ø—É—Å–∫: <b>{describe_penalty(game)}</b>"
    )


def settings_text(game: ChatGame, menu: str) -> str:
    header = "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã</b>"
    summary = settings_summary(game)
    if menu == "root":
        return (
            f"{header}\n\n"
            f"{summary}\n\n"
            "–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.\nüîí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≥–¥–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏–≥—Ä–∞."
        )
    if menu == "timer":
        return f"{header}\n\n–í—ã–±–µ—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–æ–¥–∞:"
    if menu == "age":
        return f"{header}\n\n–í—ã–±–µ—Ä–∏ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —É—Ä–æ–≤–µ–Ω—å –∫–æ–ª–æ–¥—ã:"
    if menu == "category":
        return f"{header}\n\n–û—Ç–º–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–ª–æ–¥–µ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ):"
    if menu == "other":
        return f"{header}\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:" \
            f"\n\n{summary}"
    return header


def player_menu_text(game: ChatGame, menu: str) -> str:
    header = "üõ†Ô∏è <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏</b>"
    if menu == "root":
        return (
            f"{header}\n\n"
            "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤."
        )
    if menu == "rename":
        return f"{header}\n\n–í—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å."
    if menu == "reorder":
        return (
            "üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏\n"
            "–í–µ—Ä—Ö —Å–ø–∏—Å–∫–∞ —Ö–æ–¥–∏—Ç —Ä–∞–Ω—å—à–µ"
        )
    if menu == "delete":
        return f"{header}\n\n–í—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ –ª–æ–±–±–∏."
    return header


def build_player_menu_keyboard(game: ChatGame, menu: str) -> InlineKeyboardMarkup:
    rows: List[List[InlineKeyboardButton]] = []
    if menu == "root":
        rows = [
            [InlineKeyboardButton(text="‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", callback_data="pm:menu:rename")],
            [InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫", callback_data="pm:menu:reorder")],
            [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data="pm:menu:delete")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ó–∞–∫—Ä—ã—Ç—å", callback_data="pm:close")],
        ]
    elif menu == "rename":
        rows = [
            [
                InlineKeyboardButton(
                    text=f"{idx + 1}. {player.name}",
                    callback_data=f"pm:rename:{player.user_id}",
                )
            ]
            for idx, player in enumerate(game.players)
        ]
        rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="pm:menu:root")])
    elif menu == "reorder":
        last_index = len(game.players) - 1
        for idx, player in enumerate(game.players):
            row: List[InlineKeyboardButton] = []
            if idx > 0:
                row.append(
                    InlineKeyboardButton(
                        text="‚¨ÜÔ∏è", callback_data=f"pm:move:up:{player.user_id}"
                    )
                )
            if idx < last_index:
                row.append(
                    InlineKeyboardButton(
                        text="‚¨áÔ∏è", callback_data=f"pm:move:down:{player.user_id}"
                    )
                )

            row.append(InlineKeyboardButton(text=player.name, callback_data="pm:noop"))
            rows.append(row)

        rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="pm:menu:root")])
    elif menu == "delete":
        rows = [
            [
                InlineKeyboardButton(
                    text=f"üóë {player.name}",
                    callback_data=f"pm:delete:{player.user_id}",
                )
            ]
            for player in game.players
        ]
        rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="pm:menu:root")])
    else:
        rows = [[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="pm:menu:root")]]
    return InlineKeyboardMarkup(inline_keyboard=rows)


def start_menu_keyboard(has_game: bool) -> InlineKeyboardMarkup:
    rows = [
        [
            InlineKeyboardButton(text="üéÆ –ù–æ–≤–∞—è –∏–≥—Ä–∞", callback_data="main:newgame"),
            InlineKeyboardButton(text="üìä –°—á—ë—Ç", callback_data="main:score"),
        ],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="main:help")],
    ]
    if has_game:
        rows.append([InlineKeyboardButton(text="üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="main:end")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


async def send_main_menu(chat_id: int):
    game = GAMES.get(chat_id)
    has_game = bool(game and game.in_progress)
    await bot.send_message(
        chat_id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∏–≥—Ä–∞ <b>–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ</b>.\n\n"
        "–°–æ–∑–¥–∞–π –ª–æ–±–±–∏ –∫–æ–º–∞–Ω–¥–æ–π /newgame ‚Äî —Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥—ë—à—å –≤ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤."
        " –î–æ–±–∞–≤–ª—è–π –∏–≥—Ä–æ–∫–æ–≤ –∫–Ω–æ–ø–∫–æ–π ¬´–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞¬ª, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –∏–º—è.\n"
        "–ö–æ–≥–¥–∞ –≤—Å–µ –≥–æ—Ç–æ–≤—ã ‚Äî –Ω–∞–∂–∏–º–∞–π ¬´–°—Ç–∞—Ä—Ç¬ª.\n\n"
        "–í—ã–±–∏—Ä–∞–π –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ üëá",
        reply_markup=start_menu_keyboard(has_game),
    )


def build_settings_keyboard(game: ChatGame, menu: str = "root") -> InlineKeyboardMarkup:
    rows: List[List[InlineKeyboardButton]] = []
    if menu == "root":
        rows = [
            [
                InlineKeyboardButton(text="‚è±Ô∏è –í—Ä–µ–º—è", callback_data="st:menu:timer"),
                InlineKeyboardButton(text="üéö –í–æ–∑—Ä–∞—Å—Ç", callback_data="st:menu:age"),
            ],
            [
                InlineKeyboardButton(text="üé≠ –ö–∞—Ç–µ–≥–æ—Ä–∏—è", callback_data="st:menu:category"),
                InlineKeyboardButton(text="üß© –î—Ä—É–≥–æ–µ", callback_data="st:menu:other"),
            ],
            [InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="st:close")],
        ]
    elif menu == "timer":
        current_timer = game.settings.get("timer", 0)
        rows = [
            [
                InlineKeyboardButton(
                    text=(
                        (f"{SELECTED_MARK} " if t == current_timer else f"{UNSELECTED_MARK} ")
                        + ("–ë–µ–∑ —Ç–∞–π–º–µ—Ä–∞" if t == 0 else f"{t} —Å")
                    ),
                    callback_data=f"st:set:timer:{t}",
                )
            ]
            for t in TIMER_OPTIONS
        ]
        rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="st:menu:root")])
    elif menu == "age":
        buttons = []
        current = game.settings.get("age_level", DEFAULT_AGE_LEVEL)
        for key, data in sorted(AGE_LEVELS.items(), key=lambda item: item[1]["rank"]):
            prefix = SELECTED_MARK if key == current else UNSELECTED_MARK
            buttons.append(
                InlineKeyboardButton(
                    text=f"{prefix} {data['emoji']} {data['title']}",
                    callback_data=f"st:set:age:{key}",
                )
            )
        rows = [[btn] for btn in buttons]
        rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="st:menu:root")])
    elif menu == "category":
        selected = get_selected_categories(game)
        rows = []
        for key, info in CATEGORY_INFO.items():
            prefix = SELECTED_MARK if key in selected else UNSELECTED_MARK
            title = info.get("title", key)
            rows.append([
                InlineKeyboardButton(
                    text=f"{prefix} {info['emoji']} {title}",
                    callback_data=f"st:toggle:category:{key}",
                )
            ])
        rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="st:menu:root")])
    elif menu == "other":
        points_text = (
            "‚≠ê –û—á–∫–∏: " + ("–í–∫–ª" if game.settings.get("points", True) else "–í—ã–∫–ª")
        )
        penalty_text = (
            "‚öñÔ∏è –®—Ç—Ä–∞—Ñ: "
            + ("-1" if game.settings.get("skip_penalty", 0) == -1 else "0")
        )
        rows = [
            [InlineKeyboardButton(text=points_text, callback_data="st:toggle:points")],
            [InlineKeyboardButton(text=penalty_text, callback_data="st:toggle:penalty")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="st:menu:root")],
        ]
    else:
        rows = [[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="st:menu:root")]]
    return InlineKeyboardMarkup(inline_keyboard=rows)


async def show_player_menu(
    game: ChatGame, menu: str = "root", *, message: Optional[Message] = None
):
    text = player_menu_text(game, menu)
    keyboard = build_player_menu_keyboard(game, menu)
    target_chat = game.chat_id

    if message:
        try:
            await message.edit_text(text, reply_markup=keyboard)
            game.player_menu_message_id = message.message_id
            game.player_menu_state = menu
            return
        except TelegramBadRequest as exc:
            if is_message_not_modified(exc):
                game.player_menu_message_id = message.message_id
                game.player_menu_state = menu
                return
        except Exception:
            pass

    if game.player_menu_message_id:
        try:
            await bot.edit_message_text(
                text,
                chat_id=target_chat,
                message_id=game.player_menu_message_id,
                reply_markup=keyboard,
            )
            game.player_menu_state = menu
            return
        except TelegramBadRequest as exc:
            if is_message_not_modified(exc):
                game.player_menu_state = menu
                return
        except Exception:
            pass

    sent = await bot.send_message(target_chat, text, reply_markup=keyboard)
    game.player_menu_message_id = sent.message_id
    game.player_menu_state = menu


async def show_settings_menu(
    game: ChatGame, menu: str = "root", *, message: Optional[Message] = None
):
    text = settings_text(game, menu)
    keyboard = build_settings_keyboard(game, menu)
    target_chat = game.chat_id

    if message:
        try:
            await message.edit_text(text, reply_markup=keyboard)
            game.settings_message_id = message.message_id
            return
        except TelegramBadRequest as exc:
            if is_message_not_modified(exc):
                game.settings_message_id = message.message_id
                return
        except Exception:
            pass

    if game.settings_message_id:
        try:
            await bot.edit_message_text(
                text,
                chat_id=target_chat,
                message_id=game.settings_message_id,
                reply_markup=keyboard,
            )
            return
        except TelegramBadRequest as exc:
            if is_message_not_modified(exc):
                return
        except Exception:
            pass

    sent = await bot.send_message(target_chat, text, reply_markup=keyboard)
    game.settings_message_id = sent.message_id


async def close_settings_menu(game: ChatGame):
    if not game.settings_message_id:
        return
    try:
        await bot.delete_message(game.chat_id, game.settings_message_id)
    except Exception:
        pass
    game.settings_message_id = None


async def close_player_menu(game: ChatGame):
    if not game.player_menu_message_id:
        return
    try:
        await bot.delete_message(game.chat_id, game.player_menu_message_id)
    except Exception:
        pass
    game.player_menu_message_id = None
    game.player_menu_state = "root"


async def end_game_session(
    game: ChatGame,
    reason: str,
    *,
    return_to_menu: bool = False,
    keep_game: bool = True,
):
    await cancel_timer(game)
    await close_settings_menu(game)
    await close_player_menu(game)
    clear_pending_additions(game.chat_id)
    clear_pending_renames(game.chat_id)

    if game.panel_message_id:
        try:
            await bot.delete_message(game.chat_id, game.panel_message_id)
        except Exception:
            try:
                await bot.edit_message_reply_markup(
                    chat_id=game.chat_id,
                    message_id=game.panel_message_id,
                    reply_markup=None,
                )
            except Exception:
                pass
        game.panel_message_id = None

    rounds_finished = game.rounds_played
    game.in_progress = False
    game.current_turn = None

    cleanup_scores(game)
    summary = format_scores(game)
    scoreboard_text = ""
    if game.settings.get("points", True) and rounds_finished > 0 and game.scores:
        scoreboard_text = f"\n\nüèÜ <b>–§–∏–Ω–∞–ª—å–Ω—ã–π —Å—á—ë—Ç</b>:\n{summary}"
    elif game.scores:
        scoreboard_text = f"\n\nüìä –ò—Ç–æ–≥–∏:\n{summary}"

    await bot.send_message(game.chat_id, f"{reason}{scoreboard_text}")

    if keep_game:
        game.current_idx = -1
        game.rounds_played = 0
        reset_deck_cache(game, clear_used=True)
        await refresh_lobby(game, force_new=True)
    else:
        if game.lobby_message_id:
            try:
                await bot.delete_message(game.chat_id, game.lobby_message_id)
            except Exception:
                pass
            game.lobby_message_id = None

    if return_to_menu:
        await send_main_menu(game.chat_id)

    if not keep_game:
        GAMES.pop(game.chat_id, None)

def get_deck_for_game(game: ChatGame) -> List[Dict]:
    # —Ñ–∏–ª—å—Ç—Ä –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É/–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    selected_age = game.settings.get("age_level", DEFAULT_AGE_LEVEL)
    if selected_age not in AGE_LEVELS:
        selected_age = DEFAULT_AGE_LEVEL
        game.settings["age_level"] = selected_age
    age_rank = AGE_LEVELS[selected_age]["rank"]
    if selected_age == "18+":
        allowed_age = {"18+"}
    else:
        allowed_age = {
            age for age, data in AGE_LEVELS.items() if data["rank"] <= age_rank
        }

    selected_categories = get_selected_categories(game)
    allowed_categories = set(selected_categories) if selected_categories else set(DEFAULT_CATEGORY_SET)

    deck = [
        c
        for c in (DEFAULT_DECK + game.extra_deck)
        if c.get("age") in allowed_age and c.get("category") in allowed_categories
    ]
    return deck

def pick_card(
    game: ChatGame,
    kind: str,
    *,
    exclude: Optional[Set[str]] = None,
) -> Tuple[Optional[Dict], bool]:
    available = [c for c in get_deck_for_game(game) if c.get("type") == kind]
    if not available:
        return None, False

    exclude_ids = set(exclude or [])
    cards_by_id = {c["id"]: c for c in available}
    queue = game.deck_cache.setdefault(kind, [])
    queue[:] = [cid for cid in queue if cid in cards_by_id]

    restarted = False
    if not queue:
        shuffled_ids = list(cards_by_id.keys())
        random.shuffle(shuffled_ids)
        queue.extend(shuffled_ids)
        if game.used_ids:
            restarted = True
        game.used_ids.clear()

    while queue:
        card_id = queue.pop()
        card = cards_by_id.get(card_id)
        if not card:
            continue
        if (
            exclude_ids
            and card_id in exclude_ids
            and len(cards_by_id) > len(exclude_ids)
        ):
            queue.insert(0, card_id)
            continue
        game.used_ids.add(card_id)
        return card, restarted

    return None, restarted

def lobby_keyboard(game: ChatGame) -> InlineKeyboardMarkup:
    buttons: List[List[InlineKeyboardButton]] = [
        [InlineKeyboardButton(text="‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç", callback_data="start")],
        [
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="add_player"),
            InlineKeyboardButton(text="üõ†Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="manage_players"),
        ],
        [
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
            InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data="exit"),
        ],
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)

def turn_choice_keyboard(game: ChatGame, show_end: bool) -> InlineKeyboardMarkup:
    row1 = [
        InlineKeyboardButton(text="üü¶ –ü—Ä–∞–≤–¥–∞", callback_data="truth"),
        InlineKeyboardButton(text="üü• –î–µ–π—Å—Ç–≤–∏–µ", callback_data="dare"),
    ]
    row2 = [InlineKeyboardButton(text="üîÅ –ü—Ä–æ–ø—É—Å–∫", callback_data="skip")]
    row3 = [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")]
    rows = [row1, row2, row3]
    if show_end:
        rows.append([InlineKeyboardButton(text="üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="end")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def task_keyboard(game: ChatGame, for_host: bool, allow_reroll: bool) -> InlineKeyboardMarkup:
    rows: List[List[InlineKeyboardButton]] = [
        [
            InlineKeyboardButton(text="‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ", callback_data="done"),
            InlineKeyboardButton(text="üîÅ –ü—Ä–æ–ø—É—Å–∫", callback_data="skip"),
        ]
    ]
    if allow_reroll:
        rows.append([InlineKeyboardButton(text="üîÅ –î—Ä—É–≥–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞", callback_data="reroll")])
    if for_host:
        rows.append([InlineKeyboardButton(text="üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="end")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def ensure_game(chat_id: int) -> Optional[ChatGame]:
    return GAMES.get(chat_id)


async def update_panel_message(
    game: ChatGame,
    text: str,
    *,
    reply_markup: Optional[InlineKeyboardMarkup] = None,
) -> Optional[int]:
    message_id = game.panel_message_id
    if message_id:
        try:
            await bot.edit_message_text(
                text,
                chat_id=game.chat_id,
                message_id=message_id,
                reply_markup=reply_markup,
            )
            return message_id
        except TelegramBadRequest as exc:
            if is_message_not_modified(exc):
                return message_id
        except Exception:
            pass

    sent = await bot.send_message(game.chat_id, text, reply_markup=reply_markup)
    game.panel_message_id = sent.message_id
    return sent.message_id

async def cancel_timer(game: ChatGame):
    if game and game.timer_task and not game.timer_task.done():
        game.timer_task.cancel()
        try:
            await game.timer_task
        except asyncio.CancelledError:
            pass
        game.timer_task = None

async def start_timer(game: ChatGame, seconds: int, on_expire):
    await cancel_timer(game)
    if seconds <= 0:
        return
    async def _job():
        try:
            await asyncio.sleep(seconds)
            await on_expire()
        except asyncio.CancelledError:
            return
    game.timer_task = asyncio.create_task(_job())

def next_index(game: ChatGame) -> int:
    if not game.players:
        return -1
    # –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –ø–æ–¥—Ä—è–¥
    game.current_idx = (game.current_idx + 1) % len(game.players)
    return game.current_idx


async def start_new_game_session(chat_id: int, host_id: int, host_name: str):
    existing = GAMES.get(chat_id)
    if existing:
        await end_game_session(
            existing,
            "üîÅ –õ–æ–±–±–∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ.",
            return_to_menu=False,
            keep_game=False,
        )

    clear_pending_additions(chat_id)
    clear_pending_renames(chat_id)
    game = ChatGame(chat_id=chat_id, host_id=host_id)
    register_player(game, host_id, host_name)
    GAMES[chat_id] = game

    placeholder = await bot.send_message(
        chat_id,
        "üÜï –°–æ–∑–¥–∞—ë–º –ª–æ–±–±–∏...",
        reply_markup=lobby_keyboard(game),
    )
    await refresh_lobby(game, message=placeholder)


async def send_scoreboard(chat_id: int):
    game = ensure_game(chat_id)
    if not game or not game.scores:
        await bot.send_message(chat_id, "–ü–æ–∫–∞ –Ω–µ—Ç –æ—á–∫–æ–≤.")
        return
    await bot.send_message(chat_id, "üìä <b>–¢–µ–∫—É—â–∏–π —Å—á—ë—Ç</b>:\n" + format_scores(game))


async def open_settings_interface(
    chat_id: int, user_id: int, *, callback: Optional[CallbackQuery] = None
):
    game = ensure_game(chat_id)
    if not game:
        if callback:
            await callback.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ /newgame", show_alert=True)
        else:
            await bot.send_message(chat_id, "–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ /newgame")
        return
    if not is_host(game, user_id):
        if callback:
            await callback.answer(
                "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Ç–æ–º—É, –∫—Ç–æ —Å–æ–∑–¥–∞–ª –∏–≥—Ä—É.",
                show_alert=True,
            )
        else:
            await bot.send_message(
                chat_id,
                "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Ç–æ–º—É, –∫—Ç–æ —Å–æ–∑–¥–∞–ª –∏–≥—Ä—É.",
            )
        return
    if callback:
        await callback.answer()
    await show_settings_menu(game)


async def finish_game_by_host(
    chat_id: int, user_id: int, *, callback: Optional[CallbackQuery] = None
):
    game = ensure_game(chat_id)
    if not game:
        if callback:
            await callback.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)
        else:
            await bot.send_message(chat_id, "–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    if not is_host(game, user_id):
        if callback:
            await callback.answer(
                "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç, –∫—Ç–æ –µ—ë –∑–∞–ø—É—Å—Ç–∏–ª.",
                show_alert=True,
            )
        else:
            await bot.send_message(
                chat_id,
                "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç, –∫—Ç–æ –µ—ë –∑–∞–ø—É—Å—Ç–∏–ª.",
            )
        return
    if callback:
        if not require_end_confirmation(chat_id, user_id):
            await callback.answer(
                "–¢–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É? –ü—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.",
                show_alert=True,
            )
            return
        await callback.answer()
    else:
        END_CONFIRMATIONS.pop((chat_id, user_id), None)
    await end_game_session(game, "üèÅ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!")


async def send_help_text(chat_id: int):
    await bot.send_message(
        chat_id,
        "‚ÑπÔ∏è <b>–ü—Ä–∞–≤–∏–ª–∞ –∏ –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
        "–°–æ–∑–¥–∞–π –ª–æ–±–±–∏ –∫–æ–º–∞–Ω–¥–æ–π /newgame. –°–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã —Å—Ä–∞–∑—É –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –∏ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é.\n"
        "–ù–∞–∂–º–∏ ¬´–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞¬ª –∏ –æ—Ç–ø—Ä–∞–≤—å –∏–º—è –∏–≥—Ä–æ–∫–∞ ‚Äî –±–æ—Ç —Å—Ä–∞–∑—É –≤–Ω–µ—Å—ë—Ç –µ–≥–æ –≤ –ª–æ–±–±–∏.\n\n"
        "–ö–æ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã ‚Äî –≤–µ–¥—É—â–∏–π –∂–º—ë—Ç ¬´–°—Ç–∞—Ä—Ç¬ª. –ö–∞–∂–¥—ã–π —Ö–æ–¥ –∏–≥—Ä–æ–∫ –≤—ã–±–∏—Ä–∞–µ—Ç <b>–ü—Ä–∞–≤–¥–∞</b> –∏–ª–∏ <b>–î–µ–π—Å—Ç–≤–∏–µ</b>.\n"
        "–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–µ–¥—É—â–∏–π –æ—Ç–º–µ—á–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–Ω–æ–ø–∫–∞–º–∏ ¬´–í—ã–ø–æ–ª–Ω–µ–Ω–æ¬ª –∏–ª–∏ ¬´–ü—Ä–æ–ø—É—Å–∫¬ª.\n\n"
        "–¢–∞–π–º–µ—Ä (0, 20, 30, 45 –∏–ª–∏ 60 —Å–µ–∫—É–Ω–¥), –≤–æ–∑—Ä–∞—Å—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ) –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞ —Ç–æ–º –∂–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.\n"
        "–ö–æ–º–∞–Ω–¥–∞ /score –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—á—ë—Ç, /end –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É —Å –∏—Ç–æ–≥–∞–º–∏.",
    )

# ===========================
# –•–ï–ù–î–õ–ï–†–´
# ===========================

@dp.message(CommandStart())
async def on_start(m: Message):
    await send_main_menu(m.chat.id)

@dp.message(Command("newgame"))
async def cmd_newgame(m: Message):
    await start_new_game_session(m.chat.id, m.from_user.id, m.from_user.full_name)


@dp.message(Command("score"))
async def cmd_score(m: Message):
    await send_scoreboard(m.chat.id)


@dp.message(Command("settings"))
async def cmd_settings(m: Message):
    await open_settings_interface(m.chat.id, m.from_user.id)


@dp.message(Command("end"))
async def cmd_end(m: Message):
    await finish_game_by_host(m.chat.id, m.from_user.id)


@dp.message(Command("help"))
async def cmd_help(m: Message):
    await send_help_text(m.chat.id)


@dp.callback_query(F.data.startswith("main:"))
async def on_main_menu_button(call: CallbackQuery):
    action = call.data.split(":", 1)[1] if call.data else ""
    chat_id = call.message.chat.id if call.message else call.from_user.id

    if action == "newgame":
        await call.answer()
        await start_new_game_session(chat_id, call.from_user.id, call.from_user.full_name)
    elif action == "score":
        await call.answer()
        await send_scoreboard(chat_id)
    elif action == "help":
        await call.answer()
        await send_help_text(chat_id)
    elif action == "end":
        game = ensure_game(chat_id)
        if not game or not game.in_progress:
            await call.answer("–°–µ–π—á–∞—Å –∏–≥—Ä—ã –Ω–µ—Ç. –ù–∞–∂–º–∏—Ç–µ ¬´–ù–æ–≤–∞—è –∏–≥—Ä–∞¬ª.", show_alert=True)
            return
        await finish_game_by_host(chat_id, call.from_user.id, callback=call)
    else:
        await call.answer()


@dp.message(Command("import_deck"))
async def cmd_import_deck(m: Message):
    chat_id = m.chat.id
    game = ensure_game(chat_id)
    if not game:
        await m.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ /newgame")
        return
    if not is_host(game, m.from_user.id):
        await m.answer("–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–æ–¥—É –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã.")
        return
    # –û–∂–∏–¥–∞–µ–º JSON –ø—Ä—è–º–æ –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    # –ü—Ä–∏–º–µ—Ä: /import_deck { "meta":..., "items":[...] }
    args_text = m.text.partition(" ")[2].strip()
    if not args_text:
        await m.answer("–ü—Ä–∏—à–ª–∏ JSON –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä:\n"
                       "/import_deck {\"meta\":{\"lang\":\"ru\",\"version\":1},\"items\":[{...}]}")
        return
    try:
        payload = json.loads(args_text)
        items = payload.get("items", [])
        if not isinstance(items, list):
            await m.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: –ø–æ–ª–µ items –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º.")
            return

        existing_ids = {card.get("id") for card in DEFAULT_DECK + game.extra_deck}
        added = 0
        skipped = 0
        batch_ids: Set[str] = set()

        for raw in items:
            if not isinstance(raw, dict):
                skipped += 1
                continue
            if not all(key in raw for key in ("id", "type", "category", "age", "text")):
                skipped += 1
                continue

            card_id = str(raw["id"]).strip()
            card_type = str(raw["type"]).strip()
            category = raw["category"]
            age = raw["age"]
            text = str(raw["text"]).strip()

            if (
                not card_id
                or card_type not in {"truth", "dare"}
                or category not in CATEGORY_INFO
                or age not in AGE_LEVELS
                or not text
                or card_id in existing_ids
                or card_id in batch_ids
            ):
                skipped += 1
                continue

            tags = raw.get("tags")
            card = {
                "id": card_id,
                "type": card_type,
                "category": category,
                "age": age,
                "tags": tags if isinstance(tags, list) else [],
                "text": text,
            }
            apply_safety_note([card])
            game.extra_deck.append(card)
            existing_ids.add(card_id)
            batch_ids.add(card_id)
            added += 1

        if added:
            reset_deck_cache(game, clear_used=True)
        summary = f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: <b>{added}</b>"
        if skipped:
            summary += f"\n‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: <b>{skipped}</b> (–¥—É–±–ª–∏ –∏–ª–∏ –æ—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞)"
        await m.answer(summary)
    except Exception as e:
        await m.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")


@dp.message(F.text)
async def handle_pending_player_name(m: Message):
    key = (m.chat.id, m.from_user.id)
    text = (m.text or "").strip()
    if not text:
        return

    lowered = text.lower()
    rename_pending = PENDING_PLAYER_RENAMES.get(key)
    if rename_pending:
        if lowered in {"–æ—Ç–º–µ–Ω–∞", "/cancel"}:
            PENDING_PLAYER_RENAMES.pop(key, None)
            await m.answer(message("RENAME_CANCELLED"))
            game = ensure_game(m.chat.id)
            if game and game.player_menu_message_id:
                await show_player_menu(game, menu="rename")
            return

        if text.startswith("/") and len(text) > 1:
            await m.answer(message("RENAME_COMMAND_ERROR"))
            return

        game = ensure_game(m.chat.id)
        if not game:
            PENDING_PLAYER_RENAMES.pop(key, None)
            await m.answer(message("GAME_NOT_FOUND"))
            return

        player = get_player(game, rename_pending.player_id)
        if not player:
            PENDING_PLAYER_RENAMES.pop(key, None)
            await m.answer(message("PLAYER_NOT_FOUND"))
            if game.player_menu_message_id:
                await show_player_menu(game, menu="rename")
            return

        new_name = prepare_player_name(game, text, exclude_id=player.user_id)
        player.name = new_name
        PENDING_PLAYER_RENAMES.pop(key, None)
        await m.answer(message("RENAME_DONE", name=html.escape(new_name)))
        await refresh_lobby(game)
        if game.player_menu_message_id:
            await show_player_menu(game, menu="rename")
        return

    pending = PENDING_PLAYER_ADDITIONS.get(key)
    if not pending:
        return

    if lowered in {"–æ—Ç–º–µ–Ω–∞", "/cancel"}:
        prompt_id = getattr(pending, "message_id", None)
        PENDING_PLAYER_ADDITIONS.pop(key, None)
        await m.answer(message("NAME_CANCELLED"))
        await safe_delete_message(m.chat.id, prompt_id)
        game = ensure_game(m.chat.id)
        if game:
            await refresh_lobby(game)
        return

    if text.startswith("/") and len(text) > 1:
        await m.answer(message("NAME_COMMAND_ERROR"))
        return

    game = ensure_game(m.chat.id)
    if not game:
        prompt_id = getattr(pending, "message_id", None)
        PENDING_PLAYER_ADDITIONS.pop(key, None)
        await m.answer(message("GAME_NOT_FOUND"))
        await safe_delete_message(m.chat.id, prompt_id)
        return

    if game.in_progress:
        prompt_id = getattr(pending, "message_id", None)
        PENDING_PLAYER_ADDITIONS.pop(key, None)
        await m.answer(message("ADD_LOBBY_ONLY"))
        await safe_delete_message(m.chat.id, prompt_id)
        return

    new_id = allocate_virtual_id(game)
    player = register_player(game, new_id, text, is_virtual=True)
    prompt_id = getattr(pending, "message_id", None)
    PENDING_PLAYER_ADDITIONS.pop(key, None)

    if not player:
        await m.answer(message("NAME_ADD_FAILED"))
        await safe_delete_message(game.chat_id, prompt_id)
        await refresh_lobby(game)
        return

    await safe_delete_message(game.chat_id, prompt_id)
    await m.answer(message("NAME_ADDED", name=html.escape(player.name)))
    await refresh_lobby(game, force_new=True)

# ===========================
# CALLBACKS (Inline)
# ===========================
@dp.callback_query(F.data == "add_player")
async def cb_add_player(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game:
        await c.answer(message("GAME_NOT_FOUND"), show_alert=True)
        return
    if not is_host(game, c.from_user.id):
        await c.answer(message("ADD_HOST_ONLY"), show_alert=True)
        return
    if game.in_progress:
        await c.answer(message("ADD_LOBBY_ONLY"), show_alert=True)
        return

    key = (chat_id, c.from_user.id)
    pending = PENDING_PLAYER_ADDITIONS.get(key)
    if pending:
        await c.message.answer(message("NAME_PENDING"))
        await c.answer()
        return

    pending_entry = PendingPlayerAddition(chat_id=chat_id, host_id=c.from_user.id)
    PENDING_PLAYER_ADDITIONS[key] = pending_entry
    await refresh_lobby(game)
    cancel_markup = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥", callback_data="cancel_add")]]
    )
    prompt = await c.message.answer(
        message("NAME_PROMPT"),
        reply_markup=cancel_markup,
    )
    pending_entry.message_id = prompt.message_id
    await c.answer()


@dp.callback_query(F.data == "cancel_add")
async def cb_cancel_add(c: CallbackQuery):
    chat_id = c.message.chat.id
    entry = get_pending_addition(chat_id)
    game = ensure_game(chat_id)

    if not entry:
        await c.answer(message("CANCEL_NOT_EXPECTED"), show_alert=True)
        return

    key, pending = entry
    if pending.host_id != c.from_user.id:
        await c.answer(message("CANCEL_HOST_ONLY"), show_alert=True)
        return

    PENDING_PLAYER_ADDITIONS.pop(key, None)
    await safe_delete_message(chat_id, getattr(pending, "message_id", None))
    await c.answer(message("INPUT_CANCELLED"))
    if game:
        await refresh_lobby(game)


@dp.callback_query(F.data == "manage_players")
async def cb_manage_players(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game:
        await c.answer(message("GAME_NOT_FOUND"), show_alert=True)
        return
    if not is_host(game, c.from_user.id):
        await c.answer(message("MANAGE_HOST_ONLY"), show_alert=True)
        return
    if game.in_progress:
        await c.answer(message("MANAGE_LOBBY_ONLY"), show_alert=True)
        return
    await c.answer()
    await show_player_menu(game, menu="root")


@dp.callback_query(F.data.startswith("pm:"))
async def cb_player_menu(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game:
        await c.answer(message("GAME_NOT_FOUND"), show_alert=True)
        return
    if not is_host(game, c.from_user.id):
        await c.answer(message("MANAGE_HOST_ONLY"), show_alert=True)
        return
    if game.in_progress:
        await c.answer(message("MANAGE_LOBBY_ONLY"), show_alert=True)
        return

    parts = c.data.split(":")
    action = parts[1] if len(parts) > 1 else ""

    if action == "close":
        await close_player_menu(game)
        await c.answer()
        return

    if action == "menu" and len(parts) > 2:
        await show_player_menu(game, menu=parts[2])
        await c.answer()
        return

    if action == "rename" and len(parts) > 2:
        try:
            player_id = int(parts[2])
        except ValueError:
            await c.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–≥—Ä–æ–∫.", show_alert=True)
            return
        player = get_player(game, player_id)
        if not player:
            await c.answer(message("PLAYER_NOT_FOUND"), show_alert=True)
            if game.player_menu_message_id:
                await show_player_menu(game, menu="rename")
            return
        key = (chat_id, c.from_user.id)
        PENDING_PLAYER_RENAMES[key] = PendingPlayerRename(
            chat_id=chat_id, host_id=c.from_user.id, player_id=player_id
        )
        await c.answer()
        await c.message.answer(
            message("RENAME_PROMPT", name=html.escape(player.name))
        )
        return

    if action == "move" and len(parts) > 3:
        direction = parts[2]
        try:
            player_id = int(parts[3])
        except ValueError:
            await c.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–≥—Ä–æ–∫.", show_alert=True)
            return

        players = game.players
        target_index = next((i for i, p in enumerate(players) if p.user_id == player_id), None)
        if target_index is None:
            await c.answer(message("PLAYER_NOT_FOUND"), show_alert=True)
            return

        if direction == "up":
            if target_index == 0:
                await c.answer(message("ALREADY_FIRST"), show_alert=True)
                return
            offset = -1
        elif direction == "down":
            if target_index == len(players) - 1:
                await c.answer(message("ALREADY_LAST"), show_alert=True)
                return
            offset = 1
        else:
            await c.answer()
            return

        if move_player_in_list(game, player_id, offset):
            await refresh_lobby(game)
            if game.player_menu_message_id:
                await show_player_menu(game, menu="reorder")
            await c.answer(message("MOVE_UPDATED"))
        else:
            await c.answer(message("MOVE_FAILED"), show_alert=True)
        return

    if action == "delete" and len(parts) > 2:
        try:
            player_id = int(parts[2])
        except ValueError:
            await c.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–≥—Ä–æ–∫.", show_alert=True)
            return
        removed, removed_current = drop_player(game, player_id)
        if removed:
            rename_key = (chat_id, c.from_user.id)
            info = PENDING_PLAYER_RENAMES.get(rename_key)
            if info and info.player_id == player_id:
                PENDING_PLAYER_RENAMES.pop(rename_key, None)
            await refresh_lobby(game, force_new=True)
            if game.player_menu_message_id:
                await show_player_menu(game, menu="delete")
            if removed_current:
                await cancel_timer(game)
                if game.in_progress and game.players:
                    await proceed_next(game, note=message("DELETE_CONTINUE_NOTE"))
                elif game.in_progress and not game.players:
                    await end_game_session(
                        game,
                        message("NO_PLAYERS_END"),
                        keep_game=False,
                    )
            await c.answer(message("DELETE_DONE"))
        else:
            await c.answer(message("DELETE_FAILED"), show_alert=True)
        return

    if action == "noop":
        await c.answer()
        return

    await c.answer()

@dp.callback_query(F.data == "start")
async def cb_start(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game:
        await c.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True); return
    if not is_host(game, c.from_user.id):
        await c.answer("–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π.", show_alert=True); return
    if len(game.players) < 2:
        await c.answer("–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –∏–≥—Ä–æ–∫–∞.", show_alert=True); return

    game.in_progress = True
    game.current_idx = -1
    reset_deck_cache(game, clear_used=True)
    game.rounds_played = 0
    cleanup_scores(game)
    await close_settings_menu(game)
    await close_player_menu(game)

    game.panel_message_id = c.message.message_id
    game.lobby_message_id = None
    await update_panel_message(game, "üé≤ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –ø–µ—Ä–≤–æ–º—É –≤–æ–ø—Ä–æ—Å—É.")
    await next_turn(game)


@dp.callback_query(F.data == "exit")
async def cb_exit(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game:
        await c.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)
        return
    if not is_host(game, c.from_user.id):
        await c.answer("–ó–∞–∫—Ä—ã—Ç—å –ª–æ–±–±–∏ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã.", show_alert=True)
        return
    await c.answer()
    await end_game_session(
        game,
        "üö™ –õ–æ–±–±–∏ –∑–∞–∫—Ä—ã—Ç–æ. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        return_to_menu=True,
        keep_game=False,
    )

async def next_turn(game: ChatGame):
    await cancel_timer(game)
    if next_index(game) == -1:
        await update_panel_message(game, "–ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä–æ–∫–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.")
        return

    pl = game.current_player()
    if not pl:
        await update_panel_message(game, "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞. –î–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return

    names = [p.name for p in game.players]
    await update_panel_message(game, "üéØ –í—ã–±–∏—Ä–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞...")
    for _ in range(SPINNER_STEPS):
        nm = html.escape(random.choice(names))
        await asyncio.sleep(SPINNER_DELAY)
        await update_panel_message(game, f"üéØ –í—ã–±–∏—Ä–∞–µ–º... <b>{nm}</b>")

    categories_text = describe_categories(get_selected_categories(game))
    timer_text = describe_timer(game.settings.get("timer", 0))
    players_count = len(game.players)
    prompt = (
        f"üëâ –•–æ–¥ –∏–≥—Ä–æ–∫–∞: <b>{html.escape(pl.name)}</b> ({players_count} –∏–≥—Ä–æ–∫–æ–≤)\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories_text} | –¢–∞–π–º–µ—Ä: {timer_text}\n\n"
        f"{render_player_link(pl)}, –≤—ã–±–µ—Ä–∏ <b>–ü—Ä–∞–≤–¥–∞</b> –∏–ª–∏ <b>–î–µ–π—Å—Ç–≤–∏–µ</b>."
    )
    keyboard = turn_choice_keyboard(game, show_end=True)
    await update_panel_message(game, prompt, reply_markup=keyboard)
    game.current_turn = Turn(player_id=pl.user_id, message_id=game.panel_message_id)

@dp.callback_query(F.data.in_({"truth","dare"}))
async def cb_pick_type(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game or not game.in_progress:
        await c.answer("–ò–≥—Ä–∞ –Ω–µ –∏–¥—ë—Ç.", show_alert=True); return
    # –≤–µ–¥—É—â–∏–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ö–æ–¥–æ–º —Å –æ–¥–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —Å–∞–º –∏–≥—Ä–æ–∫
    turn = game.current_turn
    if not turn or not can_control_turn(game, c.from_user.id):
        await c.answer("–°–µ–π—á–∞—Å —Ö–æ–¥ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞.", show_alert=True); return

    kind = "truth" if c.data == "truth" else "dare"
    card, restarted = pick_card(game, kind)
    if not card:
        await end_game_session(game, "üì¶ –ö–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        await c.answer("–ö–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.", show_alert=True)
        return

    if restarted:
        await bot.send_message(chat_id, "üì¶ –ö–æ–ª–æ–¥–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞ ‚Äî –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º!")

    game.used_ids.add(card["id"])
    turn.type = kind
    turn.card_id = card["id"]

    # –ü–æ–∫–∞–∑ –∑–∞–¥–∞–Ω–∏—è
    await update_panel_message(
        game,
        f"üëâ <b>–•–æ–¥:</b> {get_player_display(game, turn.player_id)}\n"
        f"{'üü¶ –ü—Ä–∞–≤–¥–∞' if kind=='truth' else 'üü• –î–µ–π—Å—Ç–≤–∏–µ'}:\n"
        f"{card['text']}",
        reply_markup=task_keyboard(game, for_host=True, allow_reroll=not turn.rerolled),
    )
    turn.message_id = game.panel_message_id

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    async def on_expire():
        # –µ—Å–ª–∏ –∫ —ç—Ç–æ–º—É –º–æ–º–µ–Ω—Ç—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ/–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ ‚Äî –∞–≤—Ç–æ–ø—Ä–æ–ø—É—Å–∫
        await handle_skip(chat_id, reason="‚è±Ô∏è –í—Ä–µ–º—è –≤—ã—à–ª–æ ‚Äî –ø—Ä–æ–ø—É—Å–∫.")
    await start_timer(game, game.settings["timer"], on_expire)
    await c.answer()


@dp.callback_query(F.data == "reroll")
async def cb_reroll(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game or not game.current_turn:
        await c.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.", show_alert=True)
        return
    if not can_control_turn(game, c.from_user.id):
        await c.answer("–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É.", show_alert=True)
        return

    turn = game.current_turn
    if not turn.type:
        await c.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ ¬´–ü—Ä–∞–≤–¥–∞¬ª –∏–ª–∏ ¬´–î–µ–π—Å—Ç–≤–∏–µ¬ª.", show_alert=True)
        return
    if turn.rerolled:
        await c.answer("–ü–µ—Ä–µ—Ç–∞—Å–æ–≤–∫–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ —ç—Ç–æ–º —Ö–æ–¥—É.", show_alert=True)
        return

    previous_card_id = turn.card_id
    if previous_card_id:
        queue = game.deck_cache.setdefault(turn.type, [])
        if previous_card_id not in queue:
            queue.insert(0, previous_card_id)
        game.used_ids.discard(previous_card_id)

    card, restarted = pick_card(
        game,
        turn.type,
        exclude={previous_card_id} if previous_card_id else None,
    )
    if not card:
        await c.answer("–ö–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.", show_alert=True)
        return

    if restarted:
        await bot.send_message(chat_id, "üì¶ –ö–æ–ª–æ–¥–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞ ‚Äî –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º!")

    turn.card_id = card["id"]
    turn.rerolled = True
    game.used_ids.add(card["id"])

    await cancel_timer(game)
    await update_panel_message(
        game,
        f"üëâ <b>–•–æ–¥:</b> {get_player_display(game, turn.player_id)}\n"
        f"{'üü¶ –ü—Ä–∞–≤–¥–∞' if turn.type=='truth' else 'üü• –î–µ–π—Å—Ç–≤–∏–µ'}:\n"
        f"{card['text']}",
        reply_markup=task_keyboard(game, for_host=True, allow_reroll=False),
    )

    async def on_expire():
        await handle_skip(chat_id, reason="‚è±Ô∏è –í—Ä–µ–º—è –≤—ã—à–ª–æ ‚Äî –ø—Ä–æ–ø—É—Å–∫.")

    await start_timer(game, game.settings["timer"], on_expire)
    if previous_card_id and card["id"] == previous_card_id:
        await c.answer(message("CARD_REROLL_NO_OPTIONS"))
    else:
        await c.answer(message("CARD_REROLL_OK"))

@dp.callback_query(F.data == "skip")
async def cb_skip(c: CallbackQuery):
    await c.answer()
    await handle_skip(c.message.chat.id, reason="üîÅ –ü—Ä–æ–ø—É—Å–∫.")

async def handle_skip(chat_id: int, reason: str):
    game = ensure_game(chat_id)
    if not game: return
    await cancel_timer(game)
    # —à—Ç—Ä–∞—Ñ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
    penalty_note = ""
    if game.settings["skip_penalty"] == -1 and game.settings["points"] and game.current_turn:
        uid = game.current_turn.player_id
        game.scores[uid] = game.scores.get(uid, 0) - 1
        penalty_note = " (‚àí1 –æ—á–∫–æ)"
    game.rounds_played += 1
    game.current_turn = None
    note = f"{reason}{penalty_note}\n\n‚ñ∂Ô∏è –ü–æ–¥–±–∏—Ä–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞..."
    await proceed_next(game, note=note)

@dp.callback_query(F.data == "done")
async def cb_done(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game or not game.current_turn:
        await c.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.", show_alert=True); return
    if not can_control_turn(game, c.from_user.id):
        await c.answer("–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ö–æ–¥.", show_alert=True)
        return
    await finalize_task(chat_id, success=True, by="‚úÖ –ó–∞–¥–∞–Ω–∏–µ –∑–∞—á—Ç–µ–Ω–æ!")
    await c.answer()

async def finalize_task(chat_id: int, success: bool, by: str):
    game = ensure_game(chat_id)
    if not game or not game.current_turn: return
    await cancel_timer(game)
    turn = game.current_turn

    # –û—á–∫–∏
    if game.settings["points"] and turn.player_id:
        game.scores.setdefault(turn.player_id, 0)
        if success:
            game.scores[turn.player_id] += 1

    if not game.settings["points"]:
        points_text = "–û—á–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã."
    else:
        points_text = "–û—á–∫–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ!" if success else "–û—á–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π."

    result_text = f"{by}. {points_text}"

    game.rounds_played += 1
    game.current_turn = None
    await proceed_next(game, note=f"{result_text}\n\n‚ñ∂Ô∏è –ü–æ–¥–±–∏—Ä–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞...")

async def proceed_next(game: ChatGame, note: Optional[str] = None):
    if not game or not game.in_progress:
        return
    if note:
        await update_panel_message(game, note)
        await asyncio.sleep(1.0)
    await next_turn(game)

@dp.callback_query(F.data == "end")
async def cb_end(c: CallbackQuery):
    chat_id = c.message.chat.id
    game = ensure_game(chat_id)
    if not game:
        await c.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True); return
    if not is_host(game, c.from_user.id):
        await c.answer("–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç, –∫—Ç–æ –µ—ë –∑–∞–ø—É—Å—Ç–∏–ª.", show_alert=True); return
    await end_game_session(game, "üèÅ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!")
    await c.answer()

# ====== SETTINGS ======

@dp.callback_query(F.data == "settings")
async def cb_settings(c: CallbackQuery):
    game = ensure_game(c.message.chat.id)
    if not game:
        await c.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True); return
    await show_settings_menu(game)
    await c.answer()

@dp.callback_query(F.data.startswith("st:"))
async def cb_settings_router(c: CallbackQuery):
    game = ensure_game(c.message.chat.id)
    if not game:
        await c.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", show_alert=True)
        return

    parts = c.data.split(":")
    action = parts[1]

    if action == "menu":
        menu = parts[2] if len(parts) > 2 else "root"
        await show_settings_menu(game, menu=menu, message=c.message)
        await c.answer()
        return

    if action == "close":
        await close_settings_menu(game)
        await c.answer("–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ")
        return

    if not is_host(game, c.from_user.id):
        await c.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∏–≥—Ä—ã.", show_alert=True)
        return

    if action == "set" and len(parts) >= 4:
        target, value = parts[2], parts[3]
        if target == "timer":
            val = int(value)
            if val not in TIMER_OPTIONS:
                await c.answer("–¢–∞–∫–æ–π —Ç–∞–π–º–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", show_alert=True)
                return
            game.settings["timer"] = val
            await c.answer("–¢–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª—ë–Ω")
            await show_settings_menu(game, menu="timer", message=c.message)
            return
        if target == "age" and value in AGE_LEVELS:
            game.settings["age_level"] = value
            reset_deck_cache(game, clear_used=True)
            await c.answer("–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —É—Ä–æ–≤–µ–Ω—å –∏–∑–º–µ–Ω—ë–Ω")
            await show_settings_menu(game, menu="age", message=c.message)
            return
    if action == "toggle" and len(parts) >= 3:
        toggle_target = parts[2]
        if toggle_target == "points":
            game.settings["points"] = not game.settings.get("points", True)
            await c.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—á–∫–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–∞")
        elif toggle_target == "penalty":
            game.settings["skip_penalty"] = -1 if game.settings.get("skip_penalty", 0) == 0 else 0
            await c.answer("–®—Ç—Ä–∞—Ñ –æ–±–Ω–æ–≤–ª—ë–Ω")
        elif toggle_target == "category" and len(parts) >= 4:
            value = parts[3]
            if value not in CATEGORY_INFO:
                await c.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è", show_alert=True)
                return
            selected = set(get_selected_categories(game))
            if value in selected and len(selected) == 1:
                await c.answer("–ù—É–∂–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è", show_alert=True)
                return
            if value in selected:
                selected.remove(value)
            else:
                selected.add(value)
            game.settings["categories"] = set(selected)
            reset_deck_cache(game, clear_used=True)
            await c.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            await show_settings_menu(game, menu="category", message=c.message)
            return
        await show_settings_menu(game, menu="other", message=c.message)
        return

    await c.answer()

# ===========================
# MAIN
# ===========================

async def main():
    print("‚úÖ Bot is running...")
    await dp.start_polling(bot, allowed_updates=["message", "callback_query"])

if __name__ == "__main__":
    asyncio.run(main())
